# serializer version: 1
# name: test_entity[climate.altherma_leaving_water_offset-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
      ]),
      'max_temp': 10,
      'min_temp': -10,
      'preset_modes': list([
        'none',
        'away',
      ]),
      'target_temp_step': 1,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'climate',
    'entity_category': None,
    'entity_id': 'climate.altherma_leaving_water_offset',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Altherma Leaving Water Offset',
    'platform': 'daikin_onecta',
    'supported_features': <ClimateEntityFeature: 17>,
    'translation_key': 'daikin_onecta',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_leavingWaterOffset',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[climate.altherma_leaving_water_offset-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 0,
      'friendly_name': 'Altherma Leaving Water Offset',
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
      ]),
      'max_temp': 10,
      'min_temp': -10,
      'preset_mode': 'none',
      'preset_modes': list([
        'none',
        'away',
      ]),
      'supported_features': <ClimateEntityFeature: 17>,
      'target_temp_step': 1,
      'temperature': 0,
    }),
    'context': <ANY>,
    'entity_id': 'climate.altherma_leaving_water_offset',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'heat',
  })
# ---
# name: test_entity[climate.altherma_leaving_water_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
      ]),
      'max_temp': None,
      'min_temp': None,
      'preset_modes': list([
        'none',
        'away',
      ]),
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'climate',
    'entity_category': None,
    'entity_id': 'climate.altherma_leaving_water_temperature',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Altherma Leaving Water Temperature',
    'platform': 'daikin_onecta',
    'supported_features': <ClimateEntityFeature: 16>,
    'translation_key': 'daikin_onecta',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_leavingWaterTemperature',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[climate.altherma_leaving_water_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 27,
      'friendly_name': 'Altherma Leaving Water Temperature',
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
      ]),
      'max_temp': None,
      'min_temp': None,
      'preset_mode': 'none',
      'preset_modes': list([
        'none',
        'away',
      ]),
      'supported_features': <ClimateEntityFeature: 16>,
    }),
    'context': <ANY>,
    'entity_id': 'climate.altherma_leaving_water_temperature',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'heat',
  })
# ---
# name: test_entity[climate.altherma_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
      ]),
      'max_temp': 23,
      'min_temp': 18,
      'preset_modes': list([
        'none',
        'away',
      ]),
      'target_temp_step': 0.5,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'climate',
    'entity_category': None,
    'entity_id': 'climate.altherma_room_temperature',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Altherma Room Temperature',
    'platform': 'daikin_onecta',
    'supported_features': <ClimateEntityFeature: 17>,
    'translation_key': 'daikin_onecta',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_roomTemperature',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[climate.altherma_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 19.1,
      'friendly_name': 'Altherma Room Temperature',
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
      ]),
      'max_temp': 23,
      'min_temp': 18,
      'preset_mode': 'none',
      'preset_modes': list([
        'none',
        'away',
      ]),
      'supported_features': <ClimateEntityFeature: 17>,
      'target_temp_step': 0.5,
      'temperature': 19,
    }),
    'context': <ANY>,
    'entity_id': 'climate.altherma_room_temperature',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'heat',
  })
# ---
# name: test_entity[climate.johnny_maaike_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'fan_modes': list([
        'auto',
        'quiet',
        '1',
        '2',
        '3',
        '4',
        '5',
      ]),
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
        <HVACMode.DRY: 'dry'>,
      ]),
      'max_temp': 31,
      'min_temp': 10,
      'preset_modes': list([
        'none',
        'boost',
        'away',
      ]),
      'swing_modes': list([
        'off',
        'horizontal',
        'vertical',
        'both',
        'Comfort Airflow',
        'Comfort Airflow and Horizontal',
      ]),
      'target_temp_step': 0.5,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'climate',
    'entity_category': None,
    'entity_id': 'climate.johnny_maaike_room_temperature',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Johnny&Maaike Room Temperature',
    'platform': 'daikin_onecta',
    'supported_features': <ClimateEntityFeature: 57>,
    'translation_key': 'daikin_onecta',
    'unique_id': '32db6075-b739-4026-b661-127009254b42_roomTemperature',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[climate.johnny_maaike_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 18,
      'fan_mode': 'auto',
      'fan_modes': list([
        'auto',
        'quiet',
        '1',
        '2',
        '3',
        '4',
        '5',
      ]),
      'friendly_name': 'Johnny&Maaike Room Temperature',
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
        <HVACMode.DRY: 'dry'>,
      ]),
      'max_temp': 31,
      'min_temp': 10,
      'preset_mode': 'none',
      'preset_modes': list([
        'none',
        'boost',
        'away',
      ]),
      'supported_features': <ClimateEntityFeature: 57>,
      'swing_mode': 'off',
      'swing_modes': list([
        'off',
        'horizontal',
        'vertical',
        'both',
        'Comfort Airflow',
        'Comfort Airflow and Horizontal',
      ]),
      'target_temp_step': 0.5,
      'temperature': 23.5,
    }),
    'context': <ANY>,
    'entity_id': 'climate.johnny_maaike_room_temperature',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_entity[climate.linde_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'fan_modes': list([
        'auto',
        'quiet',
        '1',
        '2',
        '3',
        '4',
        '5',
      ]),
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
        <HVACMode.DRY: 'dry'>,
      ]),
      'max_temp': 31,
      'min_temp': 10,
      'preset_modes': list([
        'none',
        'boost',
        'away',
      ]),
      'swing_modes': list([
        'off',
        'horizontal',
        'vertical',
        'both',
        'Comfort Airflow',
        'Comfort Airflow and Horizontal',
      ]),
      'target_temp_step': 0.5,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'climate',
    'entity_category': None,
    'entity_id': 'climate.linde_room_temperature',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Linde Room Temperature',
    'platform': 'daikin_onecta',
    'supported_features': <ClimateEntityFeature: 57>,
    'translation_key': 'daikin_onecta',
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_roomTemperature',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[climate.linde_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 18,
      'fan_mode': 'auto',
      'fan_modes': list([
        'auto',
        'quiet',
        '1',
        '2',
        '3',
        '4',
        '5',
      ]),
      'friendly_name': 'Linde Room Temperature',
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
        <HVACMode.DRY: 'dry'>,
      ]),
      'max_temp': 31,
      'min_temp': 10,
      'preset_mode': 'none',
      'preset_modes': list([
        'none',
        'boost',
        'away',
      ]),
      'supported_features': <ClimateEntityFeature: 57>,
      'swing_mode': 'off',
      'swing_modes': list([
        'off',
        'horizontal',
        'vertical',
        'both',
        'Comfort Airflow',
        'Comfort Airflow and Horizontal',
      ]),
      'target_temp_step': 0.5,
      'temperature': 24,
    }),
    'context': <ANY>,
    'entity_id': 'climate.linde_room_temperature',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_entity[climate.sanne_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'fan_modes': list([
        'auto',
        'quiet',
        '1',
        '2',
        '3',
        '4',
        '5',
      ]),
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
        <HVACMode.DRY: 'dry'>,
      ]),
      'max_temp': 31,
      'min_temp': 10,
      'preset_modes': list([
        'none',
        'boost',
        'away',
      ]),
      'swing_modes': list([
        'off',
        'horizontal',
        'vertical',
        'both',
        'Comfort Airflow',
        'Comfort Airflow and Horizontal',
      ]),
      'target_temp_step': 0.5,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'climate',
    'entity_category': None,
    'entity_id': 'climate.sanne_room_temperature',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Sanne Room Temperature',
    'platform': 'daikin_onecta',
    'supported_features': <ClimateEntityFeature: 57>,
    'translation_key': 'daikin_onecta',
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_roomTemperature',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[climate.sanne_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 17,
      'fan_mode': 'quiet',
      'fan_modes': list([
        'auto',
        'quiet',
        '1',
        '2',
        '3',
        '4',
        '5',
      ]),
      'friendly_name': 'Sanne Room Temperature',
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
        <HVACMode.DRY: 'dry'>,
      ]),
      'max_temp': 31,
      'min_temp': 10,
      'preset_mode': 'none',
      'preset_modes': list([
        'none',
        'boost',
        'away',
      ]),
      'supported_features': <ClimateEntityFeature: 57>,
      'swing_mode': 'off',
      'swing_modes': list([
        'off',
        'horizontal',
        'vertical',
        'both',
        'Comfort Airflow',
        'Comfort Airflow and Horizontal',
      ]),
      'target_temp_step': 0.5,
      'temperature': 21,
    }),
    'context': <ANY>,
    'entity_id': 'climate.sanne_room_temperature',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_entity[climate.werkkamer_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'fan_modes': list([
        'auto',
        'quiet',
        '1',
        '2',
        '3',
        '4',
        '5',
      ]),
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
        <HVACMode.DRY: 'dry'>,
      ]),
      'max_temp': 31,
      'min_temp': 10,
      'preset_modes': list([
        'none',
        'boost',
        'away',
      ]),
      'swing_modes': list([
        'off',
        'horizontal',
        'vertical',
        'both',
        'Comfort Airflow',
        'Comfort Airflow and Horizontal',
      ]),
      'target_temp_step': 0.5,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'climate',
    'entity_category': None,
    'entity_id': 'climate.werkkamer_room_temperature',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Werkkamer Room Temperature',
    'platform': 'daikin_onecta',
    'supported_features': <ClimateEntityFeature: 57>,
    'translation_key': 'daikin_onecta',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_roomTemperature',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[climate.werkkamer_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 18,
      'fan_mode': 'quiet',
      'fan_modes': list([
        'auto',
        'quiet',
        '1',
        '2',
        '3',
        '4',
        '5',
      ]),
      'friendly_name': 'Werkkamer Room Temperature',
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
        <HVACMode.DRY: 'dry'>,
      ]),
      'max_temp': 31,
      'min_temp': 10,
      'preset_mode': 'none',
      'preset_modes': list([
        'none',
        'boost',
        'away',
      ]),
      'supported_features': <ClimateEntityFeature: 57>,
      'swing_mode': 'off',
      'swing_modes': list([
        'off',
        'horizontal',
        'vertical',
        'both',
        'Comfort Airflow',
        'Comfort Airflow and Horizontal',
      ]),
      'target_temp_step': 0.5,
      'temperature': 21,
    }),
    'context': <ANY>,
    'entity_id': 'climate.werkkamer_room_temperature',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_entity[sensor.altherma_climatecontrol_control_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_control_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:alphabetical',
    'original_name': 'ClimateControl Control Mode',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_None_controlMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.altherma_climatecontrol_control_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma ClimateControl Control Mode',
      'icon': 'mdi:alphabetical',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_control_mode',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'roomTemperature',
  })
# ---
# name: test_entity[sensor.altherma_climatecontrol_cooling_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_cooling_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_electrical_cooling_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_entity[sensor.altherma_climatecontrol_cooling_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Altherma ClimateControl Cooling Daily Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_cooling_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_entity[sensor.altherma_climatecontrol_cooling_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_cooling_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_electrical_cooling_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_entity[sensor.altherma_climatecontrol_cooling_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Altherma ClimateControl Cooling Weekly Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_cooling_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_entity[sensor.altherma_climatecontrol_cooling_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_cooling_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_electrical_cooling_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_entity[sensor.altherma_climatecontrol_cooling_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Altherma ClimateControl Cooling Yearly Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_cooling_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_entity[sensor.altherma_climatecontrol_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_climatecontrol_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Error Code',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.altherma_climatecontrol_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma ClimateControl Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_error_code',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_entity[sensor.altherma_climatecontrol_heating_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_heating_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_electrical_heating_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_entity[sensor.altherma_climatecontrol_heating_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Altherma ClimateControl Heating Daily Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_heating_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_entity[sensor.altherma_climatecontrol_heating_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_heating_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_electrical_heating_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_entity[sensor.altherma_climatecontrol_heating_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Altherma ClimateControl Heating Weekly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_heating_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_entity[sensor.altherma_climatecontrol_heating_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_heating_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_electrical_heating_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_entity[sensor.altherma_climatecontrol_heating_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Altherma ClimateControl Heating Yearly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_heating_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '1028',
  })
# ---
# name: test_entity[sensor.altherma_climatecontrol_is_holiday_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_climatecontrol_is_holiday_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Holiday Mode Active',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_None_isHolidayModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.altherma_climatecontrol_is_holiday_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma ClimateControl Is Holiday Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_is_holiday_mode_active',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'False',
  })
# ---
# name: test_entity[sensor.altherma_climatecontrol_is_in_emergency_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_climatecontrol_is_in_emergency_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Emergency State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_None_isInEmergencyState',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.altherma_climatecontrol_is_in_emergency_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma ClimateControl Is In Emergency State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_is_in_emergency_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'False',
  })
# ---
# name: test_entity[sensor.altherma_climatecontrol_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_climatecontrol_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Error State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.altherma_climatecontrol_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma ClimateControl Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_is_in_error_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'False',
  })
# ---
# name: test_entity[sensor.altherma_climatecontrol_is_in_installer_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_climatecontrol_is_in_installer_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Installer State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_None_isInInstallerState',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.altherma_climatecontrol_is_in_installer_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma ClimateControl Is In Installer State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_is_in_installer_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'False',
  })
# ---
# name: test_entity[sensor.altherma_climatecontrol_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_climatecontrol_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Warning State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.altherma_climatecontrol_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma ClimateControl Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_is_in_warning_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'False',
  })
# ---
# name: test_entity[sensor.altherma_climatecontrol_leaving_water_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_leaving_water_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Leaving Water Temperature',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_sensoryData_leavingWaterTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_entity[sensor.altherma_climatecontrol_leaving_water_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Altherma ClimateControl Leaving Water Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_leaving_water_temperature',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '27',
  })
# ---
# name: test_entity[sensor.altherma_climatecontrol_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_climatecontrol_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Name',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.altherma_climatecontrol_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma ClimateControl Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_name',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'Altherma',
  })
# ---
# name: test_entity[sensor.altherma_climatecontrol_outdoor_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_outdoor_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Outdoor Temperature',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_sensoryData_outdoorTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_entity[sensor.altherma_climatecontrol_outdoor_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Altherma ClimateControl Outdoor Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_outdoor_temperature',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '12',
  })
# ---
# name: test_entity[sensor.altherma_climatecontrol_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_room_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Room Temperature',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_sensoryData_roomTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_entity[sensor.altherma_climatecontrol_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Altherma ClimateControl Room Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_room_temperature',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '19.1',
  })
# ---
# name: test_entity[sensor.altherma_climatecontrol_setpoint_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_setpoint_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:alphabetical',
    'original_name': 'ClimateControl Setpoint Mode',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_None_setpointMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.altherma_climatecontrol_setpoint_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma ClimateControl Setpoint Mode',
      'icon': 'mdi:alphabetical',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_setpoint_mode',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'weatherDependentHeatingFixedCooling',
  })
# ---
# name: test_entity[sensor.altherma_domestichotwatertank_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_domestichotwatertank_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Error Code',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.altherma_domestichotwatertank_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma DomesticHotWaterTank Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_domestichotwatertank_error_code',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_entity[sensor.altherma_domestichotwatertank_heating_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_domestichotwatertank_heating_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'DomesticHotWaterTank Heating Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_electrical_heating_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_entity[sensor.altherma_domestichotwatertank_heating_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Altherma DomesticHotWaterTank Heating Daily Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_domestichotwatertank_heating_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_entity[sensor.altherma_domestichotwatertank_heating_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_domestichotwatertank_heating_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'DomesticHotWaterTank Heating Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_electrical_heating_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_entity[sensor.altherma_domestichotwatertank_heating_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Altherma DomesticHotWaterTank Heating Weekly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_domestichotwatertank_heating_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_entity[sensor.altherma_domestichotwatertank_heating_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_domestichotwatertank_heating_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'DomesticHotWaterTank Heating Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_electrical_heating_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_entity[sensor.altherma_domestichotwatertank_heating_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Altherma DomesticHotWaterTank Heating Yearly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_domestichotwatertank_heating_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '277',
  })
# ---
# name: test_entity[sensor.altherma_domestichotwatertank_heatup_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_domestichotwatertank_heatup_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:alphabetical',
    'original_name': 'DomesticHotWaterTank Heatup Mode',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_None_heatupMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.altherma_domestichotwatertank_heatup_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma DomesticHotWaterTank Heatup Mode',
      'icon': 'mdi:alphabetical',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_domestichotwatertank_heatup_mode',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'reheatOnly',
  })
# ---
# name: test_entity[sensor.altherma_domestichotwatertank_is_holiday_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_domestichotwatertank_is_holiday_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Is Holiday Mode Active',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_None_isHolidayModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.altherma_domestichotwatertank_is_holiday_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma DomesticHotWaterTank Is Holiday Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_domestichotwatertank_is_holiday_mode_active',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'False',
  })
# ---
# name: test_entity[sensor.altherma_domestichotwatertank_is_in_emergency_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_domestichotwatertank_is_in_emergency_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Is In Emergency State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_None_isInEmergencyState',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.altherma_domestichotwatertank_is_in_emergency_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma DomesticHotWaterTank Is In Emergency State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_domestichotwatertank_is_in_emergency_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'False',
  })
# ---
# name: test_entity[sensor.altherma_domestichotwatertank_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_domestichotwatertank_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Is In Error State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.altherma_domestichotwatertank_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma DomesticHotWaterTank Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_domestichotwatertank_is_in_error_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'False',
  })
# ---
# name: test_entity[sensor.altherma_domestichotwatertank_is_in_installer_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_domestichotwatertank_is_in_installer_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Is In Installer State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_None_isInInstallerState',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.altherma_domestichotwatertank_is_in_installer_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma DomesticHotWaterTank Is In Installer State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_domestichotwatertank_is_in_installer_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'False',
  })
# ---
# name: test_entity[sensor.altherma_domestichotwatertank_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_domestichotwatertank_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Is In Warning State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.altherma_domestichotwatertank_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma DomesticHotWaterTank Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_domestichotwatertank_is_in_warning_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'False',
  })
# ---
# name: test_entity[sensor.altherma_domestichotwatertank_is_powerful_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_domestichotwatertank_is_powerful_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Is Powerful Mode Active',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_None_isPowerfulModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.altherma_domestichotwatertank_is_powerful_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma DomesticHotWaterTank Is Powerful Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_domestichotwatertank_is_powerful_mode_active',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'False',
  })
# ---
# name: test_entity[sensor.altherma_domestichotwatertank_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_domestichotwatertank_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Name',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.altherma_domestichotwatertank_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma DomesticHotWaterTank Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_domestichotwatertank_name',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_entity[sensor.altherma_domestichotwatertank_setpoint_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_domestichotwatertank_setpoint_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:alphabetical',
    'original_name': 'DomesticHotWaterTank Setpoint Mode',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_None_setpointMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.altherma_domestichotwatertank_setpoint_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma DomesticHotWaterTank Setpoint Mode',
      'icon': 'mdi:alphabetical',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_domestichotwatertank_setpoint_mode',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'fixed',
  })
# ---
# name: test_entity[sensor.altherma_domestichotwatertank_tank_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_domestichotwatertank_tank_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': 'mdi:bathtub-outline',
    'original_name': 'DomesticHotWaterTank Tank Temperature',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_sensoryData_tankTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_entity[sensor.altherma_domestichotwatertank_tank_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Altherma DomesticHotWaterTank Tank Temperature',
      'icon': 'mdi:bathtub-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_domestichotwatertank_tank_temperature',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '49',
  })
# ---
# name: test_entity[sensor.altherma_gateway_firmware_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_gateway_firmware_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Firmware Version',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_gateway_None_firmwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.altherma_gateway_firmware_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma Gateway Firmware Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_gateway_firmware_version',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '3.2.5',
  })
# ---
# name: test_entity[sensor.altherma_gateway_ip_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_gateway_ip_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:ip-network',
    'original_name': 'Gateway Ip Address',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_gateway_None_ipAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.altherma_gateway_ip_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma Gateway Ip Address',
      'icon': 'mdi:ip-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_gateway_ip_address',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '192.168.1.207',
  })
# ---
# name: test_entity[sensor.altherma_gateway_is_firmware_update_supported-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_gateway_is_firmware_update_supported',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Is Firmware Update Supported',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_gateway_None_isFirmwareUpdateSupported',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.altherma_gateway_is_firmware_update_supported-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma Gateway Is Firmware Update Supported',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_gateway_is_firmware_update_supported',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'True',
  })
# ---
# name: test_entity[sensor.altherma_gateway_mac_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_gateway_mac_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Mac Address',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_gateway_None_macAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.altherma_gateway_mac_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma Gateway Mac Address',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_gateway_mac_address',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '00:e9:3a:67:14:a6',
  })
# ---
# name: test_entity[sensor.altherma_gateway_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_gateway_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Model Info',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_gateway_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.altherma_gateway_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma Gateway Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_gateway_model_info',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'BRP069A78',
  })
# ---
# name: test_entity[sensor.altherma_gateway_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_gateway_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Name',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_gateway_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.altherma_gateway_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma Gateway Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_gateway_name',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'Gateway',
  })
# ---
# name: test_entity[sensor.altherma_indoorunithydro_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_indoorunithydro_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnitHydro Model Info',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_indoorUnitHydro_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.altherma_indoorunithydro_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma IndoorUnitHydro Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_indoorunithydro_model_info',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'EHVX08S23EJ9W',
  })
# ---
# name: test_entity[sensor.altherma_indoorunithydro_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_indoorunithydro_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnitHydro Name',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_indoorUnitHydro_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.altherma_indoorunithydro_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma IndoorUnitHydro Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_indoorunithydro_name',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'Indoor Hydro Unit',
  })
# ---
# name: test_entity[sensor.altherma_indoorunithydro_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_indoorunithydro_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnitHydro Software Version',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_indoorUnitHydro_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.altherma_indoorunithydro_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma IndoorUnitHydro Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_indoorunithydro_software_version',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0223',
  })
# ---
# name: test_entity[sensor.altherma_outdoorunit_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_outdoorunit_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Name',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_outdoorUnit_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.altherma_outdoorunit_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma OutdoorUnit Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_outdoorunit_name',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'Outdoor Unit',
  })
# ---
# name: test_entity[sensor.altherma_outdoorunit_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_outdoorunit_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Software Version',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_outdoorUnit_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.altherma_outdoorunit_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma OutdoorUnit Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_outdoorunit_software_version',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'FFFF',
  })
# ---
# name: test_entity[sensor.altherma_ratelimit_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL: 'total'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_ratelimit_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit day',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_limitsensor_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.altherma_ratelimit_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma RateLimit day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.TOTAL: 'total'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_ratelimit_day',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_entity[sensor.altherma_ratelimit_minute-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL: 'total'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_ratelimit_minute',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit minute',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_limitsensor_minute',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.altherma_ratelimit_minute-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma RateLimit minute',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.TOTAL: 'total'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_ratelimit_minute',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_entity[sensor.altherma_ratelimit_ratelimit_reset-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL: 'total'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_ratelimit_ratelimit_reset',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit ratelimit_reset',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_limitsensor_ratelimit_reset',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.altherma_ratelimit_ratelimit_reset-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma RateLimit ratelimit_reset',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.TOTAL: 'total'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_ratelimit_ratelimit_reset',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_entity[sensor.altherma_ratelimit_remaining_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL: 'total'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_ratelimit_remaining_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_day',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_limitsensor_remaining_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.altherma_ratelimit_remaining_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma RateLimit remaining_day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.TOTAL: 'total'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_ratelimit_remaining_day',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_entity[sensor.altherma_ratelimit_remaining_minutes-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL: 'total'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_ratelimit_remaining_minutes',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_minutes',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_limitsensor_remaining_minutes',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.altherma_ratelimit_remaining_minutes-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma RateLimit remaining_minutes',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.TOTAL: 'total'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_ratelimit_remaining_minutes',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_entity[sensor.altherma_ratelimit_retry_after-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL: 'total'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_ratelimit_retry_after',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit retry_after',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_limitsensor_retry_after',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.altherma_ratelimit_retry_after-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma RateLimit retry_after',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.TOTAL: 'total'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_ratelimit_retry_after',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_entity[sensor.altherma_userinterface_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_userinterface_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'UserInterface Model Info',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_userInterface_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.altherma_userinterface_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma UserInterface Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_userinterface_model_info',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'EHVX08S23EJ9W',
  })
# ---
# name: test_entity[sensor.altherma_userinterface_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_userinterface_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'UserInterface Name',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_userInterface_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.altherma_userinterface_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma UserInterface Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_userinterface_name',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'User Interface',
  })
# ---
# name: test_entity[sensor.altherma_userinterface_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_userinterface_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'UserInterface Software Version',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_userInterface_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.altherma_userinterface_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma UserInterface Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_userinterface_software_version',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '7.3.0',
  })
# ---
# name: test_entity[sensor.johnny_maaike_climatecontrol_cooling_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_cooling_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_electrical_cooling_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_entity[sensor.johnny_maaike_climatecontrol_cooling_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Johnny&Maaike ClimateControl Cooling Daily Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_cooling_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_entity[sensor.johnny_maaike_climatecontrol_cooling_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_cooling_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_electrical_cooling_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_entity[sensor.johnny_maaike_climatecontrol_cooling_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Johnny&Maaike ClimateControl Cooling Weekly Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_cooling_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_entity[sensor.johnny_maaike_climatecontrol_cooling_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_cooling_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_electrical_cooling_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_entity[sensor.johnny_maaike_climatecontrol_cooling_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Johnny&Maaike ClimateControl Cooling Yearly Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_cooling_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_entity[sensor.johnny_maaike_climatecontrol_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Error Code',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.johnny_maaike_climatecontrol_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Johnny&Maaike ClimateControl Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_error_code',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'U0-00',
  })
# ---
# name: test_entity[sensor.johnny_maaike_climatecontrol_heating_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_heating_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_electrical_heating_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_entity[sensor.johnny_maaike_climatecontrol_heating_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Johnny&Maaike ClimateControl Heating Daily Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_heating_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0.1',
  })
# ---
# name: test_entity[sensor.johnny_maaike_climatecontrol_heating_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_heating_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_electrical_heating_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_entity[sensor.johnny_maaike_climatecontrol_heating_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Johnny&Maaike ClimateControl Heating Weekly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_heating_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0.1',
  })
# ---
# name: test_entity[sensor.johnny_maaike_climatecontrol_heating_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_heating_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_electrical_heating_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_entity[sensor.johnny_maaike_climatecontrol_heating_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Johnny&Maaike ClimateControl Heating Yearly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_heating_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '9.3',
  })
# ---
# name: test_entity[sensor.johnny_maaike_climatecontrol_is_holiday_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_is_holiday_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Holiday Mode Active',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_None_isHolidayModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.johnny_maaike_climatecontrol_is_holiday_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Johnny&Maaike ClimateControl Is Holiday Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_is_holiday_mode_active',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'False',
  })
# ---
# name: test_entity[sensor.johnny_maaike_climatecontrol_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Caution State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.johnny_maaike_climatecontrol_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Johnny&Maaike ClimateControl Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_is_in_caution_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'False',
  })
# ---
# name: test_entity[sensor.johnny_maaike_climatecontrol_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Error State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.johnny_maaike_climatecontrol_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Johnny&Maaike ClimateControl Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_is_in_error_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'False',
  })
# ---
# name: test_entity[sensor.johnny_maaike_climatecontrol_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Warning State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.johnny_maaike_climatecontrol_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Johnny&Maaike ClimateControl Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_is_in_warning_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'False',
  })
# ---
# name: test_entity[sensor.johnny_maaike_climatecontrol_is_powerful_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_is_powerful_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Powerful Mode Active',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_None_isPowerfulModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.johnny_maaike_climatecontrol_is_powerful_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Johnny&Maaike ClimateControl Is Powerful Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_is_powerful_mode_active',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'False',
  })
# ---
# name: test_entity[sensor.johnny_maaike_climatecontrol_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Name',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.johnny_maaike_climatecontrol_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Johnny&Maaike ClimateControl Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_name',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'Johnny&Maaike',
  })
# ---
# name: test_entity[sensor.johnny_maaike_climatecontrol_outdoor_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_outdoor_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Outdoor Temperature',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_sensoryData_outdoorTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_entity[sensor.johnny_maaike_climatecontrol_outdoor_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Johnny&Maaike ClimateControl Outdoor Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_outdoor_temperature',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '12',
  })
# ---
# name: test_entity[sensor.johnny_maaike_climatecontrol_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_room_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Room Temperature',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_sensoryData_roomTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_entity[sensor.johnny_maaike_climatecontrol_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Johnny&Maaike ClimateControl Room Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_room_temperature',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '18',
  })
# ---
# name: test_entity[sensor.johnny_maaike_gateway_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_gateway_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Error Code',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_gateway_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.johnny_maaike_gateway_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Johnny&Maaike Gateway Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_gateway_error_code',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_entity[sensor.johnny_maaike_gateway_firmware_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_gateway_firmware_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Firmware Version',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_gateway_None_firmwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.johnny_maaike_gateway_firmware_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Johnny&Maaike Gateway Firmware Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_gateway_firmware_version',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '1_28_0',
  })
# ---
# name: test_entity[sensor.johnny_maaike_gateway_ip_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_gateway_ip_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:ip-network',
    'original_name': 'Gateway Ip Address',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_gateway_None_ipAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.johnny_maaike_gateway_ip_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Johnny&Maaike Gateway Ip Address',
      'icon': 'mdi:ip-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_gateway_ip_address',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '192.168.1.193',
  })
# ---
# name: test_entity[sensor.johnny_maaike_gateway_is_firmware_update_supported-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_gateway_is_firmware_update_supported',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Is Firmware Update Supported',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_gateway_None_isFirmwareUpdateSupported',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.johnny_maaike_gateway_is_firmware_update_supported-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Johnny&Maaike Gateway Is Firmware Update Supported',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_gateway_is_firmware_update_supported',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'True',
  })
# ---
# name: test_entity[sensor.johnny_maaike_gateway_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_gateway_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Is In Error State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_gateway_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.johnny_maaike_gateway_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Johnny&Maaike Gateway Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_gateway_is_in_error_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'False',
  })
# ---
# name: test_entity[sensor.johnny_maaike_gateway_mac_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_gateway_mac_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Mac Address',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_gateway_None_macAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.johnny_maaike_gateway_mac_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Johnny&Maaike Gateway Mac Address',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_gateway_mac_address',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'e8:4f:25:c7:f3:c6',
  })
# ---
# name: test_entity[sensor.johnny_maaike_gateway_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_gateway_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Model Info',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_gateway_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.johnny_maaike_gateway_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Johnny&Maaike Gateway Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_gateway_model_info',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'BRP069C4x',
  })
# ---
# name: test_entity[sensor.johnny_maaike_indoorunit_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_indoorunit_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Software Version',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_indoorUnit_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.johnny_maaike_indoorunit_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Johnny&Maaike IndoorUnit Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_indoorunit_software_version',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '20003001',
  })
# ---
# name: test_entity[sensor.johnny_maaike_outdoorunit_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_outdoorunit_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Error Code',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_outdoorUnit_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.johnny_maaike_outdoorunit_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Johnny&Maaike OutdoorUnit Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_outdoorunit_error_code',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '00-',
  })
# ---
# name: test_entity[sensor.johnny_maaike_outdoorunit_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_outdoorunit_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Caution State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_outdoorUnit_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.johnny_maaike_outdoorunit_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Johnny&Maaike OutdoorUnit Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_outdoorunit_is_in_caution_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'False',
  })
# ---
# name: test_entity[sensor.johnny_maaike_outdoorunit_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_outdoorunit_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Error State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_outdoorUnit_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.johnny_maaike_outdoorunit_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Johnny&Maaike OutdoorUnit Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_outdoorunit_is_in_error_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'False',
  })
# ---
# name: test_entity[sensor.johnny_maaike_outdoorunit_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_outdoorunit_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Warning State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_outdoorUnit_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.johnny_maaike_outdoorunit_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Johnny&Maaike OutdoorUnit Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_outdoorunit_is_in_warning_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'False',
  })
# ---
# name: test_entity[sensor.johnny_maaike_ratelimit_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL: 'total'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_ratelimit_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit day',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_limitsensor_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.johnny_maaike_ratelimit_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Johnny&Maaike RateLimit day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.TOTAL: 'total'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_ratelimit_day',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_entity[sensor.johnny_maaike_ratelimit_minute-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL: 'total'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_ratelimit_minute',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit minute',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_limitsensor_minute',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.johnny_maaike_ratelimit_minute-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Johnny&Maaike RateLimit minute',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.TOTAL: 'total'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_ratelimit_minute',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_entity[sensor.johnny_maaike_ratelimit_ratelimit_reset-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL: 'total'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_ratelimit_ratelimit_reset',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit ratelimit_reset',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_limitsensor_ratelimit_reset',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.johnny_maaike_ratelimit_ratelimit_reset-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Johnny&Maaike RateLimit ratelimit_reset',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.TOTAL: 'total'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_ratelimit_ratelimit_reset',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_entity[sensor.johnny_maaike_ratelimit_remaining_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL: 'total'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_ratelimit_remaining_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_day',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_limitsensor_remaining_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.johnny_maaike_ratelimit_remaining_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Johnny&Maaike RateLimit remaining_day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.TOTAL: 'total'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_ratelimit_remaining_day',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_entity[sensor.johnny_maaike_ratelimit_remaining_minutes-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL: 'total'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_ratelimit_remaining_minutes',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_minutes',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_limitsensor_remaining_minutes',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.johnny_maaike_ratelimit_remaining_minutes-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Johnny&Maaike RateLimit remaining_minutes',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.TOTAL: 'total'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_ratelimit_remaining_minutes',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_entity[sensor.johnny_maaike_ratelimit_retry_after-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL: 'total'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_ratelimit_retry_after',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit retry_after',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_limitsensor_retry_after',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.johnny_maaike_ratelimit_retry_after-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Johnny&Maaike RateLimit retry_after',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.TOTAL: 'total'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_ratelimit_retry_after',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_entity[sensor.linde_climatecontrol_cooling_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.linde_climatecontrol_cooling_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_electrical_cooling_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_entity[sensor.linde_climatecontrol_cooling_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Linde ClimateControl Cooling Daily Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_climatecontrol_cooling_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_entity[sensor.linde_climatecontrol_cooling_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.linde_climatecontrol_cooling_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_electrical_cooling_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_entity[sensor.linde_climatecontrol_cooling_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Linde ClimateControl Cooling Weekly Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_climatecontrol_cooling_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_entity[sensor.linde_climatecontrol_cooling_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.linde_climatecontrol_cooling_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_electrical_cooling_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_entity[sensor.linde_climatecontrol_cooling_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Linde ClimateControl Cooling Yearly Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_climatecontrol_cooling_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_entity[sensor.linde_climatecontrol_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_climatecontrol_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Error Code',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.linde_climatecontrol_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Linde ClimateControl Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_climatecontrol_error_code',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'U0-00',
  })
# ---
# name: test_entity[sensor.linde_climatecontrol_heating_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.linde_climatecontrol_heating_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_electrical_heating_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_entity[sensor.linde_climatecontrol_heating_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Linde ClimateControl Heating Daily Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_climatecontrol_heating_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0.1',
  })
# ---
# name: test_entity[sensor.linde_climatecontrol_heating_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.linde_climatecontrol_heating_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_electrical_heating_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_entity[sensor.linde_climatecontrol_heating_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Linde ClimateControl Heating Weekly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_climatecontrol_heating_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0.1',
  })
# ---
# name: test_entity[sensor.linde_climatecontrol_heating_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.linde_climatecontrol_heating_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_electrical_heating_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_entity[sensor.linde_climatecontrol_heating_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Linde ClimateControl Heating Yearly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_climatecontrol_heating_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '9.3',
  })
# ---
# name: test_entity[sensor.linde_climatecontrol_is_holiday_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_climatecontrol_is_holiday_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Holiday Mode Active',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_None_isHolidayModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.linde_climatecontrol_is_holiday_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Linde ClimateControl Is Holiday Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_climatecontrol_is_holiday_mode_active',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'False',
  })
# ---
# name: test_entity[sensor.linde_climatecontrol_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_climatecontrol_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Caution State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.linde_climatecontrol_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Linde ClimateControl Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_climatecontrol_is_in_caution_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'False',
  })
# ---
# name: test_entity[sensor.linde_climatecontrol_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_climatecontrol_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Error State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.linde_climatecontrol_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Linde ClimateControl Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_climatecontrol_is_in_error_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'False',
  })
# ---
# name: test_entity[sensor.linde_climatecontrol_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_climatecontrol_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Warning State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.linde_climatecontrol_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Linde ClimateControl Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_climatecontrol_is_in_warning_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'False',
  })
# ---
# name: test_entity[sensor.linde_climatecontrol_is_powerful_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_climatecontrol_is_powerful_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Powerful Mode Active',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_None_isPowerfulModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.linde_climatecontrol_is_powerful_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Linde ClimateControl Is Powerful Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_climatecontrol_is_powerful_mode_active',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'False',
  })
# ---
# name: test_entity[sensor.linde_climatecontrol_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_climatecontrol_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Name',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.linde_climatecontrol_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Linde ClimateControl Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_climatecontrol_name',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'Linde',
  })
# ---
# name: test_entity[sensor.linde_climatecontrol_outdoor_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.linde_climatecontrol_outdoor_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Outdoor Temperature',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_sensoryData_outdoorTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_entity[sensor.linde_climatecontrol_outdoor_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Linde ClimateControl Outdoor Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_climatecontrol_outdoor_temperature',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '12',
  })
# ---
# name: test_entity[sensor.linde_climatecontrol_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.linde_climatecontrol_room_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Room Temperature',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_sensoryData_roomTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_entity[sensor.linde_climatecontrol_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Linde ClimateControl Room Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_climatecontrol_room_temperature',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '18',
  })
# ---
# name: test_entity[sensor.linde_gateway_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_gateway_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Error Code',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_gateway_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.linde_gateway_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Linde Gateway Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_gateway_error_code',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_entity[sensor.linde_gateway_firmware_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_gateway_firmware_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Firmware Version',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_gateway_None_firmwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.linde_gateway_firmware_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Linde Gateway Firmware Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_gateway_firmware_version',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '1_28_0',
  })
# ---
# name: test_entity[sensor.linde_gateway_ip_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_gateway_ip_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:ip-network',
    'original_name': 'Gateway Ip Address',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_gateway_None_ipAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.linde_gateway_ip_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Linde Gateway Ip Address',
      'icon': 'mdi:ip-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_gateway_ip_address',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '192.168.1.144',
  })
# ---
# name: test_entity[sensor.linde_gateway_is_firmware_update_supported-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_gateway_is_firmware_update_supported',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Is Firmware Update Supported',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_gateway_None_isFirmwareUpdateSupported',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.linde_gateway_is_firmware_update_supported-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Linde Gateway Is Firmware Update Supported',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_gateway_is_firmware_update_supported',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'True',
  })
# ---
# name: test_entity[sensor.linde_gateway_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_gateway_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Is In Error State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_gateway_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.linde_gateway_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Linde Gateway Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_gateway_is_in_error_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'False',
  })
# ---
# name: test_entity[sensor.linde_gateway_mac_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_gateway_mac_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Mac Address',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_gateway_None_macAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.linde_gateway_mac_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Linde Gateway Mac Address',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_gateway_mac_address',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'd0:40:ef:fb:d1:2a',
  })
# ---
# name: test_entity[sensor.linde_gateway_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_gateway_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Model Info',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_gateway_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.linde_gateway_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Linde Gateway Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_gateway_model_info',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'BRP069C4x',
  })
# ---
# name: test_entity[sensor.linde_indoorunit_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_indoorunit_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Software Version',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_indoorUnit_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.linde_indoorunit_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Linde IndoorUnit Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_indoorunit_software_version',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '20003001',
  })
# ---
# name: test_entity[sensor.linde_outdoorunit_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_outdoorunit_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Error Code',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_outdoorUnit_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.linde_outdoorunit_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Linde OutdoorUnit Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_outdoorunit_error_code',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '00-',
  })
# ---
# name: test_entity[sensor.linde_outdoorunit_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_outdoorunit_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Caution State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_outdoorUnit_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.linde_outdoorunit_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Linde OutdoorUnit Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_outdoorunit_is_in_caution_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'False',
  })
# ---
# name: test_entity[sensor.linde_outdoorunit_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_outdoorunit_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Error State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_outdoorUnit_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.linde_outdoorunit_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Linde OutdoorUnit Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_outdoorunit_is_in_error_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'False',
  })
# ---
# name: test_entity[sensor.linde_outdoorunit_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_outdoorunit_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Warning State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_outdoorUnit_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.linde_outdoorunit_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Linde OutdoorUnit Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_outdoorunit_is_in_warning_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'False',
  })
# ---
# name: test_entity[sensor.linde_ratelimit_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL: 'total'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_ratelimit_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit day',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_limitsensor_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.linde_ratelimit_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Linde RateLimit day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.TOTAL: 'total'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_ratelimit_day',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_entity[sensor.linde_ratelimit_minute-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL: 'total'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_ratelimit_minute',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit minute',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_limitsensor_minute',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.linde_ratelimit_minute-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Linde RateLimit minute',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.TOTAL: 'total'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_ratelimit_minute',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_entity[sensor.linde_ratelimit_ratelimit_reset-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL: 'total'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_ratelimit_ratelimit_reset',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit ratelimit_reset',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_limitsensor_ratelimit_reset',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.linde_ratelimit_ratelimit_reset-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Linde RateLimit ratelimit_reset',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.TOTAL: 'total'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_ratelimit_ratelimit_reset',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_entity[sensor.linde_ratelimit_remaining_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL: 'total'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_ratelimit_remaining_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_day',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_limitsensor_remaining_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.linde_ratelimit_remaining_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Linde RateLimit remaining_day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.TOTAL: 'total'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_ratelimit_remaining_day',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_entity[sensor.linde_ratelimit_remaining_minutes-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL: 'total'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_ratelimit_remaining_minutes',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_minutes',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_limitsensor_remaining_minutes',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.linde_ratelimit_remaining_minutes-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Linde RateLimit remaining_minutes',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.TOTAL: 'total'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_ratelimit_remaining_minutes',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_entity[sensor.linde_ratelimit_retry_after-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL: 'total'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_ratelimit_retry_after',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit retry_after',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_limitsensor_retry_after',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.linde_ratelimit_retry_after-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Linde RateLimit retry_after',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.TOTAL: 'total'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_ratelimit_retry_after',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_entity[sensor.sanne_climatecontrol_cooling_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sanne_climatecontrol_cooling_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_electrical_cooling_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_entity[sensor.sanne_climatecontrol_cooling_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Cooling Daily Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_climatecontrol_cooling_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_entity[sensor.sanne_climatecontrol_cooling_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sanne_climatecontrol_cooling_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_electrical_cooling_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_entity[sensor.sanne_climatecontrol_cooling_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Cooling Weekly Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_climatecontrol_cooling_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_entity[sensor.sanne_climatecontrol_cooling_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sanne_climatecontrol_cooling_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_electrical_cooling_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_entity[sensor.sanne_climatecontrol_cooling_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Cooling Yearly Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_climatecontrol_cooling_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_entity[sensor.sanne_climatecontrol_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_climatecontrol_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Error Code',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.sanne_climatecontrol_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_climatecontrol_error_code',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'U0-00',
  })
# ---
# name: test_entity[sensor.sanne_climatecontrol_heating_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sanne_climatecontrol_heating_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_electrical_heating_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_entity[sensor.sanne_climatecontrol_heating_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Heating Daily Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_climatecontrol_heating_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_entity[sensor.sanne_climatecontrol_heating_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sanne_climatecontrol_heating_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_electrical_heating_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_entity[sensor.sanne_climatecontrol_heating_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Heating Weekly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_climatecontrol_heating_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_entity[sensor.sanne_climatecontrol_heating_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sanne_climatecontrol_heating_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_electrical_heating_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_entity[sensor.sanne_climatecontrol_heating_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Heating Yearly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_climatecontrol_heating_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '15.8',
  })
# ---
# name: test_entity[sensor.sanne_climatecontrol_is_holiday_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_climatecontrol_is_holiday_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Holiday Mode Active',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_None_isHolidayModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.sanne_climatecontrol_is_holiday_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is Holiday Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_climatecontrol_is_holiday_mode_active',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'False',
  })
# ---
# name: test_entity[sensor.sanne_climatecontrol_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_climatecontrol_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Caution State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.sanne_climatecontrol_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_climatecontrol_is_in_caution_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'False',
  })
# ---
# name: test_entity[sensor.sanne_climatecontrol_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_climatecontrol_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Error State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.sanne_climatecontrol_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_climatecontrol_is_in_error_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'False',
  })
# ---
# name: test_entity[sensor.sanne_climatecontrol_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_climatecontrol_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Warning State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.sanne_climatecontrol_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_climatecontrol_is_in_warning_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'False',
  })
# ---
# name: test_entity[sensor.sanne_climatecontrol_is_powerful_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_climatecontrol_is_powerful_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Powerful Mode Active',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_None_isPowerfulModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.sanne_climatecontrol_is_powerful_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is Powerful Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_climatecontrol_is_powerful_mode_active',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'False',
  })
# ---
# name: test_entity[sensor.sanne_climatecontrol_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_climatecontrol_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Name',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.sanne_climatecontrol_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_climatecontrol_name',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'Sanne',
  })
# ---
# name: test_entity[sensor.sanne_climatecontrol_outdoor_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sanne_climatecontrol_outdoor_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Outdoor Temperature',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_sensoryData_outdoorTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_entity[sensor.sanne_climatecontrol_outdoor_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Sanne ClimateControl Outdoor Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_climatecontrol_outdoor_temperature',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '12',
  })
# ---
# name: test_entity[sensor.sanne_climatecontrol_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sanne_climatecontrol_room_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Room Temperature',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_sensoryData_roomTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_entity[sensor.sanne_climatecontrol_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Sanne ClimateControl Room Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_climatecontrol_room_temperature',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '17',
  })
# ---
# name: test_entity[sensor.sanne_gateway_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_gateway_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Error Code',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_gateway_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.sanne_gateway_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_gateway_error_code',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_entity[sensor.sanne_gateway_firmware_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_gateway_firmware_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Firmware Version',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_gateway_None_firmwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.sanne_gateway_firmware_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Firmware Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_gateway_firmware_version',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '1_28_0',
  })
# ---
# name: test_entity[sensor.sanne_gateway_ip_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_gateway_ip_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:ip-network',
    'original_name': 'Gateway Ip Address',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_gateway_None_ipAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.sanne_gateway_ip_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Ip Address',
      'icon': 'mdi:ip-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_gateway_ip_address',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '192.168.1.175',
  })
# ---
# name: test_entity[sensor.sanne_gateway_is_firmware_update_supported-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_gateway_is_firmware_update_supported',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Is Firmware Update Supported',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_gateway_None_isFirmwareUpdateSupported',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.sanne_gateway_is_firmware_update_supported-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Is Firmware Update Supported',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_gateway_is_firmware_update_supported',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'True',
  })
# ---
# name: test_entity[sensor.sanne_gateway_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_gateway_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Is In Error State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_gateway_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.sanne_gateway_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_gateway_is_in_error_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'False',
  })
# ---
# name: test_entity[sensor.sanne_gateway_mac_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_gateway_mac_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Mac Address',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_gateway_None_macAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.sanne_gateway_mac_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Mac Address',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_gateway_mac_address',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'd0:40:ef:fb:a6:9e',
  })
# ---
# name: test_entity[sensor.sanne_gateway_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_gateway_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Model Info',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_gateway_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.sanne_gateway_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_gateway_model_info',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'BRP069C4x',
  })
# ---
# name: test_entity[sensor.sanne_indoorunit_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_indoorunit_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Software Version',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_indoorUnit_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.sanne_indoorunit_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne IndoorUnit Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_indoorunit_software_version',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '20003001',
  })
# ---
# name: test_entity[sensor.sanne_outdoorunit_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_outdoorunit_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Error Code',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_outdoorUnit_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.sanne_outdoorunit_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne OutdoorUnit Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_outdoorunit_error_code',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '00-',
  })
# ---
# name: test_entity[sensor.sanne_outdoorunit_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_outdoorunit_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Caution State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_outdoorUnit_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.sanne_outdoorunit_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne OutdoorUnit Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_outdoorunit_is_in_caution_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'False',
  })
# ---
# name: test_entity[sensor.sanne_outdoorunit_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_outdoorunit_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Error State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_outdoorUnit_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.sanne_outdoorunit_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne OutdoorUnit Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_outdoorunit_is_in_error_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'False',
  })
# ---
# name: test_entity[sensor.sanne_outdoorunit_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_outdoorunit_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Warning State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_outdoorUnit_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.sanne_outdoorunit_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne OutdoorUnit Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_outdoorunit_is_in_warning_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'False',
  })
# ---
# name: test_entity[sensor.sanne_ratelimit_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL: 'total'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_ratelimit_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit day',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_limitsensor_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.sanne_ratelimit_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.TOTAL: 'total'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_ratelimit_day',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_entity[sensor.sanne_ratelimit_minute-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL: 'total'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_ratelimit_minute',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit minute',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_limitsensor_minute',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.sanne_ratelimit_minute-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit minute',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.TOTAL: 'total'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_ratelimit_minute',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_entity[sensor.sanne_ratelimit_ratelimit_reset-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL: 'total'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_ratelimit_ratelimit_reset',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit ratelimit_reset',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_limitsensor_ratelimit_reset',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.sanne_ratelimit_ratelimit_reset-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit ratelimit_reset',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.TOTAL: 'total'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_ratelimit_ratelimit_reset',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_entity[sensor.sanne_ratelimit_remaining_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL: 'total'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_ratelimit_remaining_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_day',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_limitsensor_remaining_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.sanne_ratelimit_remaining_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit remaining_day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.TOTAL: 'total'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_ratelimit_remaining_day',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_entity[sensor.sanne_ratelimit_remaining_minutes-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL: 'total'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_ratelimit_remaining_minutes',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_minutes',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_limitsensor_remaining_minutes',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.sanne_ratelimit_remaining_minutes-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit remaining_minutes',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.TOTAL: 'total'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_ratelimit_remaining_minutes',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_entity[sensor.sanne_ratelimit_retry_after-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL: 'total'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_ratelimit_retry_after',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit retry_after',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_limitsensor_retry_after',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.sanne_ratelimit_retry_after-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit retry_after',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.TOTAL: 'total'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_ratelimit_retry_after',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_entity[sensor.werkkamer_climatecontrol_cooling_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.werkkamer_climatecontrol_cooling_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_electrical_cooling_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_entity[sensor.werkkamer_climatecontrol_cooling_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Werkkamer ClimateControl Cooling Daily Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_climatecontrol_cooling_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_entity[sensor.werkkamer_climatecontrol_cooling_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.werkkamer_climatecontrol_cooling_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_electrical_cooling_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_entity[sensor.werkkamer_climatecontrol_cooling_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Werkkamer ClimateControl Cooling Weekly Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_climatecontrol_cooling_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_entity[sensor.werkkamer_climatecontrol_cooling_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.werkkamer_climatecontrol_cooling_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_electrical_cooling_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_entity[sensor.werkkamer_climatecontrol_cooling_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Werkkamer ClimateControl Cooling Yearly Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_climatecontrol_cooling_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0.1',
  })
# ---
# name: test_entity[sensor.werkkamer_climatecontrol_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_climatecontrol_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Error Code',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.werkkamer_climatecontrol_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Werkkamer ClimateControl Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_climatecontrol_error_code',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'U0-00',
  })
# ---
# name: test_entity[sensor.werkkamer_climatecontrol_heating_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.werkkamer_climatecontrol_heating_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_electrical_heating_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_entity[sensor.werkkamer_climatecontrol_heating_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Werkkamer ClimateControl Heating Daily Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_climatecontrol_heating_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0.1',
  })
# ---
# name: test_entity[sensor.werkkamer_climatecontrol_heating_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.werkkamer_climatecontrol_heating_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_electrical_heating_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_entity[sensor.werkkamer_climatecontrol_heating_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Werkkamer ClimateControl Heating Weekly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_climatecontrol_heating_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0.1',
  })
# ---
# name: test_entity[sensor.werkkamer_climatecontrol_heating_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.werkkamer_climatecontrol_heating_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_electrical_heating_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_entity[sensor.werkkamer_climatecontrol_heating_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Werkkamer ClimateControl Heating Yearly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_climatecontrol_heating_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '12.3',
  })
# ---
# name: test_entity[sensor.werkkamer_climatecontrol_is_holiday_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_climatecontrol_is_holiday_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Holiday Mode Active',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_None_isHolidayModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.werkkamer_climatecontrol_is_holiday_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Werkkamer ClimateControl Is Holiday Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_climatecontrol_is_holiday_mode_active',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'False',
  })
# ---
# name: test_entity[sensor.werkkamer_climatecontrol_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_climatecontrol_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Caution State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.werkkamer_climatecontrol_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Werkkamer ClimateControl Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_climatecontrol_is_in_caution_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'False',
  })
# ---
# name: test_entity[sensor.werkkamer_climatecontrol_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_climatecontrol_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Error State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.werkkamer_climatecontrol_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Werkkamer ClimateControl Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_climatecontrol_is_in_error_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'False',
  })
# ---
# name: test_entity[sensor.werkkamer_climatecontrol_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_climatecontrol_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Warning State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.werkkamer_climatecontrol_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Werkkamer ClimateControl Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_climatecontrol_is_in_warning_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'False',
  })
# ---
# name: test_entity[sensor.werkkamer_climatecontrol_is_powerful_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_climatecontrol_is_powerful_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Powerful Mode Active',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_None_isPowerfulModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.werkkamer_climatecontrol_is_powerful_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Werkkamer ClimateControl Is Powerful Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_climatecontrol_is_powerful_mode_active',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'False',
  })
# ---
# name: test_entity[sensor.werkkamer_climatecontrol_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_climatecontrol_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Name',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.werkkamer_climatecontrol_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Werkkamer ClimateControl Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_climatecontrol_name',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'Werkkamer',
  })
# ---
# name: test_entity[sensor.werkkamer_climatecontrol_outdoor_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.werkkamer_climatecontrol_outdoor_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Outdoor Temperature',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_sensoryData_outdoorTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_entity[sensor.werkkamer_climatecontrol_outdoor_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Werkkamer ClimateControl Outdoor Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_climatecontrol_outdoor_temperature',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '12',
  })
# ---
# name: test_entity[sensor.werkkamer_climatecontrol_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.werkkamer_climatecontrol_room_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Room Temperature',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_sensoryData_roomTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_entity[sensor.werkkamer_climatecontrol_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Werkkamer ClimateControl Room Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_climatecontrol_room_temperature',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '18',
  })
# ---
# name: test_entity[sensor.werkkamer_gateway_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_gateway_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Error Code',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_gateway_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.werkkamer_gateway_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Werkkamer Gateway Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_gateway_error_code',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_entity[sensor.werkkamer_gateway_firmware_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_gateway_firmware_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Firmware Version',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_gateway_None_firmwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.werkkamer_gateway_firmware_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Werkkamer Gateway Firmware Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_gateway_firmware_version',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '1_28_0',
  })
# ---
# name: test_entity[sensor.werkkamer_gateway_ip_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_gateway_ip_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:ip-network',
    'original_name': 'Gateway Ip Address',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_gateway_None_ipAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.werkkamer_gateway_ip_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Werkkamer Gateway Ip Address',
      'icon': 'mdi:ip-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_gateway_ip_address',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '192.168.1.200',
  })
# ---
# name: test_entity[sensor.werkkamer_gateway_is_firmware_update_supported-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_gateway_is_firmware_update_supported',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Is Firmware Update Supported',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_gateway_None_isFirmwareUpdateSupported',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.werkkamer_gateway_is_firmware_update_supported-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Werkkamer Gateway Is Firmware Update Supported',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_gateway_is_firmware_update_supported',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'True',
  })
# ---
# name: test_entity[sensor.werkkamer_gateway_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_gateway_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Is In Error State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_gateway_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.werkkamer_gateway_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Werkkamer Gateway Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_gateway_is_in_error_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'False',
  })
# ---
# name: test_entity[sensor.werkkamer_gateway_mac_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_gateway_mac_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Mac Address',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_gateway_None_macAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.werkkamer_gateway_mac_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Werkkamer Gateway Mac Address',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_gateway_mac_address',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'e8:4f:25:c7:fe:da',
  })
# ---
# name: test_entity[sensor.werkkamer_gateway_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_gateway_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Model Info',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_gateway_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.werkkamer_gateway_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Werkkamer Gateway Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_gateway_model_info',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'BRP069C4x',
  })
# ---
# name: test_entity[sensor.werkkamer_indoorunit_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_indoorunit_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Software Version',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_indoorUnit_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.werkkamer_indoorunit_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Werkkamer IndoorUnit Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_indoorunit_software_version',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '20003001',
  })
# ---
# name: test_entity[sensor.werkkamer_outdoorunit_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_outdoorunit_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Error Code',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_outdoorUnit_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.werkkamer_outdoorunit_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Werkkamer OutdoorUnit Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_outdoorunit_error_code',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '00-',
  })
# ---
# name: test_entity[sensor.werkkamer_outdoorunit_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_outdoorunit_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Caution State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_outdoorUnit_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.werkkamer_outdoorunit_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Werkkamer OutdoorUnit Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_outdoorunit_is_in_caution_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'False',
  })
# ---
# name: test_entity[sensor.werkkamer_outdoorunit_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_outdoorunit_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Error State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_outdoorUnit_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.werkkamer_outdoorunit_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Werkkamer OutdoorUnit Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_outdoorunit_is_in_error_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'False',
  })
# ---
# name: test_entity[sensor.werkkamer_outdoorunit_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_outdoorunit_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Warning State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_outdoorUnit_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.werkkamer_outdoorunit_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Werkkamer OutdoorUnit Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_outdoorunit_is_in_warning_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'False',
  })
# ---
# name: test_entity[sensor.werkkamer_ratelimit_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL: 'total'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_ratelimit_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit day',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_limitsensor_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.werkkamer_ratelimit_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Werkkamer RateLimit day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.TOTAL: 'total'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_ratelimit_day',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_entity[sensor.werkkamer_ratelimit_minute-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL: 'total'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_ratelimit_minute',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit minute',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_limitsensor_minute',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.werkkamer_ratelimit_minute-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Werkkamer RateLimit minute',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.TOTAL: 'total'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_ratelimit_minute',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_entity[sensor.werkkamer_ratelimit_ratelimit_reset-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL: 'total'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_ratelimit_ratelimit_reset',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit ratelimit_reset',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_limitsensor_ratelimit_reset',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.werkkamer_ratelimit_ratelimit_reset-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Werkkamer RateLimit ratelimit_reset',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.TOTAL: 'total'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_ratelimit_ratelimit_reset',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_entity[sensor.werkkamer_ratelimit_remaining_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL: 'total'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_ratelimit_remaining_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_day',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_limitsensor_remaining_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.werkkamer_ratelimit_remaining_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Werkkamer RateLimit remaining_day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.TOTAL: 'total'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_ratelimit_remaining_day',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_entity[sensor.werkkamer_ratelimit_remaining_minutes-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL: 'total'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_ratelimit_remaining_minutes',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_minutes',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_limitsensor_remaining_minutes',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.werkkamer_ratelimit_remaining_minutes-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Werkkamer RateLimit remaining_minutes',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.TOTAL: 'total'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_ratelimit_remaining_minutes',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_entity[sensor.werkkamer_ratelimit_retry_after-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL: 'total'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_ratelimit_retry_after',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit retry_after',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_limitsensor_retry_after',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[sensor.werkkamer_ratelimit_retry_after-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Werkkamer RateLimit retry_after',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.TOTAL: 'total'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_ratelimit_retry_after',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_entity[water_heater.altherma-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'max_temp': 53.0,
      'min_temp': 30.0,
      'operation_list': list([
        'off',
        'heat_pump',
        'performance',
      ]),
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'water_heater',
    'entity_category': None,
    'entity_id': 'water_heater.altherma',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Altherma',
    'platform': 'daikin_onecta',
    'supported_features': <WaterHeaterEntityFeature: 3>,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa',
    'unit_of_measurement': None,
  })
# ---
# name: test_entity[water_heater.altherma-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 49.0,
      'friendly_name': 'Altherma',
      'max_temp': 53.0,
      'min_temp': 30.0,
      'operation_list': list([
        'off',
        'heat_pump',
        'performance',
      ]),
      'operation_mode': 'heat_pump',
      'supported_features': <WaterHeaterEntityFeature: 3>,
      'target_temp_high': None,
      'target_temp_low': None,
      'target_temp_step': 1.0,
      'temperature': 48.0,
    }),
    'context': <ANY>,
    'entity_id': 'water_heater.altherma',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'heat_pump',
  })
# ---
