# serializer version: 1
# name: test_altherma3m[binary_sensor.climatecontrol_is_holiday_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.climatecontrol_is_holiday_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Holiday Mode Active',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'eb618890-5f42-496a-a34f-bae6e49260c2_climateControl_None_isHolidayModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma3m[binary_sensor.climatecontrol_is_holiday_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'ClimateControl Is Holiday Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.climatecontrol_is_holiday_mode_active',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma3m[binary_sensor.climatecontrol_is_in_emergency_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.climatecontrol_is_in_emergency_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Emergency State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'eb618890-5f42-496a-a34f-bae6e49260c2_climateControl_None_isInEmergencyState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma3m[binary_sensor.climatecontrol_is_in_emergency_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'ClimateControl Is In Emergency State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.climatecontrol_is_in_emergency_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma3m[binary_sensor.climatecontrol_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.climatecontrol_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Error State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'eb618890-5f42-496a-a34f-bae6e49260c2_climateControl_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma3m[binary_sensor.climatecontrol_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'ClimateControl Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.climatecontrol_is_in_error_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma3m[binary_sensor.climatecontrol_is_in_installer_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.climatecontrol_is_in_installer_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Installer State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'eb618890-5f42-496a-a34f-bae6e49260c2_climateControl_None_isInInstallerState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma3m[binary_sensor.climatecontrol_is_in_installer_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'ClimateControl Is In Installer State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.climatecontrol_is_in_installer_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma3m[binary_sensor.climatecontrol_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.climatecontrol_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Warning State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'eb618890-5f42-496a-a34f-bae6e49260c2_climateControl_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma3m[binary_sensor.climatecontrol_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'ClimateControl Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.climatecontrol_is_in_warning_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma3m[binary_sensor.domestichotwatertank_is_holiday_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.domestichotwatertank_is_holiday_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Is Holiday Mode Active',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'eb618890-5f42-496a-a34f-bae6e49260c2_domesticHotWaterTank_None_isHolidayModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma3m[binary_sensor.domestichotwatertank_is_holiday_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'DomesticHotWaterTank Is Holiday Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.domestichotwatertank_is_holiday_mode_active',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma3m[binary_sensor.domestichotwatertank_is_in_emergency_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.domestichotwatertank_is_in_emergency_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Is In Emergency State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'eb618890-5f42-496a-a34f-bae6e49260c2_domesticHotWaterTank_None_isInEmergencyState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma3m[binary_sensor.domestichotwatertank_is_in_emergency_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'DomesticHotWaterTank Is In Emergency State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.domestichotwatertank_is_in_emergency_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma3m[binary_sensor.domestichotwatertank_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.domestichotwatertank_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Is In Error State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'eb618890-5f42-496a-a34f-bae6e49260c2_domesticHotWaterTank_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma3m[binary_sensor.domestichotwatertank_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'DomesticHotWaterTank Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.domestichotwatertank_is_in_error_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma3m[binary_sensor.domestichotwatertank_is_in_installer_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.domestichotwatertank_is_in_installer_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Is In Installer State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'eb618890-5f42-496a-a34f-bae6e49260c2_domesticHotWaterTank_None_isInInstallerState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma3m[binary_sensor.domestichotwatertank_is_in_installer_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'DomesticHotWaterTank Is In Installer State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.domestichotwatertank_is_in_installer_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma3m[binary_sensor.domestichotwatertank_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.domestichotwatertank_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Is In Warning State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'eb618890-5f42-496a-a34f-bae6e49260c2_domesticHotWaterTank_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma3m[binary_sensor.domestichotwatertank_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'DomesticHotWaterTank Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.domestichotwatertank_is_in_warning_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma3m[binary_sensor.domestichotwatertank_is_powerful_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.domestichotwatertank_is_powerful_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Is Powerful Mode Active',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'eb618890-5f42-496a-a34f-bae6e49260c2_domesticHotWaterTank_None_isPowerfulModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma3m[binary_sensor.domestichotwatertank_is_powerful_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'DomesticHotWaterTank Is Powerful Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.domestichotwatertank_is_powerful_mode_active',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma3m[binary_sensor.gateway_is_firmware_update_supported-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.gateway_is_firmware_update_supported',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Is Firmware Update Supported',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'eb618890-5f42-496a-a34f-bae6e49260c2_gateway_None_isFirmwareUpdateSupported',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma3m[binary_sensor.gateway_is_firmware_update_supported-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Gateway Is Firmware Update Supported',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.gateway_is_firmware_update_supported',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_altherma3m[climate.leaving_water_offset-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.HEAT: 'heat'>,
      ]),
      'max_temp': 10,
      'min_temp': -10,
      'preset_modes': list([
        'away',
        'none',
      ]),
      'target_temp_step': 1,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'climate',
    'entity_category': None,
    'entity_id': 'climate.leaving_water_offset',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': ' Leaving Water Offset',
    'platform': 'daikin_onecta',
    'supported_features': <ClimateEntityFeature: 17>,
    'translation_key': 'daikin_onecta',
    'unique_id': 'eb618890-5f42-496a-a34f-bae6e49260c2_leavingWaterOffset',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma3m[climate.leaving_water_offset-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 25,
      'friendly_name': ' Leaving Water Offset',
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.HEAT: 'heat'>,
      ]),
      'max_temp': 10,
      'min_temp': -10,
      'preset_mode': 'none',
      'preset_modes': list([
        'away',
        'none',
      ]),
      'supported_features': <ClimateEntityFeature: 17>,
      'target_temp_step': 1,
      'temperature': 0,
    }),
    'context': <ANY>,
    'entity_id': 'climate.leaving_water_offset',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma3m[select.domestichotwatertank_schedule-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'User defined',
        'off',
      ]),
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': None,
    'entity_id': 'select.domestichotwatertank_schedule',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:calendar-clock',
    'original_name': 'DomesticHotWaterTank Schedule',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'eb618890-5f42-496a-a34f-bae6e49260c2_domesticHotWaterTank_schedule',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma3m[select.domestichotwatertank_schedule-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'DomesticHotWaterTank Schedule',
      'icon': 'mdi:calendar-clock',
      'options': list([
        'User defined',
        'off',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.domestichotwatertank_schedule',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'User defined',
  })
# ---
# name: test_altherma3m[sensor.climatecontrol_control_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.climatecontrol_control_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:alphabetical',
    'original_name': 'ClimateControl Control Mode',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'eb618890-5f42-496a-a34f-bae6e49260c2_climateControl_None_controlMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma3m[sensor.climatecontrol_control_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'ClimateControl Control Mode',
      'icon': 'mdi:alphabetical',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.climatecontrol_control_mode',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'leavingWaterTemperature',
  })
# ---
# name: test_altherma3m[sensor.climatecontrol_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.climatecontrol_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Error Code',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'eb618890-5f42-496a-a34f-bae6e49260c2_climateControl_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma3m[sensor.climatecontrol_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'ClimateControl Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.climatecontrol_error_code',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_altherma3m[sensor.climatecontrol_heating_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.climatecontrol_heating_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'eb618890-5f42-496a-a34f-bae6e49260c2_climateControl_electrical_heating_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma3m[sensor.climatecontrol_heating_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'ClimateControl Heating Daily Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.climatecontrol_heating_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '4',
  })
# ---
# name: test_altherma3m[sensor.climatecontrol_heating_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.climatecontrol_heating_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'eb618890-5f42-496a-a34f-bae6e49260c2_climateControl_electrical_heating_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma3m[sensor.climatecontrol_heating_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'ClimateControl Heating Weekly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.climatecontrol_heating_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '4',
  })
# ---
# name: test_altherma3m[sensor.climatecontrol_heating_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.climatecontrol_heating_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'eb618890-5f42-496a-a34f-bae6e49260c2_climateControl_electrical_heating_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma3m[sensor.climatecontrol_heating_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'ClimateControl Heating Yearly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.climatecontrol_heating_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '905',
  })
# ---
# name: test_altherma3m[sensor.climatecontrol_leaving_water_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.climatecontrol_leaving_water_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Leaving Water Temperature',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'eb618890-5f42-496a-a34f-bae6e49260c2_climateControl_sensoryData_leavingWaterTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_altherma3m[sensor.climatecontrol_leaving_water_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'ClimateControl Leaving Water Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.climatecontrol_leaving_water_temperature',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '25',
  })
# ---
# name: test_altherma3m[sensor.climatecontrol_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.climatecontrol_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Name',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'eb618890-5f42-496a-a34f-bae6e49260c2_climateControl_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma3m[sensor.climatecontrol_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'ClimateControl Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.climatecontrol_name',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_altherma3m[sensor.climatecontrol_outdoor_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.climatecontrol_outdoor_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Outdoor Temperature',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'eb618890-5f42-496a-a34f-bae6e49260c2_climateControl_sensoryData_outdoorTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_altherma3m[sensor.climatecontrol_outdoor_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'ClimateControl Outdoor Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.climatecontrol_outdoor_temperature',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '10',
  })
# ---
# name: test_altherma3m[sensor.climatecontrol_setpoint_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.climatecontrol_setpoint_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:alphabetical',
    'original_name': 'ClimateControl Setpoint Mode',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'eb618890-5f42-496a-a34f-bae6e49260c2_climateControl_None_setpointMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma3m[sensor.climatecontrol_setpoint_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'ClimateControl Setpoint Mode',
      'icon': 'mdi:alphabetical',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.climatecontrol_setpoint_mode',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'weatherDependent',
  })
# ---
# name: test_altherma3m[sensor.domestichotwatertank_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.domestichotwatertank_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Error Code',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'eb618890-5f42-496a-a34f-bae6e49260c2_domesticHotWaterTank_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma3m[sensor.domestichotwatertank_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'DomesticHotWaterTank Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.domestichotwatertank_error_code',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_altherma3m[sensor.domestichotwatertank_heating_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.domestichotwatertank_heating_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'DomesticHotWaterTank Heating Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'eb618890-5f42-496a-a34f-bae6e49260c2_domesticHotWaterTank_electrical_heating_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma3m[sensor.domestichotwatertank_heating_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'DomesticHotWaterTank Heating Daily Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.domestichotwatertank_heating_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '4',
  })
# ---
# name: test_altherma3m[sensor.domestichotwatertank_heating_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.domestichotwatertank_heating_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'DomesticHotWaterTank Heating Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'eb618890-5f42-496a-a34f-bae6e49260c2_domesticHotWaterTank_electrical_heating_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma3m[sensor.domestichotwatertank_heating_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'DomesticHotWaterTank Heating Weekly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.domestichotwatertank_heating_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '4',
  })
# ---
# name: test_altherma3m[sensor.domestichotwatertank_heating_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.domestichotwatertank_heating_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'DomesticHotWaterTank Heating Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'eb618890-5f42-496a-a34f-bae6e49260c2_domesticHotWaterTank_electrical_heating_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma3m[sensor.domestichotwatertank_heating_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'DomesticHotWaterTank Heating Yearly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.domestichotwatertank_heating_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '191',
  })
# ---
# name: test_altherma3m[sensor.domestichotwatertank_heatup_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.domestichotwatertank_heatup_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:alphabetical',
    'original_name': 'DomesticHotWaterTank Heatup Mode',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'eb618890-5f42-496a-a34f-bae6e49260c2_domesticHotWaterTank_None_heatupMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma3m[sensor.domestichotwatertank_heatup_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'DomesticHotWaterTank Heatup Mode',
      'icon': 'mdi:alphabetical',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.domestichotwatertank_heatup_mode',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'reheatSchedule',
  })
# ---
# name: test_altherma3m[sensor.domestichotwatertank_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.domestichotwatertank_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Name',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'eb618890-5f42-496a-a34f-bae6e49260c2_domesticHotWaterTank_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma3m[sensor.domestichotwatertank_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'DomesticHotWaterTank Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.domestichotwatertank_name',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_altherma3m[sensor.domestichotwatertank_setpoint_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.domestichotwatertank_setpoint_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:alphabetical',
    'original_name': 'DomesticHotWaterTank Setpoint Mode',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'eb618890-5f42-496a-a34f-bae6e49260c2_domesticHotWaterTank_None_setpointMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma3m[sensor.domestichotwatertank_setpoint_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'DomesticHotWaterTank Setpoint Mode',
      'icon': 'mdi:alphabetical',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.domestichotwatertank_setpoint_mode',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'fixed',
  })
# ---
# name: test_altherma3m[sensor.domestichotwatertank_tank_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.domestichotwatertank_tank_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': 'mdi:bathtub-outline',
    'original_name': 'DomesticHotWaterTank Tank Temperature',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'eb618890-5f42-496a-a34f-bae6e49260c2_domesticHotWaterTank_sensoryData_tankTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_altherma3m[sensor.domestichotwatertank_tank_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'DomesticHotWaterTank Tank Temperature',
      'icon': 'mdi:bathtub-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.domestichotwatertank_tank_temperature',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '46',
  })
# ---
# name: test_altherma3m[sensor.gateway_firmware_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.gateway_firmware_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Firmware Version',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'eb618890-5f42-496a-a34f-bae6e49260c2_gateway_None_firmwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma3m[sensor.gateway_firmware_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Gateway Firmware Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.gateway_firmware_version',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '3.2.5',
  })
# ---
# name: test_altherma3m[sensor.gateway_ip_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.gateway_ip_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:ip-network',
    'original_name': 'Gateway Ip Address',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'eb618890-5f42-496a-a34f-bae6e49260c2_gateway_None_ipAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma3m[sensor.gateway_ip_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Gateway Ip Address',
      'icon': 'mdi:ip-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.gateway_ip_address',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '192.168.32.130',
  })
# ---
# name: test_altherma3m[sensor.gateway_mac_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.gateway_mac_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Mac Address',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'eb618890-5f42-496a-a34f-bae6e49260c2_gateway_None_macAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma3m[sensor.gateway_mac_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Gateway Mac Address',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.gateway_mac_address',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '14:13:33:dc:22:72',
  })
# ---
# name: test_altherma3m[sensor.gateway_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.gateway_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Model Info',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'eb618890-5f42-496a-a34f-bae6e49260c2_gateway_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma3m[sensor.gateway_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Gateway Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.gateway_model_info',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'BRP069A78',
  })
# ---
# name: test_altherma3m[sensor.gateway_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.gateway_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Name',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'eb618890-5f42-496a-a34f-bae6e49260c2_gateway_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma3m[sensor.gateway_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Gateway Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.gateway_name',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'Gateway',
  })
# ---
# name: test_altherma3m[sensor.indoorunithydro_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.indoorunithydro_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnitHydro Model Info',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'eb618890-5f42-496a-a34f-bae6e49260c2_indoorUnitHydro_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma3m[sensor.indoorunithydro_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'IndoorUnitHydro Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.indoorunithydro_model_info',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'EDLA04E23V3',
  })
# ---
# name: test_altherma3m[sensor.indoorunithydro_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.indoorunithydro_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnitHydro Name',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'eb618890-5f42-496a-a34f-bae6e49260c2_indoorUnitHydro_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma3m[sensor.indoorunithydro_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'IndoorUnitHydro Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.indoorunithydro_name',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'Indoor Hydro Unit',
  })
# ---
# name: test_altherma3m[sensor.indoorunithydro_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.indoorunithydro_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnitHydro Software Version',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'eb618890-5f42-496a-a34f-bae6e49260c2_indoorUnitHydro_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma3m[sensor.indoorunithydro_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'IndoorUnitHydro Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.indoorunithydro_software_version',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '20017702',
  })
# ---
# name: test_altherma3m[sensor.outdoorunit_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.outdoorunit_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Name',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'eb618890-5f42-496a-a34f-bae6e49260c2_outdoorUnit_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma3m[sensor.outdoorunit_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'OutdoorUnit Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.outdoorunit_name',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'Outdoor Unit',
  })
# ---
# name: test_altherma3m[sensor.outdoorunit_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.outdoorunit_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Software Version',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'eb618890-5f42-496a-a34f-bae6e49260c2_outdoorUnit_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma3m[sensor.outdoorunit_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'OutdoorUnit Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.outdoorunit_software_version',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'FFFF',
  })
# ---
# name: test_altherma3m[sensor.ratelimit_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.ratelimit_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit day',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'eb618890-5f42-496a-a34f-bae6e49260c2_limitsensor_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma3m[sensor.ratelimit_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'RateLimit day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.ratelimit_day',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma3m[sensor.ratelimit_minute-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.ratelimit_minute',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit minute',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'eb618890-5f42-496a-a34f-bae6e49260c2_limitsensor_minute',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma3m[sensor.ratelimit_minute-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'RateLimit minute',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.ratelimit_minute',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma3m[sensor.ratelimit_ratelimit_reset-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.ratelimit_ratelimit_reset',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit ratelimit_reset',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'eb618890-5f42-496a-a34f-bae6e49260c2_limitsensor_ratelimit_reset',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma3m[sensor.ratelimit_ratelimit_reset-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'RateLimit ratelimit_reset',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.ratelimit_ratelimit_reset',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma3m[sensor.ratelimit_remaining_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.ratelimit_remaining_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_day',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'eb618890-5f42-496a-a34f-bae6e49260c2_limitsensor_remaining_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma3m[sensor.ratelimit_remaining_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'RateLimit remaining_day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.ratelimit_remaining_day',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma3m[sensor.ratelimit_remaining_minutes-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.ratelimit_remaining_minutes',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_minutes',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'eb618890-5f42-496a-a34f-bae6e49260c2_limitsensor_remaining_minutes',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma3m[sensor.ratelimit_remaining_minutes-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'RateLimit remaining_minutes',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.ratelimit_remaining_minutes',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma3m[sensor.ratelimit_retry_after-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.ratelimit_retry_after',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit retry_after',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'eb618890-5f42-496a-a34f-bae6e49260c2_limitsensor_retry_after',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma3m[sensor.ratelimit_retry_after-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'RateLimit retry_after',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.ratelimit_retry_after',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma3m[sensor.userinterface_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.userinterface_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'UserInterface Model Info',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'eb618890-5f42-496a-a34f-bae6e49260c2_userInterface_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma3m[sensor.userinterface_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'UserInterface Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.userinterface_model_info',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'EDLA04E23V3',
  })
# ---
# name: test_altherma3m[sensor.userinterface_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.userinterface_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'UserInterface Name',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'eb618890-5f42-496a-a34f-bae6e49260c2_userInterface_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma3m[sensor.userinterface_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'UserInterface Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.userinterface_name',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'User Interface',
  })
# ---
# name: test_altherma3m[sensor.userinterface_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.userinterface_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'UserInterface Software Version',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'eb618890-5f42-496a-a34f-bae6e49260c2_userInterface_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma3m[sensor.userinterface_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'UserInterface Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.userinterface_software_version',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '7.3.0',
  })
# ---
# name: test_altherma3m[water_heater.daikin_onecta_eb618890_5f42_496a_a34f_bae6e49260c2-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'max_temp': 50.0,
      'min_temp': 30.0,
      'operation_list': list([
        'off',
        'heat_pump',
        'performance',
      ]),
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'water_heater',
    'entity_category': None,
    'entity_id': 'water_heater.daikin_onecta_eb618890_5f42_496a_a34f_bae6e49260c2',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': '',
    'platform': 'daikin_onecta',
    'supported_features': <WaterHeaterEntityFeature: 2>,
    'translation_key': None,
    'unique_id': 'eb618890-5f42-496a-a34f-bae6e49260c2',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma3m[water_heater.daikin_onecta_eb618890_5f42_496a_a34f_bae6e49260c2-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 46.0,
      'friendly_name': '',
      'max_temp': 50.0,
      'min_temp': 30.0,
      'operation_list': list([
        'off',
        'heat_pump',
        'performance',
      ]),
      'operation_mode': 'heat_pump',
      'supported_features': <WaterHeaterEntityFeature: 2>,
      'target_temp_high': None,
      'target_temp_low': None,
      'target_temp_step': 1.0,
      'temperature': 42.0,
    }),
    'context': <ANY>,
    'entity_id': 'water_heater.daikin_onecta_eb618890_5f42_496a_a34f_bae6e49260c2',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'heat_pump',
  })
# ---
# name: test_altherma[binary_sensor.altherma_climatecontrol_is_holiday_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_climatecontrol_is_holiday_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Holiday Mode Active',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_None_isHolidayModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.altherma_climatecontrol_is_holiday_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is Holiday Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_climatecontrol_is_holiday_mode_active',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.altherma_climatecontrol_is_in_emergency_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_climatecontrol_is_in_emergency_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Emergency State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_None_isInEmergencyState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.altherma_climatecontrol_is_in_emergency_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Emergency State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_climatecontrol_is_in_emergency_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.altherma_climatecontrol_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_climatecontrol_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Error State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.altherma_climatecontrol_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_climatecontrol_is_in_error_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.altherma_climatecontrol_is_in_installer_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_climatecontrol_is_in_installer_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Installer State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_None_isInInstallerState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.altherma_climatecontrol_is_in_installer_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is In Installer State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_climatecontrol_is_in_installer_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.altherma_climatecontrol_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_climatecontrol_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Warning State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.altherma_climatecontrol_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_climatecontrol_is_in_warning_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.altherma_domestichotwatertank_is_holiday_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_holiday_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Is Holiday Mode Active',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_None_isHolidayModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.altherma_domestichotwatertank_is_holiday_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne DomesticHotWaterTank Is Holiday Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_holiday_mode_active',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.altherma_domestichotwatertank_is_in_emergency_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_in_emergency_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Is In Emergency State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_None_isInEmergencyState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.altherma_domestichotwatertank_is_in_emergency_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne DomesticHotWaterTank Is In Emergency State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_in_emergency_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.altherma_domestichotwatertank_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Is In Error State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.altherma_domestichotwatertank_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne DomesticHotWaterTank Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_in_error_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.altherma_domestichotwatertank_is_in_installer_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_in_installer_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Is In Installer State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_None_isInInstallerState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.altherma_domestichotwatertank_is_in_installer_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne DomesticHotWaterTank Is In Installer State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_in_installer_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.altherma_domestichotwatertank_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Is In Warning State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.altherma_domestichotwatertank_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne DomesticHotWaterTank Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_in_warning_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.altherma_domestichotwatertank_is_powerful_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_powerful_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Is Powerful Mode Active',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_None_isPowerfulModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.altherma_domestichotwatertank_is_powerful_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne DomesticHotWaterTank Is Powerful Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_powerful_mode_active',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.johnny_maaike_climatecontrol_is_cool_heat_master-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.johnny_maaike_climatecontrol_is_cool_heat_master',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Cool Heat Master',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_None_isCoolHeatMaster',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.johnny_maaike_climatecontrol_is_cool_heat_master-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is Cool Heat Master',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.johnny_maaike_climatecontrol_is_cool_heat_master',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_altherma[binary_sensor.johnny_maaike_climatecontrol_is_holiday_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.johnny_maaike_climatecontrol_is_holiday_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Holiday Mode Active',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_None_isHolidayModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.johnny_maaike_climatecontrol_is_holiday_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is Holiday Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.johnny_maaike_climatecontrol_is_holiday_mode_active',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.johnny_maaike_climatecontrol_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.johnny_maaike_climatecontrol_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Caution State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.johnny_maaike_climatecontrol_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.johnny_maaike_climatecontrol_is_in_caution_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.johnny_maaike_climatecontrol_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.johnny_maaike_climatecontrol_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Error State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.johnny_maaike_climatecontrol_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.johnny_maaike_climatecontrol_is_in_error_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.johnny_maaike_climatecontrol_is_in_mode_conflict-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.johnny_maaike_climatecontrol_is_in_mode_conflict',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Mode Conflict',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_None_isInModeConflict',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.johnny_maaike_climatecontrol_is_in_mode_conflict-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Mode Conflict',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.johnny_maaike_climatecontrol_is_in_mode_conflict',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.johnny_maaike_climatecontrol_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.johnny_maaike_climatecontrol_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Warning State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.johnny_maaike_climatecontrol_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.johnny_maaike_climatecontrol_is_in_warning_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.johnny_maaike_climatecontrol_is_lock_function_enabled-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.johnny_maaike_climatecontrol_is_lock_function_enabled',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Lock Function Enabled',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_None_isLockFunctionEnabled',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.johnny_maaike_climatecontrol_is_lock_function_enabled-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is Lock Function Enabled',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.johnny_maaike_climatecontrol_is_lock_function_enabled',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.johnny_maaike_climatecontrol_is_powerful_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.johnny_maaike_climatecontrol_is_powerful_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Powerful Mode Active',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_None_isPowerfulModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.johnny_maaike_climatecontrol_is_powerful_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is Powerful Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.johnny_maaike_climatecontrol_is_powerful_mode_active',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.johnny_maaike_gateway_daylight_saving_time_enabled-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.johnny_maaike_gateway_daylight_saving_time_enabled',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Daylight Saving Time Enabled',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_gateway_None_daylightSavingTimeEnabled',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.johnny_maaike_gateway_daylight_saving_time_enabled-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Daylight Saving Time Enabled',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.johnny_maaike_gateway_daylight_saving_time_enabled',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_altherma[binary_sensor.johnny_maaike_gateway_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.johnny_maaike_gateway_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Is In Error State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_gateway_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.johnny_maaike_gateway_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne Gateway Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.johnny_maaike_gateway_is_in_error_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.johnny_maaike_gateway_led_enabled-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.johnny_maaike_gateway_led_enabled',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Led Enabled',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_gateway_None_ledEnabled',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.johnny_maaike_gateway_led_enabled-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Led Enabled',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.johnny_maaike_gateway_led_enabled',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.johnny_maaike_outdoorunit_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.johnny_maaike_outdoorunit_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Caution State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_outdoorUnit_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.johnny_maaike_outdoorunit_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne OutdoorUnit Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.johnny_maaike_outdoorunit_is_in_caution_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.johnny_maaike_outdoorunit_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.johnny_maaike_outdoorunit_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Error State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_outdoorUnit_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.johnny_maaike_outdoorunit_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne OutdoorUnit Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.johnny_maaike_outdoorunit_is_in_error_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.johnny_maaike_outdoorunit_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.johnny_maaike_outdoorunit_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Warning State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_outdoorUnit_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.johnny_maaike_outdoorunit_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne OutdoorUnit Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.johnny_maaike_outdoorunit_is_in_warning_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.linde_climatecontrol_is_cool_heat_master-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.linde_climatecontrol_is_cool_heat_master',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Cool Heat Master',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_None_isCoolHeatMaster',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.linde_climatecontrol_is_cool_heat_master-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is Cool Heat Master',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.linde_climatecontrol_is_cool_heat_master',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_altherma[binary_sensor.linde_climatecontrol_is_holiday_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.linde_climatecontrol_is_holiday_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Holiday Mode Active',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_None_isHolidayModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.linde_climatecontrol_is_holiday_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is Holiday Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.linde_climatecontrol_is_holiday_mode_active',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.linde_climatecontrol_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.linde_climatecontrol_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Caution State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.linde_climatecontrol_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.linde_climatecontrol_is_in_caution_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.linde_climatecontrol_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.linde_climatecontrol_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Error State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.linde_climatecontrol_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.linde_climatecontrol_is_in_error_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.linde_climatecontrol_is_in_mode_conflict-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.linde_climatecontrol_is_in_mode_conflict',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Mode Conflict',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_None_isInModeConflict',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.linde_climatecontrol_is_in_mode_conflict-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Mode Conflict',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.linde_climatecontrol_is_in_mode_conflict',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.linde_climatecontrol_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.linde_climatecontrol_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Warning State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.linde_climatecontrol_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.linde_climatecontrol_is_in_warning_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.linde_climatecontrol_is_lock_function_enabled-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.linde_climatecontrol_is_lock_function_enabled',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Lock Function Enabled',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_None_isLockFunctionEnabled',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.linde_climatecontrol_is_lock_function_enabled-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is Lock Function Enabled',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.linde_climatecontrol_is_lock_function_enabled',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.linde_climatecontrol_is_powerful_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.linde_climatecontrol_is_powerful_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Powerful Mode Active',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_None_isPowerfulModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.linde_climatecontrol_is_powerful_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is Powerful Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.linde_climatecontrol_is_powerful_mode_active',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.linde_gateway_daylight_saving_time_enabled-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.linde_gateway_daylight_saving_time_enabled',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Daylight Saving Time Enabled',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_gateway_None_daylightSavingTimeEnabled',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.linde_gateway_daylight_saving_time_enabled-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Daylight Saving Time Enabled',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.linde_gateway_daylight_saving_time_enabled',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_altherma[binary_sensor.linde_gateway_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.linde_gateway_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Is In Error State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_gateway_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.linde_gateway_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne Gateway Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.linde_gateway_is_in_error_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.linde_gateway_led_enabled-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.linde_gateway_led_enabled',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Led Enabled',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_gateway_None_ledEnabled',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.linde_gateway_led_enabled-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Led Enabled',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.linde_gateway_led_enabled',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.linde_outdoorunit_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.linde_outdoorunit_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Caution State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_outdoorUnit_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.linde_outdoorunit_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne OutdoorUnit Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.linde_outdoorunit_is_in_caution_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.linde_outdoorunit_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.linde_outdoorunit_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Error State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_outdoorUnit_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.linde_outdoorunit_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne OutdoorUnit Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.linde_outdoorunit_is_in_error_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.linde_outdoorunit_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.linde_outdoorunit_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Warning State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_outdoorUnit_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.linde_outdoorunit_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne OutdoorUnit Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.linde_outdoorunit_is_in_warning_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.sanne_climatecontrol_is_cool_heat_master-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.sanne_climatecontrol_is_cool_heat_master',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Cool Heat Master',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_None_isCoolHeatMaster',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.sanne_climatecontrol_is_cool_heat_master-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is Cool Heat Master',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.sanne_climatecontrol_is_cool_heat_master',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_altherma[binary_sensor.sanne_climatecontrol_is_holiday_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.sanne_climatecontrol_is_holiday_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Holiday Mode Active',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_None_isHolidayModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.sanne_climatecontrol_is_holiday_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is Holiday Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.sanne_climatecontrol_is_holiday_mode_active',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.sanne_climatecontrol_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.sanne_climatecontrol_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Caution State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.sanne_climatecontrol_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.sanne_climatecontrol_is_in_caution_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.sanne_climatecontrol_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.sanne_climatecontrol_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Error State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.sanne_climatecontrol_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.sanne_climatecontrol_is_in_error_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.sanne_climatecontrol_is_in_mode_conflict-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.sanne_climatecontrol_is_in_mode_conflict',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Mode Conflict',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_None_isInModeConflict',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.sanne_climatecontrol_is_in_mode_conflict-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Mode Conflict',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.sanne_climatecontrol_is_in_mode_conflict',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.sanne_climatecontrol_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.sanne_climatecontrol_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Warning State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.sanne_climatecontrol_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.sanne_climatecontrol_is_in_warning_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.sanne_climatecontrol_is_lock_function_enabled-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.sanne_climatecontrol_is_lock_function_enabled',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Lock Function Enabled',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_None_isLockFunctionEnabled',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.sanne_climatecontrol_is_lock_function_enabled-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is Lock Function Enabled',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.sanne_climatecontrol_is_lock_function_enabled',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.sanne_climatecontrol_is_powerful_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.sanne_climatecontrol_is_powerful_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Powerful Mode Active',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_None_isPowerfulModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.sanne_climatecontrol_is_powerful_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is Powerful Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.sanne_climatecontrol_is_powerful_mode_active',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.sanne_gateway_daylight_saving_time_enabled-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.sanne_gateway_daylight_saving_time_enabled',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Daylight Saving Time Enabled',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_gateway_None_daylightSavingTimeEnabled',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.sanne_gateway_daylight_saving_time_enabled-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Daylight Saving Time Enabled',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.sanne_gateway_daylight_saving_time_enabled',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_altherma[binary_sensor.sanne_gateway_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.sanne_gateway_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Is In Error State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_gateway_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.sanne_gateway_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne Gateway Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.sanne_gateway_is_in_error_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.sanne_gateway_led_enabled-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.sanne_gateway_led_enabled',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Led Enabled',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_gateway_None_ledEnabled',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.sanne_gateway_led_enabled-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Led Enabled',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.sanne_gateway_led_enabled',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.sanne_outdoorunit_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.sanne_outdoorunit_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Caution State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_outdoorUnit_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.sanne_outdoorunit_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne OutdoorUnit Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.sanne_outdoorunit_is_in_caution_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.sanne_outdoorunit_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.sanne_outdoorunit_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Error State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_outdoorUnit_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.sanne_outdoorunit_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne OutdoorUnit Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.sanne_outdoorunit_is_in_error_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.sanne_outdoorunit_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.sanne_outdoorunit_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Warning State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_outdoorUnit_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.sanne_outdoorunit_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne OutdoorUnit Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.sanne_outdoorunit_is_in_warning_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.werkkamer_climatecontrol_is_cool_heat_master-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_cool_heat_master',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Cool Heat Master',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_None_isCoolHeatMaster',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.werkkamer_climatecontrol_is_cool_heat_master-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is Cool Heat Master',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_cool_heat_master',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_altherma[binary_sensor.werkkamer_climatecontrol_is_holiday_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_holiday_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Holiday Mode Active',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_None_isHolidayModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.werkkamer_climatecontrol_is_holiday_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is Holiday Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_holiday_mode_active',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.werkkamer_climatecontrol_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Caution State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.werkkamer_climatecontrol_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_in_caution_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.werkkamer_climatecontrol_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Error State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.werkkamer_climatecontrol_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_in_error_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.werkkamer_climatecontrol_is_in_mode_conflict-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_in_mode_conflict',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Mode Conflict',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_None_isInModeConflict',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.werkkamer_climatecontrol_is_in_mode_conflict-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Mode Conflict',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_in_mode_conflict',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.werkkamer_climatecontrol_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Warning State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.werkkamer_climatecontrol_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_in_warning_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.werkkamer_climatecontrol_is_lock_function_enabled-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_lock_function_enabled',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Lock Function Enabled',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_None_isLockFunctionEnabled',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.werkkamer_climatecontrol_is_lock_function_enabled-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is Lock Function Enabled',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_lock_function_enabled',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.werkkamer_climatecontrol_is_powerful_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_powerful_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Powerful Mode Active',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_None_isPowerfulModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.werkkamer_climatecontrol_is_powerful_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is Powerful Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_powerful_mode_active',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.werkkamer_gateway_daylight_saving_time_enabled-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.werkkamer_gateway_daylight_saving_time_enabled',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Daylight Saving Time Enabled',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_gateway_None_daylightSavingTimeEnabled',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.werkkamer_gateway_daylight_saving_time_enabled-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Daylight Saving Time Enabled',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.werkkamer_gateway_daylight_saving_time_enabled',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_altherma[binary_sensor.werkkamer_gateway_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.werkkamer_gateway_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Is In Error State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_gateway_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.werkkamer_gateway_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne Gateway Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.werkkamer_gateway_is_in_error_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.werkkamer_gateway_led_enabled-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.werkkamer_gateway_led_enabled',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Led Enabled',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_gateway_None_ledEnabled',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.werkkamer_gateway_led_enabled-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Led Enabled',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.werkkamer_gateway_led_enabled',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.werkkamer_outdoorunit_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.werkkamer_outdoorunit_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Caution State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_outdoorUnit_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.werkkamer_outdoorunit_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne OutdoorUnit Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.werkkamer_outdoorunit_is_in_caution_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.werkkamer_outdoorunit_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.werkkamer_outdoorunit_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Error State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_outdoorUnit_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.werkkamer_outdoorunit_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne OutdoorUnit Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.werkkamer_outdoorunit_is_in_error_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.werkkamer_outdoorunit_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.werkkamer_outdoorunit_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Warning State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_outdoorUnit_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.werkkamer_outdoorunit_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne OutdoorUnit Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.werkkamer_outdoorunit_is_in_warning_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[climate.altherma_leaving_water_offset-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
      ]),
      'max_temp': None,
      'min_temp': None,
      'preset_modes': list([
        'away',
        'none',
      ]),
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'climate',
    'entity_category': None,
    'entity_id': 'climate.altherma_leaving_water_offset',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Altherma Leaving Water Offset',
    'platform': 'daikin_onecta',
    'supported_features': <ClimateEntityFeature: 16>,
    'translation_key': 'daikin_onecta',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_leavingWaterOffset',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[climate.altherma_leaving_water_offset-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 27,
      'friendly_name': 'Altherma Leaving Water Offset',
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
      ]),
      'max_temp': None,
      'min_temp': None,
      'preset_mode': 'none',
      'preset_modes': list([
        'away',
        'none',
      ]),
      'supported_features': <ClimateEntityFeature: 16>,
    }),
    'context': <ANY>,
    'entity_id': 'climate.altherma_leaving_water_offset',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[climate.altherma_leaving_water_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
      ]),
      'max_temp': 20,
      'min_temp': 18,
      'preset_modes': list([
        'away',
        'none',
      ]),
      'target_temp_step': 1,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'climate',
    'entity_category': None,
    'entity_id': 'climate.altherma_leaving_water_temperature',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Altherma Leaving Water Temperature',
    'platform': 'daikin_onecta',
    'supported_features': <ClimateEntityFeature: 17>,
    'translation_key': 'daikin_onecta',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_leavingWaterTemperature',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[climate.altherma_leaving_water_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 27,
      'friendly_name': 'Altherma Leaving Water Temperature',
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
      ]),
      'max_temp': 20,
      'min_temp': 18,
      'preset_mode': 'none',
      'preset_modes': list([
        'away',
        'none',
      ]),
      'supported_features': <ClimateEntityFeature: 17>,
      'target_temp_step': 1,
      'temperature': 19,
    }),
    'context': <ANY>,
    'entity_id': 'climate.altherma_leaving_water_temperature',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[climate.altherma_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
      ]),
      'max_temp': 28,
      'min_temp': 23,
      'preset_modes': list([
        'away',
        'none',
      ]),
      'target_temp_step': 0.5,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'climate',
    'entity_category': None,
    'entity_id': 'climate.altherma_room_temperature',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Altherma Room Temperature',
    'platform': 'daikin_onecta',
    'supported_features': <ClimateEntityFeature: 17>,
    'translation_key': 'daikin_onecta',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_roomTemperature',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[climate.altherma_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 21,
      'friendly_name': 'Altherma Room Temperature',
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
      ]),
      'max_temp': 28,
      'min_temp': 23,
      'preset_mode': 'none',
      'preset_modes': list([
        'away',
        'none',
      ]),
      'supported_features': <ClimateEntityFeature: 17>,
      'target_temp_step': 0.5,
      'temperature': 24.5,
    }),
    'context': <ANY>,
    'entity_id': 'climate.altherma_room_temperature',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[climate.johnny_maaike_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'fan_modes': list([
        'auto',
        'quiet',
        '1',
        '2',
        '3',
        '4',
        '5',
      ]),
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
        <HVACMode.DRY: 'dry'>,
      ]),
      'max_temp': 33,
      'min_temp': 18,
      'preset_modes': list([
        'away',
        'boost',
        'eco',
        'none',
      ]),
      'swing_modes': list([
        'off',
        'horizontal',
        'vertical',
        'both',
        'Comfort Airflow',
        'Comfort Airflow and Horizontal',
      ]),
      'target_temp_step': 0.5,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'climate',
    'entity_category': None,
    'entity_id': 'climate.johnny_maaike_room_temperature',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Johnny&Maaike Room Temperature',
    'platform': 'daikin_onecta',
    'supported_features': <ClimateEntityFeature: 57>,
    'translation_key': 'daikin_onecta',
    'unique_id': '32db6075-b739-4026-b661-127009254b42_roomTemperature',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[climate.johnny_maaike_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 19,
      'fan_mode': 'auto',
      'fan_modes': list([
        'auto',
        'quiet',
        '1',
        '2',
        '3',
        '4',
        '5',
      ]),
      'friendly_name': 'Johnny&Maaike Room Temperature',
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
        <HVACMode.DRY: 'dry'>,
      ]),
      'max_temp': 33,
      'min_temp': 18,
      'preset_mode': 'eco',
      'preset_modes': list([
        'away',
        'boost',
        'eco',
        'none',
      ]),
      'supported_features': <ClimateEntityFeature: 57>,
      'swing_mode': 'off',
      'swing_modes': list([
        'off',
        'horizontal',
        'vertical',
        'both',
        'Comfort Airflow',
        'Comfort Airflow and Horizontal',
      ]),
      'target_temp_step': 0.5,
      'temperature': 25,
    }),
    'context': <ANY>,
    'entity_id': 'climate.johnny_maaike_room_temperature',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[climate.linde_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'fan_modes': list([
        'auto',
        'quiet',
        '1',
        '2',
        '3',
        '4',
        '5',
      ]),
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
        <HVACMode.DRY: 'dry'>,
      ]),
      'max_temp': 33,
      'min_temp': 18,
      'preset_modes': list([
        'away',
        'boost',
        'eco',
        'none',
      ]),
      'swing_modes': list([
        'off',
        'horizontal',
        'vertical',
        'both',
        'Comfort Airflow',
        'Comfort Airflow and Horizontal',
      ]),
      'target_temp_step': 0.5,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'climate',
    'entity_category': None,
    'entity_id': 'climate.linde_room_temperature',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Linde Room Temperature',
    'platform': 'daikin_onecta',
    'supported_features': <ClimateEntityFeature: 57>,
    'translation_key': 'daikin_onecta',
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_roomTemperature',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[climate.linde_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 18,
      'fan_mode': 'auto',
      'fan_modes': list([
        'auto',
        'quiet',
        '1',
        '2',
        '3',
        '4',
        '5',
      ]),
      'friendly_name': 'Linde Room Temperature',
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
        <HVACMode.DRY: 'dry'>,
      ]),
      'max_temp': 33,
      'min_temp': 18,
      'preset_mode': 'none',
      'preset_modes': list([
        'away',
        'boost',
        'eco',
        'none',
      ]),
      'supported_features': <ClimateEntityFeature: 57>,
      'swing_mode': 'off',
      'swing_modes': list([
        'off',
        'horizontal',
        'vertical',
        'both',
        'Comfort Airflow',
        'Comfort Airflow and Horizontal',
      ]),
      'target_temp_step': 0.5,
      'temperature': 23,
    }),
    'context': <ANY>,
    'entity_id': 'climate.linde_room_temperature',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[climate.sanne_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'fan_modes': list([
        'auto',
        'quiet',
        '1',
        '2',
        '3',
        '4',
        '5',
      ]),
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
        <HVACMode.DRY: 'dry'>,
      ]),
      'max_temp': 33,
      'min_temp': 18,
      'preset_modes': list([
        'away',
        'boost',
        'eco',
        'none',
      ]),
      'swing_modes': list([
        'off',
        'horizontal',
        'vertical',
        'both',
        'Comfort Airflow',
        'Comfort Airflow and Horizontal',
      ]),
      'target_temp_step': 0.5,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'climate',
    'entity_category': None,
    'entity_id': 'climate.sanne_room_temperature',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Sanne Room Temperature',
    'platform': 'daikin_onecta',
    'supported_features': <ClimateEntityFeature: 57>,
    'translation_key': 'daikin_onecta',
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_roomTemperature',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[climate.sanne_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 19,
      'fan_mode': 'auto',
      'fan_modes': list([
        'auto',
        'quiet',
        '1',
        '2',
        '3',
        '4',
        '5',
      ]),
      'friendly_name': 'Sanne Room Temperature',
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
        <HVACMode.DRY: 'dry'>,
      ]),
      'max_temp': 33,
      'min_temp': 18,
      'preset_mode': 'none',
      'preset_modes': list([
        'away',
        'boost',
        'eco',
        'none',
      ]),
      'supported_features': <ClimateEntityFeature: 57>,
      'swing_mode': 'off',
      'swing_modes': list([
        'off',
        'horizontal',
        'vertical',
        'both',
        'Comfort Airflow',
        'Comfort Airflow and Horizontal',
      ]),
      'target_temp_step': 0.5,
      'temperature': 23,
    }),
    'context': <ANY>,
    'entity_id': 'climate.sanne_room_temperature',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[climate.werkkamer_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'fan_modes': list([
        'auto',
        'quiet',
        '1',
        '2',
        '3',
        '4',
        '5',
      ]),
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
        <HVACMode.DRY: 'dry'>,
      ]),
      'max_temp': 33,
      'min_temp': 18,
      'preset_modes': list([
        'away',
        'boost',
        'eco',
        'none',
      ]),
      'swing_modes': list([
        'off',
        'horizontal',
        'vertical',
        'both',
        'Comfort Airflow',
        'Comfort Airflow and Horizontal',
      ]),
      'target_temp_step': 0.5,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'climate',
    'entity_category': None,
    'entity_id': 'climate.werkkamer_room_temperature',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Werkkamer Room Temperature',
    'platform': 'daikin_onecta',
    'supported_features': <ClimateEntityFeature: 57>,
    'translation_key': 'daikin_onecta',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_roomTemperature',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[climate.werkkamer_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 19,
      'fan_mode': 'auto',
      'fan_modes': list([
        'auto',
        'quiet',
        '1',
        '2',
        '3',
        '4',
        '5',
      ]),
      'friendly_name': 'Werkkamer Room Temperature',
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
        <HVACMode.DRY: 'dry'>,
      ]),
      'max_temp': 33,
      'min_temp': 18,
      'preset_mode': 'none',
      'preset_modes': list([
        'away',
        'boost',
        'eco',
        'none',
      ]),
      'supported_features': <ClimateEntityFeature: 57>,
      'swing_mode': 'off',
      'swing_modes': list([
        'off',
        'horizontal',
        'vertical',
        'both',
        'Comfort Airflow',
        'Comfort Airflow and Horizontal',
      ]),
      'target_temp_step': 0.5,
      'temperature': 25,
    }),
    'context': <ANY>,
    'entity_id': 'climate.werkkamer_room_temperature',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[select.altherma_climatecontrol_schedule-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'User defined',
        'off',
      ]),
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': None,
    'entity_id': 'select.altherma_climatecontrol_schedule',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:calendar-clock',
    'original_name': 'ClimateControl Schedule',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_schedule',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[select.altherma_climatecontrol_schedule-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Schedule',
      'icon': 'mdi:calendar-clock',
      'options': list([
        'User defined',
        'off',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.altherma_climatecontrol_schedule',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[select.johnny_maaike_climatecontrol_schedule-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        '0',
        '1',
        '2',
        'off',
      ]),
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': None,
    'entity_id': 'select.johnny_maaike_climatecontrol_schedule',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:calendar-clock',
    'original_name': 'ClimateControl Schedule',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_schedule',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[select.johnny_maaike_climatecontrol_schedule-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Schedule',
      'icon': 'mdi:calendar-clock',
      'options': list([
        '0',
        '1',
        '2',
        'off',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.johnny_maaike_climatecontrol_schedule',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[select.linde_climatecontrol_schedule-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        '0',
        '1',
        '2',
        'off',
      ]),
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': None,
    'entity_id': 'select.linde_climatecontrol_schedule',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:calendar-clock',
    'original_name': 'ClimateControl Schedule',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_schedule',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[select.linde_climatecontrol_schedule-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Schedule',
      'icon': 'mdi:calendar-clock',
      'options': list([
        '0',
        '1',
        '2',
        'off',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.linde_climatecontrol_schedule',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[select.sanne_climatecontrol_schedule-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        '0',
        '1',
        '2',
        'off',
      ]),
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': None,
    'entity_id': 'select.sanne_climatecontrol_schedule',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:calendar-clock',
    'original_name': 'ClimateControl Schedule',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_schedule',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[select.sanne_climatecontrol_schedule-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Schedule',
      'icon': 'mdi:calendar-clock',
      'options': list([
        '0',
        '1',
        '2',
        'off',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.sanne_climatecontrol_schedule',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[select.werkkamer_climatecontrol_schedule-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        '0',
        '1',
        '2',
        'off',
      ]),
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': None,
    'entity_id': 'select.werkkamer_climatecontrol_schedule',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:calendar-clock',
    'original_name': 'ClimateControl Schedule',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_schedule',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[select.werkkamer_climatecontrol_schedule-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Schedule',
      'icon': 'mdi:calendar-clock',
      'options': list([
        '0',
        '1',
        '2',
        'off',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.werkkamer_climatecontrol_schedule',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[sensor.altherma_climatecontrol_control_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_control_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:alphabetical',
    'original_name': 'ClimateControl Control Mode',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_None_controlMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.altherma_climatecontrol_control_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Control Mode',
      'icon': 'mdi:alphabetical',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_control_mode',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'roomTemperature',
  })
# ---
# name: test_altherma[sensor.altherma_climatecontrol_cooling_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_cooling_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_electrical_cooling_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma[sensor.altherma_climatecontrol_cooling_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Cooling Daily Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_cooling_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma[sensor.altherma_climatecontrol_cooling_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_cooling_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_electrical_cooling_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma[sensor.altherma_climatecontrol_cooling_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Cooling Weekly Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_cooling_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma[sensor.altherma_climatecontrol_cooling_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_cooling_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_electrical_cooling_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma[sensor.altherma_climatecontrol_cooling_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Cooling Yearly Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_cooling_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma[sensor.altherma_climatecontrol_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_climatecontrol_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Error Code',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.altherma_climatecontrol_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_error_code',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '-00',
  })
# ---
# name: test_altherma[sensor.altherma_climatecontrol_heating_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_heating_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_electrical_heating_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma[sensor.altherma_climatecontrol_heating_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Heating Daily Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_heating_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma[sensor.altherma_climatecontrol_heating_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_heating_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_electrical_heating_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma[sensor.altherma_climatecontrol_heating_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Heating Weekly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_heating_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma[sensor.altherma_climatecontrol_heating_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_heating_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_electrical_heating_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma[sensor.altherma_climatecontrol_heating_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Heating Yearly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_heating_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '1252',
  })
# ---
# name: test_altherma[sensor.altherma_climatecontrol_icon_id-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_climatecontrol_icon_id',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Icon Id',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_None_iconId',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.altherma_climatecontrol_icon_id-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Icon Id',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_icon_id',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '8',
  })
# ---
# name: test_altherma[sensor.altherma_climatecontrol_leaving_water_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_leaving_water_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Leaving Water Temperature',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_sensoryData_leavingWaterTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_altherma[sensor.altherma_climatecontrol_leaving_water_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Sanne ClimateControl Leaving Water Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_leaving_water_temperature',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '27',
  })
# ---
# name: test_altherma[sensor.altherma_climatecontrol_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_climatecontrol_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Name',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.altherma_climatecontrol_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_name',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'Altherma',
  })
# ---
# name: test_altherma[sensor.altherma_climatecontrol_outdoor_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_outdoor_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Outdoor Temperature',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_sensoryData_outdoorTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_altherma[sensor.altherma_climatecontrol_outdoor_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Sanne ClimateControl Outdoor Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_outdoor_temperature',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '17',
  })
# ---
# name: test_altherma[sensor.altherma_climatecontrol_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_room_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Room Temperature',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_sensoryData_roomTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_altherma[sensor.altherma_climatecontrol_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Sanne ClimateControl Room Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_room_temperature',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '21',
  })
# ---
# name: test_altherma[sensor.altherma_climatecontrol_setpoint_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_setpoint_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:alphabetical',
    'original_name': 'ClimateControl Setpoint Mode',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_None_setpointMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.altherma_climatecontrol_setpoint_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Setpoint Mode',
      'icon': 'mdi:alphabetical',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_setpoint_mode',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'weatherDependentHeatingFixedCooling',
  })
# ---
# name: test_altherma[sensor.altherma_domestichotwatertank_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_domestichotwatertank_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Error Code',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.altherma_domestichotwatertank_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne DomesticHotWaterTank Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_domestichotwatertank_error_code',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '-00',
  })
# ---
# name: test_altherma[sensor.altherma_domestichotwatertank_heating_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_domestichotwatertank_heating_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'DomesticHotWaterTank Heating Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_electrical_heating_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma[sensor.altherma_domestichotwatertank_heating_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne DomesticHotWaterTank Heating Daily Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_domestichotwatertank_heating_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma[sensor.altherma_domestichotwatertank_heating_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_domestichotwatertank_heating_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'DomesticHotWaterTank Heating Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_electrical_heating_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma[sensor.altherma_domestichotwatertank_heating_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne DomesticHotWaterTank Heating Weekly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_domestichotwatertank_heating_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '5',
  })
# ---
# name: test_altherma[sensor.altherma_domestichotwatertank_heating_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_domestichotwatertank_heating_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'DomesticHotWaterTank Heating Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_electrical_heating_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma[sensor.altherma_domestichotwatertank_heating_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne DomesticHotWaterTank Heating Yearly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_domestichotwatertank_heating_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '515',
  })
# ---
# name: test_altherma[sensor.altherma_domestichotwatertank_icon_id-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_domestichotwatertank_icon_id',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Icon Id',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_None_iconId',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.altherma_domestichotwatertank_icon_id-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne DomesticHotWaterTank Icon Id',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_domestichotwatertank_icon_id',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '9',
  })
# ---
# name: test_altherma[sensor.altherma_domestichotwatertank_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_domestichotwatertank_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Name',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.altherma_domestichotwatertank_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne DomesticHotWaterTank Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_domestichotwatertank_name',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_altherma[sensor.altherma_domestichotwatertank_setpoint_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_domestichotwatertank_setpoint_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:alphabetical',
    'original_name': 'DomesticHotWaterTank Setpoint Mode',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_None_setpointMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.altherma_domestichotwatertank_setpoint_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne DomesticHotWaterTank Setpoint Mode',
      'icon': 'mdi:alphabetical',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_domestichotwatertank_setpoint_mode',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'fixed',
  })
# ---
# name: test_altherma[sensor.altherma_domestichotwatertank_tank_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_domestichotwatertank_tank_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': 'mdi:bathtub-outline',
    'original_name': 'DomesticHotWaterTank Tank Temperature',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_sensoryData_tankTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_altherma[sensor.altherma_domestichotwatertank_tank_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Sanne DomesticHotWaterTank Tank Temperature',
      'icon': 'mdi:bathtub-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_domestichotwatertank_tank_temperature',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '48',
  })
# ---
# name: test_altherma[sensor.altherma_gateway_firmware_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_gateway_firmware_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Firmware Version',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_gateway_None_firmwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.altherma_gateway_firmware_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Firmware Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_gateway_firmware_version',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '3.2.1',
  })
# ---
# name: test_altherma[sensor.altherma_gateway_icon_id-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_gateway_icon_id',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Icon Id',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_gateway_None_iconId',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.altherma_gateway_icon_id-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Icon Id',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_gateway_icon_id',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '3',
  })
# ---
# name: test_altherma[sensor.altherma_gateway_ip_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_gateway_ip_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:ip-network',
    'original_name': 'Gateway Ip Address',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_gateway_None_ipAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.altherma_gateway_ip_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Ip Address',
      'icon': 'mdi:ip-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_gateway_ip_address',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '192.168.1.207',
  })
# ---
# name: test_altherma[sensor.altherma_gateway_mac_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_gateway_mac_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Mac Address',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_gateway_None_macAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.altherma_gateway_mac_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Mac Address',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_gateway_mac_address',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_altherma[sensor.altherma_gateway_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_gateway_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Model Info',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_gateway_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.altherma_gateway_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_gateway_model_info',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'BRP069A78',
  })
# ---
# name: test_altherma[sensor.altherma_gateway_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_gateway_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Name',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_gateway_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.altherma_gateway_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_gateway_name',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'Gateway',
  })
# ---
# name: test_altherma[sensor.altherma_gateway_serial_number-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_gateway_serial_number',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:numeric',
    'original_name': 'Gateway Serial Number',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_gateway_None_serialNumber',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.altherma_gateway_serial_number-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Serial Number',
      'icon': 'mdi:numeric',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_gateway_serial_number',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0023085',
  })
# ---
# name: test_altherma[sensor.altherma_gateway_ssid-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_gateway_ssid',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:access-point-network',
    'original_name': 'Gateway Ssid',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_gateway_None_ssid',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.altherma_gateway_ssid-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Ssid',
      'icon': 'mdi:access-point-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_gateway_ssid',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'daikin-ap',
  })
# ---
# name: test_altherma[sensor.altherma_gateway_wifi_connection_s_s_i_d-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_gateway_wifi_connection_s_s_i_d',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:access-point-network',
    'original_name': 'Gateway Wifi Connection S S I D',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_gateway_None_wifiConnectionSSID',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.altherma_gateway_wifi_connection_s_s_i_d-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Wifi Connection S S I D',
      'icon': 'mdi:access-point-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_gateway_wifi_connection_s_s_i_d',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'WILLEMSEN',
  })
# ---
# name: test_altherma[sensor.altherma_gateway_wifi_connection_strength-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_gateway_wifi_connection_strength',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.SIGNAL_STRENGTH: 'signal_strength'>,
    'original_icon': 'mdi:wifi',
    'original_name': 'Gateway Wifi Connection Strength',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_gateway_None_wifiConnectionStrength',
    'unit_of_measurement': 'dBm',
  })
# ---
# name: test_altherma[sensor.altherma_gateway_wifi_connection_strength-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'signal_strength',
      'friendly_name': 'Sanne Gateway Wifi Connection Strength',
      'icon': 'mdi:wifi',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': 'dBm',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_gateway_wifi_connection_strength',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '-81',
  })
# ---
# name: test_altherma[sensor.altherma_indoorunithydro_eeprom_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_indoorunithydro_eeprom_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnitHydro Eeprom Version',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_indoorUnitHydro_None_eepromVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.altherma_indoorunithydro_eeprom_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne IndoorUnitHydro Eeprom Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_indoorunithydro_eeprom_version',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '3608726-74',
  })
# ---
# name: test_altherma[sensor.altherma_indoorunithydro_icon_id-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_indoorunithydro_icon_id',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnitHydro Icon Id',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_indoorUnitHydro_None_iconId',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.altherma_indoorunithydro_icon_id-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne IndoorUnitHydro Icon Id',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_indoorunithydro_icon_id',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '4',
  })
# ---
# name: test_altherma[sensor.altherma_indoorunithydro_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_indoorunithydro_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnitHydro Model Info',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_indoorUnitHydro_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.altherma_indoorunithydro_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne IndoorUnitHydro Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_indoorunithydro_model_info',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'EHVX08S23EJ9W',
  })
# ---
# name: test_altherma[sensor.altherma_indoorunithydro_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_indoorunithydro_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnitHydro Name',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_indoorUnitHydro_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.altherma_indoorunithydro_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne IndoorUnitHydro Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_indoorunithydro_name',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'Indoor Hydro Unit',
  })
# ---
# name: test_altherma[sensor.altherma_indoorunithydro_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_indoorunithydro_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnitHydro Software Version',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_indoorUnitHydro_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.altherma_indoorunithydro_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne IndoorUnitHydro Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_indoorunithydro_software_version',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0221',
  })
# ---
# name: test_altherma[sensor.altherma_outdoorunit_icon_id-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_outdoorunit_icon_id',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Icon Id',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_outdoorUnit_None_iconId',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.altherma_outdoorunit_icon_id-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne OutdoorUnit Icon Id',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_outdoorunit_icon_id',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '5',
  })
# ---
# name: test_altherma[sensor.altherma_outdoorunit_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_outdoorunit_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Model Info',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_outdoorUnit_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.altherma_outdoorunit_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne OutdoorUnit Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_outdoorunit_model_info',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_altherma[sensor.altherma_outdoorunit_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_outdoorunit_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Name',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_outdoorUnit_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.altherma_outdoorunit_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne OutdoorUnit Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_outdoorunit_name',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'Outdoor Unit',
  })
# ---
# name: test_altherma[sensor.altherma_outdoorunit_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_outdoorunit_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Software Version',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_outdoorUnit_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.altherma_outdoorunit_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne OutdoorUnit Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_outdoorunit_software_version',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'FFFF',
  })
# ---
# name: test_altherma[sensor.altherma_ratelimit_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_ratelimit_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit day',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_limitsensor_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.altherma_ratelimit_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_ratelimit_day',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma[sensor.altherma_ratelimit_minute-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_ratelimit_minute',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit minute',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_limitsensor_minute',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.altherma_ratelimit_minute-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit minute',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_ratelimit_minute',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma[sensor.altherma_ratelimit_ratelimit_reset-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_ratelimit_ratelimit_reset',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit ratelimit_reset',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_limitsensor_ratelimit_reset',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.altherma_ratelimit_ratelimit_reset-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit ratelimit_reset',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_ratelimit_ratelimit_reset',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma[sensor.altherma_ratelimit_remaining_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_ratelimit_remaining_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_day',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_limitsensor_remaining_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.altherma_ratelimit_remaining_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit remaining_day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_ratelimit_remaining_day',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma[sensor.altherma_ratelimit_remaining_minutes-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_ratelimit_remaining_minutes',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_minutes',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_limitsensor_remaining_minutes',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.altherma_ratelimit_remaining_minutes-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit remaining_minutes',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_ratelimit_remaining_minutes',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma[sensor.altherma_ratelimit_retry_after-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_ratelimit_retry_after',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit retry_after',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_limitsensor_retry_after',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.altherma_ratelimit_retry_after-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit retry_after',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_ratelimit_retry_after',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma[sensor.altherma_userinterface_date_time-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_userinterface_date_time',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'UserInterface Date Time',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_userInterface_None_dateTime',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.altherma_userinterface_date_time-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne UserInterface Date Time',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_userinterface_date_time',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '2022-06-01T09:17:49',
  })
# ---
# name: test_altherma[sensor.altherma_userinterface_firmware_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_userinterface_firmware_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'UserInterface Firmware Version',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_userInterface_None_firmwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.altherma_userinterface_firmware_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne UserInterface Firmware Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_userinterface_firmware_version',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '6.3.0',
  })
# ---
# name: test_altherma[sensor.altherma_userinterface_icon_id-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_userinterface_icon_id',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'UserInterface Icon Id',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_userInterface_None_iconId',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.altherma_userinterface_icon_id-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne UserInterface Icon Id',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_userinterface_icon_id',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '6',
  })
# ---
# name: test_altherma[sensor.altherma_userinterface_micon_id-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_userinterface_micon_id',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'UserInterface Micon Id',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_userInterface_None_miconId',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.altherma_userinterface_micon_id-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne UserInterface Micon Id',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_userinterface_micon_id',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '20010E02',
  })
# ---
# name: test_altherma[sensor.altherma_userinterface_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_userinterface_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'UserInterface Name',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_userInterface_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.altherma_userinterface_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne UserInterface Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_userinterface_name',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'User Interface',
  })
# ---
# name: test_altherma[sensor.altherma_userinterface_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_userinterface_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'UserInterface Software Version',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_userInterface_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.altherma_userinterface_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne UserInterface Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_userinterface_software_version',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '6.3.0',
  })
# ---
# name: test_altherma[sensor.johnny_maaike_climatecontrol_cooling_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_cooling_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_electrical_cooling_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma[sensor.johnny_maaike_climatecontrol_cooling_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Cooling Daily Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_cooling_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma[sensor.johnny_maaike_climatecontrol_cooling_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_cooling_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_electrical_cooling_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma[sensor.johnny_maaike_climatecontrol_cooling_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Cooling Weekly Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_cooling_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0.2',
  })
# ---
# name: test_altherma[sensor.johnny_maaike_climatecontrol_cooling_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_cooling_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_electrical_cooling_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma[sensor.johnny_maaike_climatecontrol_cooling_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Cooling Yearly Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_cooling_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '6.6',
  })
# ---
# name: test_altherma[sensor.johnny_maaike_climatecontrol_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Error Code',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.johnny_maaike_climatecontrol_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_error_code',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '00-',
  })
# ---
# name: test_altherma[sensor.johnny_maaike_climatecontrol_heating_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_heating_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_electrical_heating_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma[sensor.johnny_maaike_climatecontrol_heating_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Heating Daily Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_heating_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma[sensor.johnny_maaike_climatecontrol_heating_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_heating_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_electrical_heating_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma[sensor.johnny_maaike_climatecontrol_heating_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Heating Weekly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_heating_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma[sensor.johnny_maaike_climatecontrol_heating_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_heating_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_electrical_heating_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma[sensor.johnny_maaike_climatecontrol_heating_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Heating Yearly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_heating_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '11.5',
  })
# ---
# name: test_altherma[sensor.johnny_maaike_climatecontrol_icon_id-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_icon_id',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Icon Id',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_None_iconId',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.johnny_maaike_climatecontrol_icon_id-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Icon Id',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_icon_id',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '15',
  })
# ---
# name: test_altherma[sensor.johnny_maaike_climatecontrol_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Name',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.johnny_maaike_climatecontrol_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_name',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'Johnny&Maaike',
  })
# ---
# name: test_altherma[sensor.johnny_maaike_climatecontrol_outdoor_silent_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_outdoor_silent_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'ClimateControl Outdoor Silent Mode',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_None_outdoorSilentMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.johnny_maaike_climatecontrol_outdoor_silent_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Outdoor Silent Mode',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_outdoor_silent_mode',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[sensor.johnny_maaike_climatecontrol_outdoor_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_outdoor_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Outdoor Temperature',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_sensoryData_outdoorTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_altherma[sensor.johnny_maaike_climatecontrol_outdoor_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Sanne ClimateControl Outdoor Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_outdoor_temperature',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '13.5',
  })
# ---
# name: test_altherma[sensor.johnny_maaike_climatecontrol_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_room_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Room Temperature',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_sensoryData_roomTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_altherma[sensor.johnny_maaike_climatecontrol_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Sanne ClimateControl Room Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_room_temperature',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '19',
  })
# ---
# name: test_altherma[sensor.johnny_maaike_gateway_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_gateway_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Error Code',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_gateway_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.johnny_maaike_gateway_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_gateway_error_code',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_altherma[sensor.johnny_maaike_gateway_firmware_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_gateway_firmware_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Firmware Version',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_gateway_None_firmwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.johnny_maaike_gateway_firmware_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Firmware Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_gateway_firmware_version',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '1_12_51',
  })
# ---
# name: test_altherma[sensor.johnny_maaike_gateway_mac_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_gateway_mac_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Mac Address',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_gateway_None_macAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.johnny_maaike_gateway_mac_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Mac Address',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_gateway_mac_address',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_altherma[sensor.johnny_maaike_gateway_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_gateway_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Model Info',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_gateway_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.johnny_maaike_gateway_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_gateway_model_info',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'BRP069C4x',
  })
# ---
# name: test_altherma[sensor.johnny_maaike_gateway_region_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_gateway_region_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Region Code',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_gateway_None_regionCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.johnny_maaike_gateway_region_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Region Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_gateway_region_code',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'eu',
  })
# ---
# name: test_altherma[sensor.johnny_maaike_gateway_serial_number-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_gateway_serial_number',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:numeric',
    'original_name': 'Gateway Serial Number',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_gateway_None_serialNumber',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.johnny_maaike_gateway_serial_number-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Serial Number',
      'icon': 'mdi:numeric',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_gateway_serial_number',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0000000002641374',
  })
# ---
# name: test_altherma[sensor.johnny_maaike_gateway_ssid-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_gateway_ssid',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:access-point-network',
    'original_name': 'Gateway Ssid',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_gateway_None_ssid',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.johnny_maaike_gateway_ssid-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Ssid',
      'icon': 'mdi:access-point-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_gateway_ssid',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'DaikinAP83731',
  })
# ---
# name: test_altherma[sensor.johnny_maaike_gateway_time_zone-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_gateway_time_zone',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Time Zone',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_gateway_None_timeZone',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.johnny_maaike_gateway_time_zone-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Time Zone',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_gateway_time_zone',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'Europe/Amsterdam',
  })
# ---
# name: test_altherma[sensor.johnny_maaike_gateway_wifi_connection_s_s_i_d-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_gateway_wifi_connection_s_s_i_d',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:access-point-network',
    'original_name': 'Gateway Wifi Connection S S I D',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_gateway_None_wifiConnectionSSID',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.johnny_maaike_gateway_wifi_connection_s_s_i_d-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Wifi Connection S S I D',
      'icon': 'mdi:access-point-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_gateway_wifi_connection_s_s_i_d',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'WILLEMSEN',
  })
# ---
# name: test_altherma[sensor.johnny_maaike_gateway_wifi_connection_strength-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_gateway_wifi_connection_strength',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.SIGNAL_STRENGTH: 'signal_strength'>,
    'original_icon': 'mdi:wifi',
    'original_name': 'Gateway Wifi Connection Strength',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_gateway_None_wifiConnectionStrength',
    'unit_of_measurement': 'dBm',
  })
# ---
# name: test_altherma[sensor.johnny_maaike_gateway_wifi_connection_strength-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'signal_strength',
      'friendly_name': 'Sanne Gateway Wifi Connection Strength',
      'icon': 'mdi:wifi',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': 'dBm',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_gateway_wifi_connection_strength',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '-47',
  })
# ---
# name: test_altherma[sensor.johnny_maaike_indoorunit_dry_keep_setting-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.johnny_maaike_indoorunit_dry_keep_setting',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:water-percent',
    'original_name': 'IndoorUnit Dry Keep Setting',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_indoorUnit_None_dryKeepSetting',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.johnny_maaike_indoorunit_dry_keep_setting-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne IndoorUnit Dry Keep Setting',
      'icon': 'mdi:water-percent',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_indoorunit_dry_keep_setting',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_altherma[sensor.johnny_maaike_indoorunit_eeprom_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_indoorunit_eeprom_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Eeprom Version',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_indoorUnit_None_eepromVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.johnny_maaike_indoorunit_eeprom_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne IndoorUnit Eeprom Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_indoorunit_eeprom_version',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '12FC',
  })
# ---
# name: test_altherma[sensor.johnny_maaike_indoorunit_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_indoorunit_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Software Version',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_indoorUnit_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.johnny_maaike_indoorunit_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne IndoorUnit Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_indoorunit_software_version',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '20003001',
  })
# ---
# name: test_altherma[sensor.johnny_maaike_outdoorunit_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_outdoorunit_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Error Code',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_outdoorUnit_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.johnny_maaike_outdoorunit_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne OutdoorUnit Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_outdoorunit_error_code',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '00-',
  })
# ---
# name: test_altherma[sensor.johnny_maaike_ratelimit_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_ratelimit_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit day',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_limitsensor_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.johnny_maaike_ratelimit_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_ratelimit_day',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma[sensor.johnny_maaike_ratelimit_minute-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_ratelimit_minute',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit minute',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_limitsensor_minute',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.johnny_maaike_ratelimit_minute-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit minute',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_ratelimit_minute',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma[sensor.johnny_maaike_ratelimit_ratelimit_reset-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_ratelimit_ratelimit_reset',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit ratelimit_reset',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_limitsensor_ratelimit_reset',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.johnny_maaike_ratelimit_ratelimit_reset-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit ratelimit_reset',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_ratelimit_ratelimit_reset',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma[sensor.johnny_maaike_ratelimit_remaining_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_ratelimit_remaining_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_day',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_limitsensor_remaining_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.johnny_maaike_ratelimit_remaining_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit remaining_day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_ratelimit_remaining_day',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma[sensor.johnny_maaike_ratelimit_remaining_minutes-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_ratelimit_remaining_minutes',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_minutes',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_limitsensor_remaining_minutes',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.johnny_maaike_ratelimit_remaining_minutes-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit remaining_minutes',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_ratelimit_remaining_minutes',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma[sensor.johnny_maaike_ratelimit_retry_after-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_ratelimit_retry_after',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit retry_after',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_limitsensor_retry_after',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.johnny_maaike_ratelimit_retry_after-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit retry_after',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_ratelimit_retry_after',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma[sensor.linde_climatecontrol_cooling_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.linde_climatecontrol_cooling_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_electrical_cooling_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma[sensor.linde_climatecontrol_cooling_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Cooling Daily Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_climatecontrol_cooling_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma[sensor.linde_climatecontrol_cooling_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.linde_climatecontrol_cooling_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_electrical_cooling_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma[sensor.linde_climatecontrol_cooling_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Cooling Weekly Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_climatecontrol_cooling_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0.3',
  })
# ---
# name: test_altherma[sensor.linde_climatecontrol_cooling_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.linde_climatecontrol_cooling_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_electrical_cooling_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma[sensor.linde_climatecontrol_cooling_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Cooling Yearly Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_climatecontrol_cooling_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '1.6',
  })
# ---
# name: test_altherma[sensor.linde_climatecontrol_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_climatecontrol_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Error Code',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.linde_climatecontrol_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_climatecontrol_error_code',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '00-',
  })
# ---
# name: test_altherma[sensor.linde_climatecontrol_heating_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.linde_climatecontrol_heating_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_electrical_heating_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma[sensor.linde_climatecontrol_heating_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Heating Daily Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_climatecontrol_heating_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma[sensor.linde_climatecontrol_heating_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.linde_climatecontrol_heating_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_electrical_heating_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma[sensor.linde_climatecontrol_heating_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Heating Weekly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_climatecontrol_heating_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma[sensor.linde_climatecontrol_heating_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.linde_climatecontrol_heating_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_electrical_heating_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma[sensor.linde_climatecontrol_heating_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Heating Yearly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_climatecontrol_heating_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '18.7',
  })
# ---
# name: test_altherma[sensor.linde_climatecontrol_icon_id-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_climatecontrol_icon_id',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Icon Id',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_None_iconId',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.linde_climatecontrol_icon_id-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Icon Id',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_climatecontrol_icon_id',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '15',
  })
# ---
# name: test_altherma[sensor.linde_climatecontrol_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_climatecontrol_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Name',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.linde_climatecontrol_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_climatecontrol_name',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'Linde',
  })
# ---
# name: test_altherma[sensor.linde_climatecontrol_outdoor_silent_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.linde_climatecontrol_outdoor_silent_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'ClimateControl Outdoor Silent Mode',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_None_outdoorSilentMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.linde_climatecontrol_outdoor_silent_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Outdoor Silent Mode',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_climatecontrol_outdoor_silent_mode',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[sensor.linde_climatecontrol_outdoor_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.linde_climatecontrol_outdoor_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Outdoor Temperature',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_sensoryData_outdoorTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_altherma[sensor.linde_climatecontrol_outdoor_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Sanne ClimateControl Outdoor Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_climatecontrol_outdoor_temperature',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '13.5',
  })
# ---
# name: test_altherma[sensor.linde_climatecontrol_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.linde_climatecontrol_room_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Room Temperature',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_sensoryData_roomTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_altherma[sensor.linde_climatecontrol_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Sanne ClimateControl Room Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_climatecontrol_room_temperature',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '18',
  })
# ---
# name: test_altherma[sensor.linde_gateway_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_gateway_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Error Code',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_gateway_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.linde_gateway_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_gateway_error_code',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_altherma[sensor.linde_gateway_firmware_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_gateway_firmware_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Firmware Version',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_gateway_None_firmwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.linde_gateway_firmware_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Firmware Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_gateway_firmware_version',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '1_12_84',
  })
# ---
# name: test_altherma[sensor.linde_gateway_mac_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_gateway_mac_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Mac Address',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_gateway_None_macAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.linde_gateway_mac_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Mac Address',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_gateway_mac_address',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_altherma[sensor.linde_gateway_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_gateway_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Model Info',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_gateway_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.linde_gateway_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_gateway_model_info',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'BRP069C4x',
  })
# ---
# name: test_altherma[sensor.linde_gateway_region_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_gateway_region_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Region Code',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_gateway_None_regionCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.linde_gateway_region_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Region Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_gateway_region_code',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'eu',
  })
# ---
# name: test_altherma[sensor.linde_gateway_serial_number-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_gateway_serial_number',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:numeric',
    'original_name': 'Gateway Serial Number',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_gateway_None_serialNumber',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.linde_gateway_serial_number-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Serial Number',
      'icon': 'mdi:numeric',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_gateway_serial_number',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0000000002404589',
  })
# ---
# name: test_altherma[sensor.linde_gateway_ssid-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_gateway_ssid',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:access-point-network',
    'original_name': 'Gateway Ssid',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_gateway_None_ssid',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.linde_gateway_ssid-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Ssid',
      'icon': 'mdi:access-point-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_gateway_ssid',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'DaikinAP66051',
  })
# ---
# name: test_altherma[sensor.linde_gateway_time_zone-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_gateway_time_zone',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Time Zone',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_gateway_None_timeZone',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.linde_gateway_time_zone-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Time Zone',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_gateway_time_zone',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'Europe/Amsterdam',
  })
# ---
# name: test_altherma[sensor.linde_gateway_wifi_connection_s_s_i_d-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_gateway_wifi_connection_s_s_i_d',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:access-point-network',
    'original_name': 'Gateway Wifi Connection S S I D',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_gateway_None_wifiConnectionSSID',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.linde_gateway_wifi_connection_s_s_i_d-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Wifi Connection S S I D',
      'icon': 'mdi:access-point-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_gateway_wifi_connection_s_s_i_d',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'WILLEMSEN',
  })
# ---
# name: test_altherma[sensor.linde_gateway_wifi_connection_strength-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_gateway_wifi_connection_strength',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.SIGNAL_STRENGTH: 'signal_strength'>,
    'original_icon': 'mdi:wifi',
    'original_name': 'Gateway Wifi Connection Strength',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_gateway_None_wifiConnectionStrength',
    'unit_of_measurement': 'dBm',
  })
# ---
# name: test_altherma[sensor.linde_gateway_wifi_connection_strength-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'signal_strength',
      'friendly_name': 'Sanne Gateway Wifi Connection Strength',
      'icon': 'mdi:wifi',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': 'dBm',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_gateway_wifi_connection_strength',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '-48',
  })
# ---
# name: test_altherma[sensor.linde_indoorunit_dry_keep_setting-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.linde_indoorunit_dry_keep_setting',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:water-percent',
    'original_name': 'IndoorUnit Dry Keep Setting',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_indoorUnit_None_dryKeepSetting',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.linde_indoorunit_dry_keep_setting-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne IndoorUnit Dry Keep Setting',
      'icon': 'mdi:water-percent',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_indoorunit_dry_keep_setting',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_altherma[sensor.linde_indoorunit_eeprom_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_indoorunit_eeprom_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Eeprom Version',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_indoorUnit_None_eepromVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.linde_indoorunit_eeprom_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne IndoorUnit Eeprom Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_indoorunit_eeprom_version',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '12FD',
  })
# ---
# name: test_altherma[sensor.linde_indoorunit_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_indoorunit_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Software Version',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_indoorUnit_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.linde_indoorunit_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne IndoorUnit Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_indoorunit_software_version',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '20003001',
  })
# ---
# name: test_altherma[sensor.linde_outdoorunit_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_outdoorunit_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Error Code',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_outdoorUnit_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.linde_outdoorunit_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne OutdoorUnit Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_outdoorunit_error_code',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '00-',
  })
# ---
# name: test_altherma[sensor.linde_ratelimit_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_ratelimit_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit day',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_limitsensor_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.linde_ratelimit_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_ratelimit_day',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma[sensor.linde_ratelimit_minute-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_ratelimit_minute',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit minute',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_limitsensor_minute',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.linde_ratelimit_minute-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit minute',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_ratelimit_minute',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma[sensor.linde_ratelimit_ratelimit_reset-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_ratelimit_ratelimit_reset',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit ratelimit_reset',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_limitsensor_ratelimit_reset',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.linde_ratelimit_ratelimit_reset-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit ratelimit_reset',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_ratelimit_ratelimit_reset',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma[sensor.linde_ratelimit_remaining_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_ratelimit_remaining_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_day',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_limitsensor_remaining_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.linde_ratelimit_remaining_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit remaining_day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_ratelimit_remaining_day',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma[sensor.linde_ratelimit_remaining_minutes-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_ratelimit_remaining_minutes',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_minutes',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_limitsensor_remaining_minutes',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.linde_ratelimit_remaining_minutes-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit remaining_minutes',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_ratelimit_remaining_minutes',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma[sensor.linde_ratelimit_retry_after-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_ratelimit_retry_after',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit retry_after',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_limitsensor_retry_after',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.linde_ratelimit_retry_after-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit retry_after',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_ratelimit_retry_after',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma[sensor.sanne_climatecontrol_cooling_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sanne_climatecontrol_cooling_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_electrical_cooling_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma[sensor.sanne_climatecontrol_cooling_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Cooling Daily Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_climatecontrol_cooling_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma[sensor.sanne_climatecontrol_cooling_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sanne_climatecontrol_cooling_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_electrical_cooling_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma[sensor.sanne_climatecontrol_cooling_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Cooling Weekly Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_climatecontrol_cooling_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0.3',
  })
# ---
# name: test_altherma[sensor.sanne_climatecontrol_cooling_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sanne_climatecontrol_cooling_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_electrical_cooling_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma[sensor.sanne_climatecontrol_cooling_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Cooling Yearly Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_climatecontrol_cooling_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '1.6',
  })
# ---
# name: test_altherma[sensor.sanne_climatecontrol_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_climatecontrol_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Error Code',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.sanne_climatecontrol_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_climatecontrol_error_code',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '00-',
  })
# ---
# name: test_altherma[sensor.sanne_climatecontrol_heating_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sanne_climatecontrol_heating_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_electrical_heating_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma[sensor.sanne_climatecontrol_heating_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Heating Daily Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_climatecontrol_heating_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma[sensor.sanne_climatecontrol_heating_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sanne_climatecontrol_heating_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_electrical_heating_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma[sensor.sanne_climatecontrol_heating_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Heating Weekly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_climatecontrol_heating_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma[sensor.sanne_climatecontrol_heating_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sanne_climatecontrol_heating_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_electrical_heating_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma[sensor.sanne_climatecontrol_heating_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Heating Yearly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_climatecontrol_heating_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '31.5',
  })
# ---
# name: test_altherma[sensor.sanne_climatecontrol_icon_id-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_climatecontrol_icon_id',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Icon Id',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_None_iconId',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.sanne_climatecontrol_icon_id-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Icon Id',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_climatecontrol_icon_id',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '15',
  })
# ---
# name: test_altherma[sensor.sanne_climatecontrol_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_climatecontrol_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Name',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.sanne_climatecontrol_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_climatecontrol_name',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'Sanne',
  })
# ---
# name: test_altherma[sensor.sanne_climatecontrol_outdoor_silent_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sanne_climatecontrol_outdoor_silent_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'ClimateControl Outdoor Silent Mode',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_None_outdoorSilentMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.sanne_climatecontrol_outdoor_silent_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Outdoor Silent Mode',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_climatecontrol_outdoor_silent_mode',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[sensor.sanne_climatecontrol_outdoor_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sanne_climatecontrol_outdoor_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Outdoor Temperature',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_sensoryData_outdoorTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_altherma[sensor.sanne_climatecontrol_outdoor_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Sanne ClimateControl Outdoor Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_climatecontrol_outdoor_temperature',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '13.5',
  })
# ---
# name: test_altherma[sensor.sanne_climatecontrol_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sanne_climatecontrol_room_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Room Temperature',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_sensoryData_roomTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_altherma[sensor.sanne_climatecontrol_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Sanne ClimateControl Room Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_climatecontrol_room_temperature',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '19',
  })
# ---
# name: test_altherma[sensor.sanne_gateway_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_gateway_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Error Code',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_gateway_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.sanne_gateway_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_gateway_error_code',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_altherma[sensor.sanne_gateway_firmware_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_gateway_firmware_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Firmware Version',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_gateway_None_firmwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.sanne_gateway_firmware_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Firmware Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_gateway_firmware_version',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '1_12_51',
  })
# ---
# name: test_altherma[sensor.sanne_gateway_mac_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_gateway_mac_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Mac Address',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_gateway_None_macAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.sanne_gateway_mac_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Mac Address',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_gateway_mac_address',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_altherma[sensor.sanne_gateway_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_gateway_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Model Info',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_gateway_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.sanne_gateway_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_gateway_model_info',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'BRP069C4x',
  })
# ---
# name: test_altherma[sensor.sanne_gateway_region_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_gateway_region_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Region Code',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_gateway_None_regionCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.sanne_gateway_region_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Region Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_gateway_region_code',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'eu',
  })
# ---
# name: test_altherma[sensor.sanne_gateway_serial_number-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_gateway_serial_number',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:numeric',
    'original_name': 'Gateway Serial Number',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_gateway_None_serialNumber',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.sanne_gateway_serial_number-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Serial Number',
      'icon': 'mdi:numeric',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_gateway_serial_number',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0000000002405236',
  })
# ---
# name: test_altherma[sensor.sanne_gateway_ssid-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_gateway_ssid',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:access-point-network',
    'original_name': 'Gateway Ssid',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_gateway_None_ssid',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.sanne_gateway_ssid-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Ssid',
      'icon': 'mdi:access-point-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_gateway_ssid',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'DaikinAP22483',
  })
# ---
# name: test_altherma[sensor.sanne_gateway_time_zone-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_gateway_time_zone',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Time Zone',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_gateway_None_timeZone',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.sanne_gateway_time_zone-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Time Zone',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_gateway_time_zone',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'Europe/Amsterdam',
  })
# ---
# name: test_altherma[sensor.sanne_gateway_wifi_connection_s_s_i_d-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_gateway_wifi_connection_s_s_i_d',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:access-point-network',
    'original_name': 'Gateway Wifi Connection S S I D',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_gateway_None_wifiConnectionSSID',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.sanne_gateway_wifi_connection_s_s_i_d-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Wifi Connection S S I D',
      'icon': 'mdi:access-point-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_gateway_wifi_connection_s_s_i_d',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'WILLEMSEN',
  })
# ---
# name: test_altherma[sensor.sanne_gateway_wifi_connection_strength-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_gateway_wifi_connection_strength',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.SIGNAL_STRENGTH: 'signal_strength'>,
    'original_icon': 'mdi:wifi',
    'original_name': 'Gateway Wifi Connection Strength',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_gateway_None_wifiConnectionStrength',
    'unit_of_measurement': 'dBm',
  })
# ---
# name: test_altherma[sensor.sanne_gateway_wifi_connection_strength-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'signal_strength',
      'friendly_name': 'Sanne Gateway Wifi Connection Strength',
      'icon': 'mdi:wifi',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': 'dBm',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_gateway_wifi_connection_strength',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '-35',
  })
# ---
# name: test_altherma[sensor.sanne_indoorunit_dry_keep_setting-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sanne_indoorunit_dry_keep_setting',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:water-percent',
    'original_name': 'IndoorUnit Dry Keep Setting',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_indoorUnit_None_dryKeepSetting',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.sanne_indoorunit_dry_keep_setting-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne IndoorUnit Dry Keep Setting',
      'icon': 'mdi:water-percent',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_indoorunit_dry_keep_setting',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_altherma[sensor.sanne_indoorunit_eeprom_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_indoorunit_eeprom_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Eeprom Version',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_indoorUnit_None_eepromVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.sanne_indoorunit_eeprom_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne IndoorUnit Eeprom Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_indoorunit_eeprom_version',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '12FD',
  })
# ---
# name: test_altherma[sensor.sanne_indoorunit_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_indoorunit_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Software Version',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_indoorUnit_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.sanne_indoorunit_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne IndoorUnit Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_indoorunit_software_version',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '20003001',
  })
# ---
# name: test_altherma[sensor.sanne_outdoorunit_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_outdoorunit_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Error Code',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_outdoorUnit_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.sanne_outdoorunit_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne OutdoorUnit Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_outdoorunit_error_code',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '00-',
  })
# ---
# name: test_altherma[sensor.sanne_ratelimit_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_ratelimit_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit day',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_limitsensor_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.sanne_ratelimit_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_ratelimit_day',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma[sensor.sanne_ratelimit_minute-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_ratelimit_minute',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit minute',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_limitsensor_minute',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.sanne_ratelimit_minute-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit minute',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_ratelimit_minute',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma[sensor.sanne_ratelimit_ratelimit_reset-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_ratelimit_ratelimit_reset',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit ratelimit_reset',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_limitsensor_ratelimit_reset',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.sanne_ratelimit_ratelimit_reset-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit ratelimit_reset',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_ratelimit_ratelimit_reset',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma[sensor.sanne_ratelimit_remaining_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_ratelimit_remaining_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_day',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_limitsensor_remaining_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.sanne_ratelimit_remaining_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit remaining_day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_ratelimit_remaining_day',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma[sensor.sanne_ratelimit_remaining_minutes-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_ratelimit_remaining_minutes',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_minutes',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_limitsensor_remaining_minutes',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.sanne_ratelimit_remaining_minutes-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit remaining_minutes',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_ratelimit_remaining_minutes',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma[sensor.sanne_ratelimit_retry_after-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_ratelimit_retry_after',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit retry_after',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_limitsensor_retry_after',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.sanne_ratelimit_retry_after-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit retry_after',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_ratelimit_retry_after',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma[sensor.werkkamer_climatecontrol_cooling_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.werkkamer_climatecontrol_cooling_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_electrical_cooling_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma[sensor.werkkamer_climatecontrol_cooling_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Cooling Daily Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_climatecontrol_cooling_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0.1',
  })
# ---
# name: test_altherma[sensor.werkkamer_climatecontrol_cooling_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.werkkamer_climatecontrol_cooling_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_electrical_cooling_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma[sensor.werkkamer_climatecontrol_cooling_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Cooling Weekly Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_climatecontrol_cooling_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0.3',
  })
# ---
# name: test_altherma[sensor.werkkamer_climatecontrol_cooling_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.werkkamer_climatecontrol_cooling_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_electrical_cooling_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma[sensor.werkkamer_climatecontrol_cooling_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Cooling Yearly Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_climatecontrol_cooling_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '1.6',
  })
# ---
# name: test_altherma[sensor.werkkamer_climatecontrol_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_climatecontrol_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Error Code',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.werkkamer_climatecontrol_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_climatecontrol_error_code',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '00-',
  })
# ---
# name: test_altherma[sensor.werkkamer_climatecontrol_heating_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.werkkamer_climatecontrol_heating_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_electrical_heating_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma[sensor.werkkamer_climatecontrol_heating_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Heating Daily Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_climatecontrol_heating_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma[sensor.werkkamer_climatecontrol_heating_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.werkkamer_climatecontrol_heating_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_electrical_heating_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma[sensor.werkkamer_climatecontrol_heating_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Heating Weekly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_climatecontrol_heating_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma[sensor.werkkamer_climatecontrol_heating_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.werkkamer_climatecontrol_heating_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_electrical_heating_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma[sensor.werkkamer_climatecontrol_heating_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Heating Yearly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_climatecontrol_heating_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '22.5',
  })
# ---
# name: test_altherma[sensor.werkkamer_climatecontrol_icon_id-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_climatecontrol_icon_id',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Icon Id',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_None_iconId',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.werkkamer_climatecontrol_icon_id-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Icon Id',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_climatecontrol_icon_id',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '15',
  })
# ---
# name: test_altherma[sensor.werkkamer_climatecontrol_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_climatecontrol_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Name',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.werkkamer_climatecontrol_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_climatecontrol_name',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'Werkkamer',
  })
# ---
# name: test_altherma[sensor.werkkamer_climatecontrol_outdoor_silent_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.werkkamer_climatecontrol_outdoor_silent_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'ClimateControl Outdoor Silent Mode',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_None_outdoorSilentMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.werkkamer_climatecontrol_outdoor_silent_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Outdoor Silent Mode',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_climatecontrol_outdoor_silent_mode',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[sensor.werkkamer_climatecontrol_outdoor_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.werkkamer_climatecontrol_outdoor_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Outdoor Temperature',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_sensoryData_outdoorTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_altherma[sensor.werkkamer_climatecontrol_outdoor_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Sanne ClimateControl Outdoor Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_climatecontrol_outdoor_temperature',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '13.5',
  })
# ---
# name: test_altherma[sensor.werkkamer_climatecontrol_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.werkkamer_climatecontrol_room_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Room Temperature',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_sensoryData_roomTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_altherma[sensor.werkkamer_climatecontrol_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Sanne ClimateControl Room Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_climatecontrol_room_temperature',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '19',
  })
# ---
# name: test_altherma[sensor.werkkamer_gateway_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_gateway_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Error Code',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_gateway_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.werkkamer_gateway_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_gateway_error_code',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_altherma[sensor.werkkamer_gateway_firmware_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_gateway_firmware_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Firmware Version',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_gateway_None_firmwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.werkkamer_gateway_firmware_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Firmware Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_gateway_firmware_version',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '1_12_51',
  })
# ---
# name: test_altherma[sensor.werkkamer_gateway_mac_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_gateway_mac_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Mac Address',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_gateway_None_macAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.werkkamer_gateway_mac_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Mac Address',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_gateway_mac_address',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_altherma[sensor.werkkamer_gateway_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_gateway_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Model Info',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_gateway_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.werkkamer_gateway_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_gateway_model_info',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'BRP069C4x',
  })
# ---
# name: test_altherma[sensor.werkkamer_gateway_region_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_gateway_region_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Region Code',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_gateway_None_regionCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.werkkamer_gateway_region_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Region Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_gateway_region_code',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'eu',
  })
# ---
# name: test_altherma[sensor.werkkamer_gateway_serial_number-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_gateway_serial_number',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:numeric',
    'original_name': 'Gateway Serial Number',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_gateway_None_serialNumber',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.werkkamer_gateway_serial_number-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Serial Number',
      'icon': 'mdi:numeric',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_gateway_serial_number',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0000000002642750',
  })
# ---
# name: test_altherma[sensor.werkkamer_gateway_ssid-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_gateway_ssid',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:access-point-network',
    'original_name': 'Gateway Ssid',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_gateway_None_ssid',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.werkkamer_gateway_ssid-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Ssid',
      'icon': 'mdi:access-point-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_gateway_ssid',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'DaikinAP32931',
  })
# ---
# name: test_altherma[sensor.werkkamer_gateway_time_zone-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_gateway_time_zone',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Time Zone',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_gateway_None_timeZone',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.werkkamer_gateway_time_zone-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Time Zone',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_gateway_time_zone',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'Europe/Amsterdam',
  })
# ---
# name: test_altherma[sensor.werkkamer_gateway_wifi_connection_s_s_i_d-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_gateway_wifi_connection_s_s_i_d',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:access-point-network',
    'original_name': 'Gateway Wifi Connection S S I D',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_gateway_None_wifiConnectionSSID',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.werkkamer_gateway_wifi_connection_s_s_i_d-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Wifi Connection S S I D',
      'icon': 'mdi:access-point-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_gateway_wifi_connection_s_s_i_d',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'WILLEMSEN',
  })
# ---
# name: test_altherma[sensor.werkkamer_gateway_wifi_connection_strength-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_gateway_wifi_connection_strength',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.SIGNAL_STRENGTH: 'signal_strength'>,
    'original_icon': 'mdi:wifi',
    'original_name': 'Gateway Wifi Connection Strength',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_gateway_None_wifiConnectionStrength',
    'unit_of_measurement': 'dBm',
  })
# ---
# name: test_altherma[sensor.werkkamer_gateway_wifi_connection_strength-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'signal_strength',
      'friendly_name': 'Sanne Gateway Wifi Connection Strength',
      'icon': 'mdi:wifi',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': 'dBm',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_gateway_wifi_connection_strength',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '-46',
  })
# ---
# name: test_altherma[sensor.werkkamer_indoorunit_dry_keep_setting-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.werkkamer_indoorunit_dry_keep_setting',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:water-percent',
    'original_name': 'IndoorUnit Dry Keep Setting',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_indoorUnit_None_dryKeepSetting',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.werkkamer_indoorunit_dry_keep_setting-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne IndoorUnit Dry Keep Setting',
      'icon': 'mdi:water-percent',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_indoorunit_dry_keep_setting',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_altherma[sensor.werkkamer_indoorunit_eeprom_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_indoorunit_eeprom_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Eeprom Version',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_indoorUnit_None_eepromVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.werkkamer_indoorunit_eeprom_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne IndoorUnit Eeprom Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_indoorunit_eeprom_version',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '12FC',
  })
# ---
# name: test_altherma[sensor.werkkamer_indoorunit_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_indoorunit_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Software Version',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_indoorUnit_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.werkkamer_indoorunit_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne IndoorUnit Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_indoorunit_software_version',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '20003001',
  })
# ---
# name: test_altherma[sensor.werkkamer_outdoorunit_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_outdoorunit_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Error Code',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_outdoorUnit_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.werkkamer_outdoorunit_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne OutdoorUnit Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_outdoorunit_error_code',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '00-',
  })
# ---
# name: test_altherma[sensor.werkkamer_ratelimit_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_ratelimit_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit day',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_limitsensor_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.werkkamer_ratelimit_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_ratelimit_day',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma[sensor.werkkamer_ratelimit_minute-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_ratelimit_minute',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit minute',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_limitsensor_minute',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.werkkamer_ratelimit_minute-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit minute',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_ratelimit_minute',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma[sensor.werkkamer_ratelimit_ratelimit_reset-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_ratelimit_ratelimit_reset',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit ratelimit_reset',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_limitsensor_ratelimit_reset',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.werkkamer_ratelimit_ratelimit_reset-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit ratelimit_reset',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_ratelimit_ratelimit_reset',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma[sensor.werkkamer_ratelimit_remaining_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_ratelimit_remaining_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_day',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_limitsensor_remaining_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.werkkamer_ratelimit_remaining_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit remaining_day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_ratelimit_remaining_day',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma[sensor.werkkamer_ratelimit_remaining_minutes-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_ratelimit_remaining_minutes',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_minutes',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_limitsensor_remaining_minutes',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.werkkamer_ratelimit_remaining_minutes-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit remaining_minutes',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_ratelimit_remaining_minutes',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma[sensor.werkkamer_ratelimit_retry_after-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_ratelimit_retry_after',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit retry_after',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_limitsensor_retry_after',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.werkkamer_ratelimit_retry_after-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit retry_after',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_ratelimit_retry_after',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma[switch.johnny_maaike_climatecontrol_econo_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'switch',
    'entity_category': None,
    'entity_id': 'switch.johnny_maaike_climatecontrol_econo_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:leaf',
    'original_name': 'ClimateControl Econo Mode',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_econoMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[switch.johnny_maaike_climatecontrol_econo_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Econo Mode',
      'icon': 'mdi:leaf',
    }),
    'context': <ANY>,
    'entity_id': 'switch.johnny_maaike_climatecontrol_econo_mode',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_altherma[switch.johnny_maaike_climatecontrol_streamer_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'switch',
    'entity_category': None,
    'entity_id': 'switch.johnny_maaike_climatecontrol_streamer_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'hass:air-filter',
    'original_name': 'ClimateControl Streamer Mode',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_streamerMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[switch.johnny_maaike_climatecontrol_streamer_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Streamer Mode',
      'icon': 'hass:air-filter',
    }),
    'context': <ANY>,
    'entity_id': 'switch.johnny_maaike_climatecontrol_streamer_mode',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[switch.linde_climatecontrol_econo_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'switch',
    'entity_category': None,
    'entity_id': 'switch.linde_climatecontrol_econo_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:leaf',
    'original_name': 'ClimateControl Econo Mode',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_econoMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[switch.linde_climatecontrol_econo_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Econo Mode',
      'icon': 'mdi:leaf',
    }),
    'context': <ANY>,
    'entity_id': 'switch.linde_climatecontrol_econo_mode',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[switch.linde_climatecontrol_streamer_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'switch',
    'entity_category': None,
    'entity_id': 'switch.linde_climatecontrol_streamer_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'hass:air-filter',
    'original_name': 'ClimateControl Streamer Mode',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_streamerMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[switch.linde_climatecontrol_streamer_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Streamer Mode',
      'icon': 'hass:air-filter',
    }),
    'context': <ANY>,
    'entity_id': 'switch.linde_climatecontrol_streamer_mode',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[switch.sanne_climatecontrol_econo_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'switch',
    'entity_category': None,
    'entity_id': 'switch.sanne_climatecontrol_econo_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:leaf',
    'original_name': 'ClimateControl Econo Mode',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_econoMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[switch.sanne_climatecontrol_econo_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Econo Mode',
      'icon': 'mdi:leaf',
    }),
    'context': <ANY>,
    'entity_id': 'switch.sanne_climatecontrol_econo_mode',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[switch.sanne_climatecontrol_streamer_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'switch',
    'entity_category': None,
    'entity_id': 'switch.sanne_climatecontrol_streamer_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'hass:air-filter',
    'original_name': 'ClimateControl Streamer Mode',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_streamerMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[switch.sanne_climatecontrol_streamer_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Streamer Mode',
      'icon': 'hass:air-filter',
    }),
    'context': <ANY>,
    'entity_id': 'switch.sanne_climatecontrol_streamer_mode',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[switch.werkkamer_climatecontrol_econo_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'switch',
    'entity_category': None,
    'entity_id': 'switch.werkkamer_climatecontrol_econo_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:leaf',
    'original_name': 'ClimateControl Econo Mode',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_econoMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[switch.werkkamer_climatecontrol_econo_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Econo Mode',
      'icon': 'mdi:leaf',
    }),
    'context': <ANY>,
    'entity_id': 'switch.werkkamer_climatecontrol_econo_mode',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[switch.werkkamer_climatecontrol_streamer_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'switch',
    'entity_category': None,
    'entity_id': 'switch.werkkamer_climatecontrol_streamer_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'hass:air-filter',
    'original_name': 'ClimateControl Streamer Mode',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_streamerMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[switch.werkkamer_climatecontrol_streamer_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Streamer Mode',
      'icon': 'hass:air-filter',
    }),
    'context': <ANY>,
    'entity_id': 'switch.werkkamer_climatecontrol_streamer_mode',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[water_heater.altherma-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'max_temp': 60.0,
      'min_temp': 30.0,
      'operation_list': list([
        'off',
        'heat_pump',
        'performance',
      ]),
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'water_heater',
    'entity_category': None,
    'entity_id': 'water_heater.altherma',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Altherma',
    'platform': 'daikin_onecta',
    'supported_features': <WaterHeaterEntityFeature: 3>,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[water_heater.altherma-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 48.0,
      'friendly_name': 'Altherma',
      'max_temp': 60.0,
      'min_temp': 30.0,
      'operation_list': list([
        'off',
        'heat_pump',
        'performance',
      ]),
      'operation_mode': 'heat_pump',
      'supported_features': <WaterHeaterEntityFeature: 3>,
      'target_temp_high': None,
      'target_temp_low': None,
      'target_temp_step': 1.0,
      'temperature': 48.0,
    }),
    'context': <ANY>,
    'entity_id': 'water_heater.altherma',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'heat_pump',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.altherma_climatecontrol_is_holiday_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_climatecontrol_is_holiday_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Holiday Mode Active',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_None_isHolidayModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.altherma_climatecontrol_is_holiday_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is Holiday Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_climatecontrol_is_holiday_mode_active',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.altherma_climatecontrol_is_in_emergency_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_climatecontrol_is_in_emergency_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Emergency State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_None_isInEmergencyState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.altherma_climatecontrol_is_in_emergency_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Emergency State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_climatecontrol_is_in_emergency_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.altherma_climatecontrol_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_climatecontrol_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Error State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.altherma_climatecontrol_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_climatecontrol_is_in_error_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.altherma_climatecontrol_is_in_installer_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_climatecontrol_is_in_installer_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Installer State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_None_isInInstallerState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.altherma_climatecontrol_is_in_installer_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is In Installer State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_climatecontrol_is_in_installer_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.altherma_climatecontrol_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_climatecontrol_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Warning State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.altherma_climatecontrol_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_climatecontrol_is_in_warning_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.altherma_domestichotwatertank_is_holiday_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_holiday_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Is Holiday Mode Active',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_None_isHolidayModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.altherma_domestichotwatertank_is_holiday_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne DomesticHotWaterTank Is Holiday Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_holiday_mode_active',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.altherma_domestichotwatertank_is_in_emergency_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_in_emergency_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Is In Emergency State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_None_isInEmergencyState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.altherma_domestichotwatertank_is_in_emergency_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne DomesticHotWaterTank Is In Emergency State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_in_emergency_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.altherma_domestichotwatertank_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Is In Error State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.altherma_domestichotwatertank_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne DomesticHotWaterTank Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_in_error_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.altherma_domestichotwatertank_is_in_installer_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_in_installer_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Is In Installer State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_None_isInInstallerState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.altherma_domestichotwatertank_is_in_installer_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne DomesticHotWaterTank Is In Installer State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_in_installer_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.altherma_domestichotwatertank_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Is In Warning State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.altherma_domestichotwatertank_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne DomesticHotWaterTank Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_in_warning_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.altherma_domestichotwatertank_is_powerful_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_powerful_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Is Powerful Mode Active',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_None_isPowerfulModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.altherma_domestichotwatertank_is_powerful_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne DomesticHotWaterTank Is Powerful Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_powerful_mode_active',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.johnny_maaike_climatecontrol_is_cool_heat_master-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.johnny_maaike_climatecontrol_is_cool_heat_master',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Cool Heat Master',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_None_isCoolHeatMaster',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.johnny_maaike_climatecontrol_is_cool_heat_master-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is Cool Heat Master',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.johnny_maaike_climatecontrol_is_cool_heat_master',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.johnny_maaike_climatecontrol_is_holiday_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.johnny_maaike_climatecontrol_is_holiday_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Holiday Mode Active',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_None_isHolidayModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.johnny_maaike_climatecontrol_is_holiday_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is Holiday Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.johnny_maaike_climatecontrol_is_holiday_mode_active',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.johnny_maaike_climatecontrol_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.johnny_maaike_climatecontrol_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Caution State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.johnny_maaike_climatecontrol_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.johnny_maaike_climatecontrol_is_in_caution_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.johnny_maaike_climatecontrol_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.johnny_maaike_climatecontrol_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Error State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.johnny_maaike_climatecontrol_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.johnny_maaike_climatecontrol_is_in_error_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.johnny_maaike_climatecontrol_is_in_mode_conflict-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.johnny_maaike_climatecontrol_is_in_mode_conflict',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Mode Conflict',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_None_isInModeConflict',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.johnny_maaike_climatecontrol_is_in_mode_conflict-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Mode Conflict',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.johnny_maaike_climatecontrol_is_in_mode_conflict',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.johnny_maaike_climatecontrol_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.johnny_maaike_climatecontrol_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Warning State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.johnny_maaike_climatecontrol_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.johnny_maaike_climatecontrol_is_in_warning_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.johnny_maaike_climatecontrol_is_lock_function_enabled-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.johnny_maaike_climatecontrol_is_lock_function_enabled',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Lock Function Enabled',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_None_isLockFunctionEnabled',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.johnny_maaike_climatecontrol_is_lock_function_enabled-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is Lock Function Enabled',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.johnny_maaike_climatecontrol_is_lock_function_enabled',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.johnny_maaike_climatecontrol_is_powerful_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.johnny_maaike_climatecontrol_is_powerful_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Powerful Mode Active',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_None_isPowerfulModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.johnny_maaike_climatecontrol_is_powerful_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is Powerful Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.johnny_maaike_climatecontrol_is_powerful_mode_active',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.johnny_maaike_gateway_daylight_saving_time_enabled-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.johnny_maaike_gateway_daylight_saving_time_enabled',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Daylight Saving Time Enabled',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_gateway_None_daylightSavingTimeEnabled',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.johnny_maaike_gateway_daylight_saving_time_enabled-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Daylight Saving Time Enabled',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.johnny_maaike_gateway_daylight_saving_time_enabled',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.johnny_maaike_gateway_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.johnny_maaike_gateway_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Is In Error State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_gateway_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.johnny_maaike_gateway_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne Gateway Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.johnny_maaike_gateway_is_in_error_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.johnny_maaike_gateway_led_enabled-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.johnny_maaike_gateway_led_enabled',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Led Enabled',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_gateway_None_ledEnabled',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.johnny_maaike_gateway_led_enabled-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Led Enabled',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.johnny_maaike_gateway_led_enabled',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.johnny_maaike_outdoorunit_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.johnny_maaike_outdoorunit_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Caution State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_outdoorUnit_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.johnny_maaike_outdoorunit_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne OutdoorUnit Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.johnny_maaike_outdoorunit_is_in_caution_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.johnny_maaike_outdoorunit_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.johnny_maaike_outdoorunit_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Error State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_outdoorUnit_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.johnny_maaike_outdoorunit_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne OutdoorUnit Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.johnny_maaike_outdoorunit_is_in_error_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.johnny_maaike_outdoorunit_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.johnny_maaike_outdoorunit_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Warning State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_outdoorUnit_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.johnny_maaike_outdoorunit_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne OutdoorUnit Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.johnny_maaike_outdoorunit_is_in_warning_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.linde_climatecontrol_is_cool_heat_master-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.linde_climatecontrol_is_cool_heat_master',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Cool Heat Master',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_None_isCoolHeatMaster',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.linde_climatecontrol_is_cool_heat_master-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is Cool Heat Master',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.linde_climatecontrol_is_cool_heat_master',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.linde_climatecontrol_is_holiday_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.linde_climatecontrol_is_holiday_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Holiday Mode Active',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_None_isHolidayModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.linde_climatecontrol_is_holiday_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is Holiday Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.linde_climatecontrol_is_holiday_mode_active',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.linde_climatecontrol_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.linde_climatecontrol_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Caution State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.linde_climatecontrol_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.linde_climatecontrol_is_in_caution_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.linde_climatecontrol_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.linde_climatecontrol_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Error State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.linde_climatecontrol_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.linde_climatecontrol_is_in_error_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.linde_climatecontrol_is_in_mode_conflict-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.linde_climatecontrol_is_in_mode_conflict',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Mode Conflict',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_None_isInModeConflict',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.linde_climatecontrol_is_in_mode_conflict-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Mode Conflict',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.linde_climatecontrol_is_in_mode_conflict',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.linde_climatecontrol_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.linde_climatecontrol_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Warning State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.linde_climatecontrol_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.linde_climatecontrol_is_in_warning_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.linde_climatecontrol_is_lock_function_enabled-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.linde_climatecontrol_is_lock_function_enabled',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Lock Function Enabled',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_None_isLockFunctionEnabled',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.linde_climatecontrol_is_lock_function_enabled-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is Lock Function Enabled',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.linde_climatecontrol_is_lock_function_enabled',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.linde_climatecontrol_is_powerful_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.linde_climatecontrol_is_powerful_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Powerful Mode Active',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_None_isPowerfulModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.linde_climatecontrol_is_powerful_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is Powerful Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.linde_climatecontrol_is_powerful_mode_active',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.linde_gateway_daylight_saving_time_enabled-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.linde_gateway_daylight_saving_time_enabled',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Daylight Saving Time Enabled',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_gateway_None_daylightSavingTimeEnabled',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.linde_gateway_daylight_saving_time_enabled-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Daylight Saving Time Enabled',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.linde_gateway_daylight_saving_time_enabled',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.linde_gateway_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.linde_gateway_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Is In Error State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_gateway_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.linde_gateway_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne Gateway Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.linde_gateway_is_in_error_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.linde_gateway_led_enabled-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.linde_gateway_led_enabled',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Led Enabled',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_gateway_None_ledEnabled',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.linde_gateway_led_enabled-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Led Enabled',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.linde_gateway_led_enabled',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.linde_outdoorunit_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.linde_outdoorunit_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Caution State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_outdoorUnit_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.linde_outdoorunit_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne OutdoorUnit Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.linde_outdoorunit_is_in_caution_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.linde_outdoorunit_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.linde_outdoorunit_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Error State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_outdoorUnit_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.linde_outdoorunit_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne OutdoorUnit Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.linde_outdoorunit_is_in_error_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.linde_outdoorunit_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.linde_outdoorunit_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Warning State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_outdoorUnit_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.linde_outdoorunit_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne OutdoorUnit Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.linde_outdoorunit_is_in_warning_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.sanne_climatecontrol_is_cool_heat_master-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.sanne_climatecontrol_is_cool_heat_master',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Cool Heat Master',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_None_isCoolHeatMaster',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.sanne_climatecontrol_is_cool_heat_master-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is Cool Heat Master',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.sanne_climatecontrol_is_cool_heat_master',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.sanne_climatecontrol_is_holiday_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.sanne_climatecontrol_is_holiday_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Holiday Mode Active',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_None_isHolidayModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.sanne_climatecontrol_is_holiday_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is Holiday Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.sanne_climatecontrol_is_holiday_mode_active',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.sanne_climatecontrol_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.sanne_climatecontrol_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Caution State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.sanne_climatecontrol_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.sanne_climatecontrol_is_in_caution_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.sanne_climatecontrol_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.sanne_climatecontrol_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Error State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.sanne_climatecontrol_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.sanne_climatecontrol_is_in_error_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.sanne_climatecontrol_is_in_mode_conflict-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.sanne_climatecontrol_is_in_mode_conflict',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Mode Conflict',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_None_isInModeConflict',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.sanne_climatecontrol_is_in_mode_conflict-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Mode Conflict',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.sanne_climatecontrol_is_in_mode_conflict',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.sanne_climatecontrol_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.sanne_climatecontrol_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Warning State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.sanne_climatecontrol_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.sanne_climatecontrol_is_in_warning_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.sanne_climatecontrol_is_lock_function_enabled-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.sanne_climatecontrol_is_lock_function_enabled',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Lock Function Enabled',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_None_isLockFunctionEnabled',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.sanne_climatecontrol_is_lock_function_enabled-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is Lock Function Enabled',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.sanne_climatecontrol_is_lock_function_enabled',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.sanne_climatecontrol_is_powerful_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.sanne_climatecontrol_is_powerful_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Powerful Mode Active',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_None_isPowerfulModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.sanne_climatecontrol_is_powerful_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is Powerful Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.sanne_climatecontrol_is_powerful_mode_active',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.sanne_gateway_daylight_saving_time_enabled-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.sanne_gateway_daylight_saving_time_enabled',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Daylight Saving Time Enabled',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_gateway_None_daylightSavingTimeEnabled',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.sanne_gateway_daylight_saving_time_enabled-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Daylight Saving Time Enabled',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.sanne_gateway_daylight_saving_time_enabled',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.sanne_gateway_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.sanne_gateway_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Is In Error State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_gateway_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.sanne_gateway_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne Gateway Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.sanne_gateway_is_in_error_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.sanne_gateway_led_enabled-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.sanne_gateway_led_enabled',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Led Enabled',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_gateway_None_ledEnabled',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.sanne_gateway_led_enabled-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Led Enabled',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.sanne_gateway_led_enabled',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.sanne_outdoorunit_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.sanne_outdoorunit_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Caution State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_outdoorUnit_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.sanne_outdoorunit_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne OutdoorUnit Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.sanne_outdoorunit_is_in_caution_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.sanne_outdoorunit_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.sanne_outdoorunit_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Error State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_outdoorUnit_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.sanne_outdoorunit_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne OutdoorUnit Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.sanne_outdoorunit_is_in_error_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.sanne_outdoorunit_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.sanne_outdoorunit_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Warning State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_outdoorUnit_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.sanne_outdoorunit_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne OutdoorUnit Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.sanne_outdoorunit_is_in_warning_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.werkkamer_climatecontrol_is_cool_heat_master-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_cool_heat_master',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Cool Heat Master',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_None_isCoolHeatMaster',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.werkkamer_climatecontrol_is_cool_heat_master-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is Cool Heat Master',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_cool_heat_master',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.werkkamer_climatecontrol_is_holiday_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_holiday_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Holiday Mode Active',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_None_isHolidayModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.werkkamer_climatecontrol_is_holiday_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is Holiday Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_holiday_mode_active',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.werkkamer_climatecontrol_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Caution State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.werkkamer_climatecontrol_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_in_caution_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.werkkamer_climatecontrol_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Error State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.werkkamer_climatecontrol_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_in_error_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.werkkamer_climatecontrol_is_in_mode_conflict-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_in_mode_conflict',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Mode Conflict',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_None_isInModeConflict',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.werkkamer_climatecontrol_is_in_mode_conflict-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Mode Conflict',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_in_mode_conflict',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.werkkamer_climatecontrol_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Warning State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.werkkamer_climatecontrol_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_in_warning_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.werkkamer_climatecontrol_is_lock_function_enabled-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_lock_function_enabled',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Lock Function Enabled',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_None_isLockFunctionEnabled',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.werkkamer_climatecontrol_is_lock_function_enabled-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is Lock Function Enabled',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_lock_function_enabled',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.werkkamer_climatecontrol_is_powerful_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_powerful_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Powerful Mode Active',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_None_isPowerfulModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.werkkamer_climatecontrol_is_powerful_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is Powerful Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_powerful_mode_active',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.werkkamer_gateway_daylight_saving_time_enabled-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.werkkamer_gateway_daylight_saving_time_enabled',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Daylight Saving Time Enabled',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_gateway_None_daylightSavingTimeEnabled',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.werkkamer_gateway_daylight_saving_time_enabled-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Daylight Saving Time Enabled',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.werkkamer_gateway_daylight_saving_time_enabled',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.werkkamer_gateway_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.werkkamer_gateway_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Is In Error State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_gateway_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.werkkamer_gateway_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne Gateway Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.werkkamer_gateway_is_in_error_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.werkkamer_gateway_led_enabled-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.werkkamer_gateway_led_enabled',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Led Enabled',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_gateway_None_ledEnabled',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.werkkamer_gateway_led_enabled-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Led Enabled',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.werkkamer_gateway_led_enabled',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.werkkamer_outdoorunit_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.werkkamer_outdoorunit_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Caution State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_outdoorUnit_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.werkkamer_outdoorunit_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne OutdoorUnit Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.werkkamer_outdoorunit_is_in_caution_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.werkkamer_outdoorunit_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.werkkamer_outdoorunit_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Error State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_outdoorUnit_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.werkkamer_outdoorunit_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne OutdoorUnit Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.werkkamer_outdoorunit_is_in_error_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.werkkamer_outdoorunit_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.werkkamer_outdoorunit_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Warning State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_outdoorUnit_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.werkkamer_outdoorunit_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne OutdoorUnit Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.werkkamer_outdoorunit_is_in_warning_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[climate.altherma_leaving_water_offset-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
      ]),
      'max_temp': None,
      'min_temp': None,
      'preset_modes': list([
        'away',
        'none',
      ]),
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'climate',
    'entity_category': None,
    'entity_id': 'climate.altherma_leaving_water_offset',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Altherma Leaving Water Offset',
    'platform': 'daikin_onecta',
    'supported_features': <ClimateEntityFeature: 16>,
    'translation_key': 'daikin_onecta',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_leavingWaterOffset',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[climate.altherma_leaving_water_offset-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 27,
      'friendly_name': 'Altherma Leaving Water Offset',
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
      ]),
      'max_temp': None,
      'min_temp': None,
      'preset_mode': 'none',
      'preset_modes': list([
        'away',
        'none',
      ]),
      'supported_features': <ClimateEntityFeature: 16>,
    }),
    'context': <ANY>,
    'entity_id': 'climate.altherma_leaving_water_offset',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[climate.altherma_leaving_water_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
      ]),
      'max_temp': 20,
      'min_temp': 18,
      'preset_modes': list([
        'away',
        'none',
      ]),
      'target_temp_step': 1,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'climate',
    'entity_category': None,
    'entity_id': 'climate.altherma_leaving_water_temperature',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Altherma Leaving Water Temperature',
    'platform': 'daikin_onecta',
    'supported_features': <ClimateEntityFeature: 17>,
    'translation_key': 'daikin_onecta',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_leavingWaterTemperature',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[climate.altherma_leaving_water_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 27,
      'friendly_name': 'Altherma Leaving Water Temperature',
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
      ]),
      'max_temp': 20,
      'min_temp': 18,
      'preset_mode': 'none',
      'preset_modes': list([
        'away',
        'none',
      ]),
      'supported_features': <ClimateEntityFeature: 17>,
      'target_temp_step': 1,
      'temperature': 19,
    }),
    'context': <ANY>,
    'entity_id': 'climate.altherma_leaving_water_temperature',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[climate.altherma_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
      ]),
      'max_temp': 28,
      'min_temp': 23,
      'preset_modes': list([
        'away',
        'none',
      ]),
      'target_temp_step': 0.5,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'climate',
    'entity_category': None,
    'entity_id': 'climate.altherma_room_temperature',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Altherma Room Temperature',
    'platform': 'daikin_onecta',
    'supported_features': <ClimateEntityFeature: 17>,
    'translation_key': 'daikin_onecta',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_roomTemperature',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[climate.altherma_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 21,
      'friendly_name': 'Altherma Room Temperature',
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
      ]),
      'max_temp': 28,
      'min_temp': 23,
      'preset_mode': 'none',
      'preset_modes': list([
        'away',
        'none',
      ]),
      'supported_features': <ClimateEntityFeature: 17>,
      'target_temp_step': 0.5,
      'temperature': 24.5,
    }),
    'context': <ANY>,
    'entity_id': 'climate.altherma_room_temperature',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[climate.johnny_maaike_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'fan_modes': list([
        'auto',
        'quiet',
        '1',
        '2',
        '3',
        '4',
        '5',
      ]),
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
        <HVACMode.DRY: 'dry'>,
      ]),
      'max_temp': 33,
      'min_temp': 18,
      'preset_modes': list([
        'away',
        'boost',
        'eco',
        'none',
      ]),
      'swing_modes': list([
        'off',
        'horizontal',
        'vertical',
        'both',
        'Comfort Airflow',
        'Comfort Airflow and Horizontal',
      ]),
      'target_temp_step': 0.5,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'climate',
    'entity_category': None,
    'entity_id': 'climate.johnny_maaike_room_temperature',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Johnny&Maaike Room Temperature',
    'platform': 'daikin_onecta',
    'supported_features': <ClimateEntityFeature: 57>,
    'translation_key': 'daikin_onecta',
    'unique_id': '32db6075-b739-4026-b661-127009254b42_roomTemperature',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[climate.johnny_maaike_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 19,
      'fan_mode': 'auto',
      'fan_modes': list([
        'auto',
        'quiet',
        '1',
        '2',
        '3',
        '4',
        '5',
      ]),
      'friendly_name': 'Johnny&Maaike Room Temperature',
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
        <HVACMode.DRY: 'dry'>,
      ]),
      'max_temp': 33,
      'min_temp': 18,
      'preset_mode': 'eco',
      'preset_modes': list([
        'away',
        'boost',
        'eco',
        'none',
      ]),
      'supported_features': <ClimateEntityFeature: 57>,
      'swing_mode': 'off',
      'swing_modes': list([
        'off',
        'horizontal',
        'vertical',
        'both',
        'Comfort Airflow',
        'Comfort Airflow and Horizontal',
      ]),
      'target_temp_step': 0.5,
      'temperature': 25,
    }),
    'context': <ANY>,
    'entity_id': 'climate.johnny_maaike_room_temperature',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[climate.linde_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'fan_modes': list([
        'auto',
        'quiet',
        '1',
        '2',
        '3',
        '4',
        '5',
      ]),
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
        <HVACMode.DRY: 'dry'>,
      ]),
      'max_temp': 33,
      'min_temp': 18,
      'preset_modes': list([
        'away',
        'boost',
        'eco',
        'none',
      ]),
      'swing_modes': list([
        'off',
        'horizontal',
        'vertical',
        'both',
        'Comfort Airflow',
        'Comfort Airflow and Horizontal',
      ]),
      'target_temp_step': 0.5,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'climate',
    'entity_category': None,
    'entity_id': 'climate.linde_room_temperature',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Linde Room Temperature',
    'platform': 'daikin_onecta',
    'supported_features': <ClimateEntityFeature: 57>,
    'translation_key': 'daikin_onecta',
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_roomTemperature',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[climate.linde_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 18,
      'fan_mode': 'auto',
      'fan_modes': list([
        'auto',
        'quiet',
        '1',
        '2',
        '3',
        '4',
        '5',
      ]),
      'friendly_name': 'Linde Room Temperature',
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
        <HVACMode.DRY: 'dry'>,
      ]),
      'max_temp': 33,
      'min_temp': 18,
      'preset_mode': 'none',
      'preset_modes': list([
        'away',
        'boost',
        'eco',
        'none',
      ]),
      'supported_features': <ClimateEntityFeature: 57>,
      'swing_mode': 'off',
      'swing_modes': list([
        'off',
        'horizontal',
        'vertical',
        'both',
        'Comfort Airflow',
        'Comfort Airflow and Horizontal',
      ]),
      'target_temp_step': 0.5,
      'temperature': 23,
    }),
    'context': <ANY>,
    'entity_id': 'climate.linde_room_temperature',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[climate.sanne_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'fan_modes': list([
        'auto',
        'quiet',
        '1',
        '2',
        '3',
        '4',
        '5',
      ]),
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
        <HVACMode.DRY: 'dry'>,
      ]),
      'max_temp': 33,
      'min_temp': 18,
      'preset_modes': list([
        'away',
        'boost',
        'eco',
        'none',
      ]),
      'swing_modes': list([
        'off',
        'horizontal',
        'vertical',
        'both',
        'Comfort Airflow',
        'Comfort Airflow and Horizontal',
      ]),
      'target_temp_step': 0.5,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'climate',
    'entity_category': None,
    'entity_id': 'climate.sanne_room_temperature',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Sanne Room Temperature',
    'platform': 'daikin_onecta',
    'supported_features': <ClimateEntityFeature: 57>,
    'translation_key': 'daikin_onecta',
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_roomTemperature',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[climate.sanne_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 19,
      'fan_mode': 'auto',
      'fan_modes': list([
        'auto',
        'quiet',
        '1',
        '2',
        '3',
        '4',
        '5',
      ]),
      'friendly_name': 'Sanne Room Temperature',
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
        <HVACMode.DRY: 'dry'>,
      ]),
      'max_temp': 33,
      'min_temp': 18,
      'preset_mode': 'none',
      'preset_modes': list([
        'away',
        'boost',
        'eco',
        'none',
      ]),
      'supported_features': <ClimateEntityFeature: 57>,
      'swing_mode': 'off',
      'swing_modes': list([
        'off',
        'horizontal',
        'vertical',
        'both',
        'Comfort Airflow',
        'Comfort Airflow and Horizontal',
      ]),
      'target_temp_step': 0.5,
      'temperature': 23,
    }),
    'context': <ANY>,
    'entity_id': 'climate.sanne_room_temperature',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[climate.werkkamer_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'fan_modes': list([
        'auto',
        'quiet',
        '1',
        '2',
        '3',
        '4',
        '5',
      ]),
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
        <HVACMode.DRY: 'dry'>,
      ]),
      'max_temp': 33,
      'min_temp': 18,
      'preset_modes': list([
        'away',
        'boost',
        'eco',
        'none',
      ]),
      'swing_modes': list([
        'off',
        'horizontal',
        'vertical',
        'both',
        'Comfort Airflow',
        'Comfort Airflow and Horizontal',
      ]),
      'target_temp_step': 0.5,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'climate',
    'entity_category': None,
    'entity_id': 'climate.werkkamer_room_temperature',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Werkkamer Room Temperature',
    'platform': 'daikin_onecta',
    'supported_features': <ClimateEntityFeature: 57>,
    'translation_key': 'daikin_onecta',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_roomTemperature',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[climate.werkkamer_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 19,
      'fan_mode': 'auto',
      'fan_modes': list([
        'auto',
        'quiet',
        '1',
        '2',
        '3',
        '4',
        '5',
      ]),
      'friendly_name': 'Werkkamer Room Temperature',
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
        <HVACMode.DRY: 'dry'>,
      ]),
      'max_temp': 33,
      'min_temp': 18,
      'preset_mode': 'none',
      'preset_modes': list([
        'away',
        'boost',
        'eco',
        'none',
      ]),
      'supported_features': <ClimateEntityFeature: 57>,
      'swing_mode': 'off',
      'swing_modes': list([
        'off',
        'horizontal',
        'vertical',
        'both',
        'Comfort Airflow',
        'Comfort Airflow and Horizontal',
      ]),
      'target_temp_step': 0.5,
      'temperature': 25,
    }),
    'context': <ANY>,
    'entity_id': 'climate.werkkamer_room_temperature',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[select.altherma_climatecontrol_schedule-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'User defined',
        'off',
      ]),
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': None,
    'entity_id': 'select.altherma_climatecontrol_schedule',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:calendar-clock',
    'original_name': 'ClimateControl Schedule',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_schedule',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[select.altherma_climatecontrol_schedule-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Schedule',
      'icon': 'mdi:calendar-clock',
      'options': list([
        'User defined',
        'off',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.altherma_climatecontrol_schedule',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[select.johnny_maaike_climatecontrol_schedule-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        '0',
        '1',
        '2',
        'off',
      ]),
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': None,
    'entity_id': 'select.johnny_maaike_climatecontrol_schedule',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:calendar-clock',
    'original_name': 'ClimateControl Schedule',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_schedule',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[select.johnny_maaike_climatecontrol_schedule-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Schedule',
      'icon': 'mdi:calendar-clock',
      'options': list([
        '0',
        '1',
        '2',
        'off',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.johnny_maaike_climatecontrol_schedule',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[select.linde_climatecontrol_schedule-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        '0',
        '1',
        '2',
        'off',
      ]),
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': None,
    'entity_id': 'select.linde_climatecontrol_schedule',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:calendar-clock',
    'original_name': 'ClimateControl Schedule',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_schedule',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[select.linde_climatecontrol_schedule-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Schedule',
      'icon': 'mdi:calendar-clock',
      'options': list([
        '0',
        '1',
        '2',
        'off',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.linde_climatecontrol_schedule',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[select.sanne_climatecontrol_schedule-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        '0',
        '1',
        '2',
        'off',
      ]),
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': None,
    'entity_id': 'select.sanne_climatecontrol_schedule',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:calendar-clock',
    'original_name': 'ClimateControl Schedule',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_schedule',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[select.sanne_climatecontrol_schedule-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Schedule',
      'icon': 'mdi:calendar-clock',
      'options': list([
        '0',
        '1',
        '2',
        'off',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.sanne_climatecontrol_schedule',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[select.werkkamer_climatecontrol_schedule-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        '0',
        '1',
        '2',
        'off',
      ]),
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': None,
    'entity_id': 'select.werkkamer_climatecontrol_schedule',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:calendar-clock',
    'original_name': 'ClimateControl Schedule',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_schedule',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[select.werkkamer_climatecontrol_schedule-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Schedule',
      'icon': 'mdi:calendar-clock',
      'options': list([
        '0',
        '1',
        '2',
        'off',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.werkkamer_climatecontrol_schedule',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_climatecontrol_control_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_control_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:alphabetical',
    'original_name': 'ClimateControl Control Mode',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_None_controlMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_climatecontrol_control_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Control Mode',
      'icon': 'mdi:alphabetical',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_control_mode',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'roomTemperature',
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_climatecontrol_cooling_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_cooling_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_electrical_cooling_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_climatecontrol_cooling_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Cooling Daily Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_cooling_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_climatecontrol_cooling_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_cooling_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_electrical_cooling_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_climatecontrol_cooling_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Cooling Weekly Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_cooling_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_climatecontrol_cooling_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_cooling_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_electrical_cooling_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_climatecontrol_cooling_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Cooling Yearly Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_cooling_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_climatecontrol_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_climatecontrol_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Error Code',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_climatecontrol_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_error_code',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '-00',
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_climatecontrol_heating_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_heating_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_electrical_heating_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_climatecontrol_heating_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Heating Daily Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_heating_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_climatecontrol_heating_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_heating_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_electrical_heating_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_climatecontrol_heating_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Heating Weekly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_heating_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_climatecontrol_heating_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_heating_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_electrical_heating_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_climatecontrol_heating_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Heating Yearly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_heating_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '1252',
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_climatecontrol_icon_id-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_climatecontrol_icon_id',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Icon Id',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_None_iconId',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_climatecontrol_icon_id-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Icon Id',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_icon_id',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '8',
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_climatecontrol_leaving_water_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_leaving_water_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Leaving Water Temperature',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_sensoryData_leavingWaterTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_climatecontrol_leaving_water_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Sanne ClimateControl Leaving Water Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_leaving_water_temperature',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '27',
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_climatecontrol_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_climatecontrol_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Name',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_climatecontrol_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_name',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'Altherma',
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_climatecontrol_outdoor_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_outdoor_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Outdoor Temperature',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_sensoryData_outdoorTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_climatecontrol_outdoor_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Sanne ClimateControl Outdoor Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_outdoor_temperature',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '17',
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_climatecontrol_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_room_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Room Temperature',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_sensoryData_roomTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_climatecontrol_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Sanne ClimateControl Room Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_room_temperature',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '21',
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_climatecontrol_setpoint_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_setpoint_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:alphabetical',
    'original_name': 'ClimateControl Setpoint Mode',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_None_setpointMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_climatecontrol_setpoint_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Setpoint Mode',
      'icon': 'mdi:alphabetical',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_setpoint_mode',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'weatherDependentHeatingFixedCooling',
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_domestichotwatertank_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_domestichotwatertank_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Error Code',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_domestichotwatertank_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne DomesticHotWaterTank Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_domestichotwatertank_error_code',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '-00',
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_domestichotwatertank_heating_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_domestichotwatertank_heating_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'DomesticHotWaterTank Heating Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_electrical_heating_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_domestichotwatertank_heating_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne DomesticHotWaterTank Heating Daily Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_domestichotwatertank_heating_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_domestichotwatertank_heating_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_domestichotwatertank_heating_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'DomesticHotWaterTank Heating Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_electrical_heating_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_domestichotwatertank_heating_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne DomesticHotWaterTank Heating Weekly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_domestichotwatertank_heating_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '5',
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_domestichotwatertank_heating_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_domestichotwatertank_heating_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'DomesticHotWaterTank Heating Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_electrical_heating_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_domestichotwatertank_heating_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne DomesticHotWaterTank Heating Yearly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_domestichotwatertank_heating_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '515',
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_domestichotwatertank_icon_id-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_domestichotwatertank_icon_id',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Icon Id',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_None_iconId',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_domestichotwatertank_icon_id-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne DomesticHotWaterTank Icon Id',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_domestichotwatertank_icon_id',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '9',
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_domestichotwatertank_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_domestichotwatertank_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Name',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_domestichotwatertank_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne DomesticHotWaterTank Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_domestichotwatertank_name',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_domestichotwatertank_setpoint_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_domestichotwatertank_setpoint_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:alphabetical',
    'original_name': 'DomesticHotWaterTank Setpoint Mode',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_None_setpointMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_domestichotwatertank_setpoint_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne DomesticHotWaterTank Setpoint Mode',
      'icon': 'mdi:alphabetical',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_domestichotwatertank_setpoint_mode',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'fixed',
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_domestichotwatertank_tank_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_domestichotwatertank_tank_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': 'mdi:bathtub-outline',
    'original_name': 'DomesticHotWaterTank Tank Temperature',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_sensoryData_tankTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_domestichotwatertank_tank_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Sanne DomesticHotWaterTank Tank Temperature',
      'icon': 'mdi:bathtub-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_domestichotwatertank_tank_temperature',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '48',
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_gateway_firmware_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_gateway_firmware_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Firmware Version',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_gateway_None_firmwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_gateway_firmware_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Firmware Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_gateway_firmware_version',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '3.2.1',
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_gateway_icon_id-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_gateway_icon_id',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Icon Id',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_gateway_None_iconId',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_gateway_icon_id-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Icon Id',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_gateway_icon_id',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '3',
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_gateway_ip_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_gateway_ip_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:ip-network',
    'original_name': 'Gateway Ip Address',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_gateway_None_ipAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_gateway_ip_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Ip Address',
      'icon': 'mdi:ip-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_gateway_ip_address',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '192.168.1.207',
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_gateway_mac_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_gateway_mac_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Mac Address',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_gateway_None_macAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_gateway_mac_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Mac Address',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_gateway_mac_address',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_gateway_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_gateway_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Model Info',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_gateway_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_gateway_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_gateway_model_info',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'BRP069A78',
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_gateway_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_gateway_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Name',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_gateway_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_gateway_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_gateway_name',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'Gateway',
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_gateway_serial_number-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_gateway_serial_number',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:numeric',
    'original_name': 'Gateway Serial Number',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_gateway_None_serialNumber',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_gateway_serial_number-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Serial Number',
      'icon': 'mdi:numeric',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_gateway_serial_number',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0023085',
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_gateway_ssid-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_gateway_ssid',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:access-point-network',
    'original_name': 'Gateway Ssid',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_gateway_None_ssid',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_gateway_ssid-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Ssid',
      'icon': 'mdi:access-point-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_gateway_ssid',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'daikin-ap',
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_gateway_wifi_connection_s_s_i_d-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_gateway_wifi_connection_s_s_i_d',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:access-point-network',
    'original_name': 'Gateway Wifi Connection S S I D',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_gateway_None_wifiConnectionSSID',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_gateway_wifi_connection_s_s_i_d-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Wifi Connection S S I D',
      'icon': 'mdi:access-point-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_gateway_wifi_connection_s_s_i_d',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'WILLEMSEN',
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_gateway_wifi_connection_strength-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_gateway_wifi_connection_strength',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.SIGNAL_STRENGTH: 'signal_strength'>,
    'original_icon': 'mdi:wifi',
    'original_name': 'Gateway Wifi Connection Strength',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_gateway_None_wifiConnectionStrength',
    'unit_of_measurement': 'dBm',
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_gateway_wifi_connection_strength-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'signal_strength',
      'friendly_name': 'Sanne Gateway Wifi Connection Strength',
      'icon': 'mdi:wifi',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': 'dBm',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_gateway_wifi_connection_strength',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '-81',
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_indoorunithydro_eeprom_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_indoorunithydro_eeprom_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnitHydro Eeprom Version',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_indoorUnitHydro_None_eepromVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_indoorunithydro_eeprom_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne IndoorUnitHydro Eeprom Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_indoorunithydro_eeprom_version',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '3608726-74',
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_indoorunithydro_icon_id-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_indoorunithydro_icon_id',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnitHydro Icon Id',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_indoorUnitHydro_None_iconId',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_indoorunithydro_icon_id-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne IndoorUnitHydro Icon Id',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_indoorunithydro_icon_id',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '4',
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_indoorunithydro_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_indoorunithydro_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnitHydro Model Info',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_indoorUnitHydro_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_indoorunithydro_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne IndoorUnitHydro Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_indoorunithydro_model_info',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'EHVX08S23EJ9W',
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_indoorunithydro_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_indoorunithydro_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnitHydro Name',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_indoorUnitHydro_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_indoorunithydro_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne IndoorUnitHydro Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_indoorunithydro_name',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'Indoor Hydro Unit',
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_indoorunithydro_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_indoorunithydro_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnitHydro Software Version',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_indoorUnitHydro_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_indoorunithydro_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne IndoorUnitHydro Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_indoorunithydro_software_version',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0221',
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_outdoorunit_icon_id-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_outdoorunit_icon_id',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Icon Id',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_outdoorUnit_None_iconId',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_outdoorunit_icon_id-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne OutdoorUnit Icon Id',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_outdoorunit_icon_id',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '5',
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_outdoorunit_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_outdoorunit_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Model Info',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_outdoorUnit_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_outdoorunit_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne OutdoorUnit Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_outdoorunit_model_info',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_outdoorunit_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_outdoorunit_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Name',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_outdoorUnit_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_outdoorunit_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne OutdoorUnit Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_outdoorunit_name',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'Outdoor Unit',
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_outdoorunit_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_outdoorunit_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Software Version',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_outdoorUnit_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_outdoorunit_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne OutdoorUnit Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_outdoorunit_software_version',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'FFFF',
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_ratelimit_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_ratelimit_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit day',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_limitsensor_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_ratelimit_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_ratelimit_day',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_ratelimit_minute-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_ratelimit_minute',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit minute',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_limitsensor_minute',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_ratelimit_minute-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit minute',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_ratelimit_minute',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_ratelimit_ratelimit_reset-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_ratelimit_ratelimit_reset',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit ratelimit_reset',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_limitsensor_ratelimit_reset',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_ratelimit_ratelimit_reset-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit ratelimit_reset',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_ratelimit_ratelimit_reset',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_ratelimit_remaining_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_ratelimit_remaining_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_day',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_limitsensor_remaining_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_ratelimit_remaining_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit remaining_day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_ratelimit_remaining_day',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_ratelimit_remaining_minutes-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_ratelimit_remaining_minutes',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_minutes',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_limitsensor_remaining_minutes',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_ratelimit_remaining_minutes-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit remaining_minutes',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_ratelimit_remaining_minutes',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_ratelimit_retry_after-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_ratelimit_retry_after',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit retry_after',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_limitsensor_retry_after',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_ratelimit_retry_after-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit retry_after',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_ratelimit_retry_after',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_userinterface_date_time-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_userinterface_date_time',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'UserInterface Date Time',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_userInterface_None_dateTime',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_userinterface_date_time-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne UserInterface Date Time',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_userinterface_date_time',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '2022-06-01T09:17:49',
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_userinterface_firmware_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_userinterface_firmware_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'UserInterface Firmware Version',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_userInterface_None_firmwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_userinterface_firmware_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne UserInterface Firmware Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_userinterface_firmware_version',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '6.3.0',
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_userinterface_icon_id-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_userinterface_icon_id',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'UserInterface Icon Id',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_userInterface_None_iconId',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_userinterface_icon_id-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne UserInterface Icon Id',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_userinterface_icon_id',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '6',
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_userinterface_micon_id-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_userinterface_micon_id',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'UserInterface Micon Id',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_userInterface_None_miconId',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_userinterface_micon_id-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne UserInterface Micon Id',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_userinterface_micon_id',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '20010E02',
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_userinterface_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_userinterface_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'UserInterface Name',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_userInterface_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_userinterface_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne UserInterface Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_userinterface_name',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'User Interface',
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_userinterface_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_userinterface_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'UserInterface Software Version',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_userInterface_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_userinterface_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne UserInterface Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_userinterface_software_version',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '6.3.0',
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_climatecontrol_cooling_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_cooling_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_electrical_cooling_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_climatecontrol_cooling_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Cooling Daily Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_cooling_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_climatecontrol_cooling_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_cooling_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_electrical_cooling_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_climatecontrol_cooling_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Cooling Weekly Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_cooling_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0.2',
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_climatecontrol_cooling_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_cooling_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_electrical_cooling_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_climatecontrol_cooling_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Cooling Yearly Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_cooling_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '6.6',
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_climatecontrol_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Error Code',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_climatecontrol_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_error_code',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '00-',
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_climatecontrol_heating_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_heating_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_electrical_heating_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_climatecontrol_heating_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Heating Daily Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_heating_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_climatecontrol_heating_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_heating_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_electrical_heating_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_climatecontrol_heating_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Heating Weekly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_heating_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_climatecontrol_heating_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_heating_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_electrical_heating_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_climatecontrol_heating_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Heating Yearly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_heating_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '11.5',
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_climatecontrol_icon_id-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_icon_id',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Icon Id',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_None_iconId',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_climatecontrol_icon_id-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Icon Id',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_icon_id',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '15',
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_climatecontrol_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Name',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_climatecontrol_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_name',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'Johnny&Maaike',
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_climatecontrol_outdoor_silent_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_outdoor_silent_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'ClimateControl Outdoor Silent Mode',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_None_outdoorSilentMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_climatecontrol_outdoor_silent_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Outdoor Silent Mode',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_outdoor_silent_mode',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_climatecontrol_outdoor_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_outdoor_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Outdoor Temperature',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_sensoryData_outdoorTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_climatecontrol_outdoor_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Sanne ClimateControl Outdoor Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_outdoor_temperature',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '13.5',
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_climatecontrol_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_room_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Room Temperature',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_sensoryData_roomTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_climatecontrol_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Sanne ClimateControl Room Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_room_temperature',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '19',
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_gateway_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_gateway_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Error Code',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_gateway_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_gateway_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_gateway_error_code',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_gateway_firmware_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_gateway_firmware_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Firmware Version',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_gateway_None_firmwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_gateway_firmware_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Firmware Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_gateway_firmware_version',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '1_12_51',
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_gateway_mac_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_gateway_mac_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Mac Address',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_gateway_None_macAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_gateway_mac_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Mac Address',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_gateway_mac_address',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_gateway_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_gateway_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Model Info',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_gateway_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_gateway_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_gateway_model_info',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'BRP069C4x',
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_gateway_region_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_gateway_region_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Region Code',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_gateway_None_regionCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_gateway_region_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Region Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_gateway_region_code',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'eu',
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_gateway_serial_number-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_gateway_serial_number',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:numeric',
    'original_name': 'Gateway Serial Number',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_gateway_None_serialNumber',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_gateway_serial_number-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Serial Number',
      'icon': 'mdi:numeric',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_gateway_serial_number',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0000000002641374',
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_gateway_ssid-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_gateway_ssid',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:access-point-network',
    'original_name': 'Gateway Ssid',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_gateway_None_ssid',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_gateway_ssid-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Ssid',
      'icon': 'mdi:access-point-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_gateway_ssid',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'DaikinAP83731',
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_gateway_time_zone-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_gateway_time_zone',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Time Zone',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_gateway_None_timeZone',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_gateway_time_zone-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Time Zone',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_gateway_time_zone',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'Europe/Amsterdam',
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_gateway_wifi_connection_s_s_i_d-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_gateway_wifi_connection_s_s_i_d',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:access-point-network',
    'original_name': 'Gateway Wifi Connection S S I D',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_gateway_None_wifiConnectionSSID',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_gateway_wifi_connection_s_s_i_d-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Wifi Connection S S I D',
      'icon': 'mdi:access-point-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_gateway_wifi_connection_s_s_i_d',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'WILLEMSEN',
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_gateway_wifi_connection_strength-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_gateway_wifi_connection_strength',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.SIGNAL_STRENGTH: 'signal_strength'>,
    'original_icon': 'mdi:wifi',
    'original_name': 'Gateway Wifi Connection Strength',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_gateway_None_wifiConnectionStrength',
    'unit_of_measurement': 'dBm',
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_gateway_wifi_connection_strength-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'signal_strength',
      'friendly_name': 'Sanne Gateway Wifi Connection Strength',
      'icon': 'mdi:wifi',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': 'dBm',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_gateway_wifi_connection_strength',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '-47',
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_indoorunit_dry_keep_setting-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.johnny_maaike_indoorunit_dry_keep_setting',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:water-percent',
    'original_name': 'IndoorUnit Dry Keep Setting',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_indoorUnit_None_dryKeepSetting',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_indoorunit_dry_keep_setting-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne IndoorUnit Dry Keep Setting',
      'icon': 'mdi:water-percent',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_indoorunit_dry_keep_setting',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_indoorunit_eeprom_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_indoorunit_eeprom_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Eeprom Version',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_indoorUnit_None_eepromVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_indoorunit_eeprom_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne IndoorUnit Eeprom Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_indoorunit_eeprom_version',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '12FC',
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_indoorunit_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_indoorunit_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Software Version',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_indoorUnit_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_indoorunit_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne IndoorUnit Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_indoorunit_software_version',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '20003001',
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_outdoorunit_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_outdoorunit_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Error Code',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_outdoorUnit_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_outdoorunit_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne OutdoorUnit Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_outdoorunit_error_code',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '00-',
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_ratelimit_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_ratelimit_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit day',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_limitsensor_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_ratelimit_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_ratelimit_day',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_ratelimit_minute-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_ratelimit_minute',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit minute',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_limitsensor_minute',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_ratelimit_minute-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit minute',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_ratelimit_minute',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_ratelimit_ratelimit_reset-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_ratelimit_ratelimit_reset',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit ratelimit_reset',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_limitsensor_ratelimit_reset',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_ratelimit_ratelimit_reset-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit ratelimit_reset',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_ratelimit_ratelimit_reset',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_ratelimit_remaining_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_ratelimit_remaining_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_day',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_limitsensor_remaining_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_ratelimit_remaining_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit remaining_day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_ratelimit_remaining_day',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_ratelimit_remaining_minutes-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_ratelimit_remaining_minutes',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_minutes',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_limitsensor_remaining_minutes',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_ratelimit_remaining_minutes-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit remaining_minutes',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_ratelimit_remaining_minutes',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_ratelimit_retry_after-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_ratelimit_retry_after',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit retry_after',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_limitsensor_retry_after',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_ratelimit_retry_after-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit retry_after',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_ratelimit_retry_after',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_climatecontrol_cooling_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.linde_climatecontrol_cooling_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_electrical_cooling_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_climatecontrol_cooling_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Cooling Daily Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_climatecontrol_cooling_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_climatecontrol_cooling_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.linde_climatecontrol_cooling_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_electrical_cooling_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_climatecontrol_cooling_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Cooling Weekly Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_climatecontrol_cooling_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0.3',
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_climatecontrol_cooling_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.linde_climatecontrol_cooling_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_electrical_cooling_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_climatecontrol_cooling_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Cooling Yearly Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_climatecontrol_cooling_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '1.6',
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_climatecontrol_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_climatecontrol_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Error Code',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_climatecontrol_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_climatecontrol_error_code',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '00-',
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_climatecontrol_heating_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.linde_climatecontrol_heating_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_electrical_heating_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_climatecontrol_heating_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Heating Daily Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_climatecontrol_heating_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_climatecontrol_heating_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.linde_climatecontrol_heating_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_electrical_heating_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_climatecontrol_heating_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Heating Weekly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_climatecontrol_heating_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_climatecontrol_heating_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.linde_climatecontrol_heating_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_electrical_heating_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_climatecontrol_heating_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Heating Yearly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_climatecontrol_heating_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '18.7',
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_climatecontrol_icon_id-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_climatecontrol_icon_id',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Icon Id',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_None_iconId',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_climatecontrol_icon_id-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Icon Id',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_climatecontrol_icon_id',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '15',
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_climatecontrol_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_climatecontrol_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Name',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_climatecontrol_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_climatecontrol_name',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'Linde',
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_climatecontrol_outdoor_silent_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.linde_climatecontrol_outdoor_silent_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'ClimateControl Outdoor Silent Mode',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_None_outdoorSilentMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_climatecontrol_outdoor_silent_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Outdoor Silent Mode',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_climatecontrol_outdoor_silent_mode',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_climatecontrol_outdoor_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.linde_climatecontrol_outdoor_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Outdoor Temperature',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_sensoryData_outdoorTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_climatecontrol_outdoor_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Sanne ClimateControl Outdoor Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_climatecontrol_outdoor_temperature',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '13.5',
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_climatecontrol_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.linde_climatecontrol_room_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Room Temperature',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_sensoryData_roomTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_climatecontrol_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Sanne ClimateControl Room Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_climatecontrol_room_temperature',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '18',
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_gateway_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_gateway_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Error Code',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_gateway_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_gateway_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_gateway_error_code',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_gateway_firmware_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_gateway_firmware_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Firmware Version',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_gateway_None_firmwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_gateway_firmware_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Firmware Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_gateway_firmware_version',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '1_12_84',
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_gateway_mac_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_gateway_mac_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Mac Address',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_gateway_None_macAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_gateway_mac_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Mac Address',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_gateway_mac_address',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_gateway_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_gateway_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Model Info',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_gateway_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_gateway_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_gateway_model_info',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'BRP069C4x',
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_gateway_region_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_gateway_region_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Region Code',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_gateway_None_regionCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_gateway_region_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Region Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_gateway_region_code',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'eu',
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_gateway_serial_number-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_gateway_serial_number',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:numeric',
    'original_name': 'Gateway Serial Number',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_gateway_None_serialNumber',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_gateway_serial_number-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Serial Number',
      'icon': 'mdi:numeric',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_gateway_serial_number',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0000000002404589',
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_gateway_ssid-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_gateway_ssid',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:access-point-network',
    'original_name': 'Gateway Ssid',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_gateway_None_ssid',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_gateway_ssid-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Ssid',
      'icon': 'mdi:access-point-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_gateway_ssid',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'DaikinAP66051',
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_gateway_time_zone-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_gateway_time_zone',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Time Zone',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_gateway_None_timeZone',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_gateway_time_zone-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Time Zone',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_gateway_time_zone',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'Europe/Amsterdam',
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_gateway_wifi_connection_s_s_i_d-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_gateway_wifi_connection_s_s_i_d',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:access-point-network',
    'original_name': 'Gateway Wifi Connection S S I D',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_gateway_None_wifiConnectionSSID',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_gateway_wifi_connection_s_s_i_d-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Wifi Connection S S I D',
      'icon': 'mdi:access-point-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_gateway_wifi_connection_s_s_i_d',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'WILLEMSEN',
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_gateway_wifi_connection_strength-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_gateway_wifi_connection_strength',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.SIGNAL_STRENGTH: 'signal_strength'>,
    'original_icon': 'mdi:wifi',
    'original_name': 'Gateway Wifi Connection Strength',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_gateway_None_wifiConnectionStrength',
    'unit_of_measurement': 'dBm',
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_gateway_wifi_connection_strength-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'signal_strength',
      'friendly_name': 'Sanne Gateway Wifi Connection Strength',
      'icon': 'mdi:wifi',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': 'dBm',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_gateway_wifi_connection_strength',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '-48',
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_indoorunit_dry_keep_setting-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.linde_indoorunit_dry_keep_setting',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:water-percent',
    'original_name': 'IndoorUnit Dry Keep Setting',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_indoorUnit_None_dryKeepSetting',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_indoorunit_dry_keep_setting-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne IndoorUnit Dry Keep Setting',
      'icon': 'mdi:water-percent',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_indoorunit_dry_keep_setting',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_indoorunit_eeprom_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_indoorunit_eeprom_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Eeprom Version',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_indoorUnit_None_eepromVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_indoorunit_eeprom_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne IndoorUnit Eeprom Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_indoorunit_eeprom_version',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '12FD',
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_indoorunit_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_indoorunit_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Software Version',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_indoorUnit_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_indoorunit_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne IndoorUnit Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_indoorunit_software_version',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '20003001',
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_outdoorunit_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_outdoorunit_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Error Code',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_outdoorUnit_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_outdoorunit_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne OutdoorUnit Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_outdoorunit_error_code',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '00-',
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_ratelimit_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_ratelimit_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit day',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_limitsensor_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_ratelimit_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_ratelimit_day',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_ratelimit_minute-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_ratelimit_minute',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit minute',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_limitsensor_minute',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_ratelimit_minute-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit minute',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_ratelimit_minute',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_ratelimit_ratelimit_reset-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_ratelimit_ratelimit_reset',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit ratelimit_reset',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_limitsensor_ratelimit_reset',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_ratelimit_ratelimit_reset-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit ratelimit_reset',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_ratelimit_ratelimit_reset',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_ratelimit_remaining_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_ratelimit_remaining_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_day',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_limitsensor_remaining_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_ratelimit_remaining_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit remaining_day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_ratelimit_remaining_day',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_ratelimit_remaining_minutes-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_ratelimit_remaining_minutes',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_minutes',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_limitsensor_remaining_minutes',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_ratelimit_remaining_minutes-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit remaining_minutes',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_ratelimit_remaining_minutes',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_ratelimit_retry_after-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_ratelimit_retry_after',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit retry_after',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_limitsensor_retry_after',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_ratelimit_retry_after-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit retry_after',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_ratelimit_retry_after',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_climatecontrol_cooling_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sanne_climatecontrol_cooling_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_electrical_cooling_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_climatecontrol_cooling_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Cooling Daily Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_climatecontrol_cooling_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_climatecontrol_cooling_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sanne_climatecontrol_cooling_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_electrical_cooling_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_climatecontrol_cooling_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Cooling Weekly Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_climatecontrol_cooling_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0.3',
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_climatecontrol_cooling_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sanne_climatecontrol_cooling_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_electrical_cooling_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_climatecontrol_cooling_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Cooling Yearly Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_climatecontrol_cooling_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '1.6',
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_climatecontrol_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_climatecontrol_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Error Code',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_climatecontrol_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_climatecontrol_error_code',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '00-',
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_climatecontrol_heating_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sanne_climatecontrol_heating_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_electrical_heating_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_climatecontrol_heating_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Heating Daily Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_climatecontrol_heating_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_climatecontrol_heating_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sanne_climatecontrol_heating_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_electrical_heating_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_climatecontrol_heating_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Heating Weekly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_climatecontrol_heating_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_climatecontrol_heating_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sanne_climatecontrol_heating_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_electrical_heating_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_climatecontrol_heating_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Heating Yearly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_climatecontrol_heating_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '31.5',
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_climatecontrol_icon_id-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_climatecontrol_icon_id',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Icon Id',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_None_iconId',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_climatecontrol_icon_id-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Icon Id',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_climatecontrol_icon_id',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '15',
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_climatecontrol_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_climatecontrol_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Name',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_climatecontrol_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_climatecontrol_name',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'Sanne',
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_climatecontrol_outdoor_silent_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sanne_climatecontrol_outdoor_silent_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'ClimateControl Outdoor Silent Mode',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_None_outdoorSilentMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_climatecontrol_outdoor_silent_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Outdoor Silent Mode',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_climatecontrol_outdoor_silent_mode',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_climatecontrol_outdoor_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sanne_climatecontrol_outdoor_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Outdoor Temperature',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_sensoryData_outdoorTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_climatecontrol_outdoor_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Sanne ClimateControl Outdoor Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_climatecontrol_outdoor_temperature',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '13.5',
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_climatecontrol_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sanne_climatecontrol_room_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Room Temperature',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_sensoryData_roomTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_climatecontrol_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Sanne ClimateControl Room Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_climatecontrol_room_temperature',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '19',
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_gateway_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_gateway_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Error Code',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_gateway_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_gateway_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_gateway_error_code',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_gateway_firmware_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_gateway_firmware_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Firmware Version',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_gateway_None_firmwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_gateway_firmware_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Firmware Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_gateway_firmware_version',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '1_12_51',
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_gateway_mac_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_gateway_mac_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Mac Address',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_gateway_None_macAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_gateway_mac_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Mac Address',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_gateway_mac_address',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_gateway_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_gateway_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Model Info',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_gateway_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_gateway_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_gateway_model_info',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'BRP069C4x',
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_gateway_region_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_gateway_region_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Region Code',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_gateway_None_regionCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_gateway_region_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Region Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_gateway_region_code',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'eu',
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_gateway_serial_number-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_gateway_serial_number',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:numeric',
    'original_name': 'Gateway Serial Number',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_gateway_None_serialNumber',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_gateway_serial_number-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Serial Number',
      'icon': 'mdi:numeric',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_gateway_serial_number',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0000000002405236',
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_gateway_ssid-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_gateway_ssid',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:access-point-network',
    'original_name': 'Gateway Ssid',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_gateway_None_ssid',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_gateway_ssid-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Ssid',
      'icon': 'mdi:access-point-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_gateway_ssid',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'DaikinAP22483',
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_gateway_time_zone-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_gateway_time_zone',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Time Zone',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_gateway_None_timeZone',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_gateway_time_zone-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Time Zone',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_gateway_time_zone',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'Europe/Amsterdam',
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_gateway_wifi_connection_s_s_i_d-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_gateway_wifi_connection_s_s_i_d',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:access-point-network',
    'original_name': 'Gateway Wifi Connection S S I D',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_gateway_None_wifiConnectionSSID',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_gateway_wifi_connection_s_s_i_d-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Wifi Connection S S I D',
      'icon': 'mdi:access-point-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_gateway_wifi_connection_s_s_i_d',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'WILLEMSEN',
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_gateway_wifi_connection_strength-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_gateway_wifi_connection_strength',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.SIGNAL_STRENGTH: 'signal_strength'>,
    'original_icon': 'mdi:wifi',
    'original_name': 'Gateway Wifi Connection Strength',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_gateway_None_wifiConnectionStrength',
    'unit_of_measurement': 'dBm',
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_gateway_wifi_connection_strength-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'signal_strength',
      'friendly_name': 'Sanne Gateway Wifi Connection Strength',
      'icon': 'mdi:wifi',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': 'dBm',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_gateway_wifi_connection_strength',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '-35',
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_indoorunit_dry_keep_setting-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sanne_indoorunit_dry_keep_setting',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:water-percent',
    'original_name': 'IndoorUnit Dry Keep Setting',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_indoorUnit_None_dryKeepSetting',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_indoorunit_dry_keep_setting-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne IndoorUnit Dry Keep Setting',
      'icon': 'mdi:water-percent',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_indoorunit_dry_keep_setting',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_indoorunit_eeprom_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_indoorunit_eeprom_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Eeprom Version',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_indoorUnit_None_eepromVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_indoorunit_eeprom_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne IndoorUnit Eeprom Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_indoorunit_eeprom_version',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '12FD',
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_indoorunit_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_indoorunit_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Software Version',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_indoorUnit_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_indoorunit_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne IndoorUnit Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_indoorunit_software_version',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '20003001',
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_outdoorunit_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_outdoorunit_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Error Code',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_outdoorUnit_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_outdoorunit_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne OutdoorUnit Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_outdoorunit_error_code',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '00-',
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_ratelimit_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_ratelimit_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit day',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_limitsensor_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_ratelimit_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_ratelimit_day',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_ratelimit_minute-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_ratelimit_minute',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit minute',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_limitsensor_minute',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_ratelimit_minute-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit minute',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_ratelimit_minute',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_ratelimit_ratelimit_reset-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_ratelimit_ratelimit_reset',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit ratelimit_reset',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_limitsensor_ratelimit_reset',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_ratelimit_ratelimit_reset-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit ratelimit_reset',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_ratelimit_ratelimit_reset',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_ratelimit_remaining_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_ratelimit_remaining_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_day',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_limitsensor_remaining_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_ratelimit_remaining_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit remaining_day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_ratelimit_remaining_day',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_ratelimit_remaining_minutes-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_ratelimit_remaining_minutes',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_minutes',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_limitsensor_remaining_minutes',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_ratelimit_remaining_minutes-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit remaining_minutes',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_ratelimit_remaining_minutes',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_ratelimit_retry_after-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_ratelimit_retry_after',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit retry_after',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_limitsensor_retry_after',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_ratelimit_retry_after-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit retry_after',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_ratelimit_retry_after',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_climatecontrol_cooling_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.werkkamer_climatecontrol_cooling_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_electrical_cooling_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_climatecontrol_cooling_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Cooling Daily Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_climatecontrol_cooling_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0.1',
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_climatecontrol_cooling_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.werkkamer_climatecontrol_cooling_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_electrical_cooling_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_climatecontrol_cooling_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Cooling Weekly Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_climatecontrol_cooling_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0.3',
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_climatecontrol_cooling_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.werkkamer_climatecontrol_cooling_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_electrical_cooling_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_climatecontrol_cooling_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Cooling Yearly Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_climatecontrol_cooling_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '1.6',
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_climatecontrol_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_climatecontrol_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Error Code',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_climatecontrol_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_climatecontrol_error_code',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '00-',
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_climatecontrol_heating_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.werkkamer_climatecontrol_heating_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_electrical_heating_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_climatecontrol_heating_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Heating Daily Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_climatecontrol_heating_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_climatecontrol_heating_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.werkkamer_climatecontrol_heating_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_electrical_heating_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_climatecontrol_heating_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Heating Weekly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_climatecontrol_heating_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_climatecontrol_heating_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.werkkamer_climatecontrol_heating_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_electrical_heating_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_climatecontrol_heating_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Heating Yearly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_climatecontrol_heating_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '22.5',
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_climatecontrol_icon_id-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_climatecontrol_icon_id',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Icon Id',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_None_iconId',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_climatecontrol_icon_id-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Icon Id',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_climatecontrol_icon_id',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '15',
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_climatecontrol_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_climatecontrol_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Name',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_climatecontrol_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_climatecontrol_name',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'Werkkamer',
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_climatecontrol_outdoor_silent_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.werkkamer_climatecontrol_outdoor_silent_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'ClimateControl Outdoor Silent Mode',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_None_outdoorSilentMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_climatecontrol_outdoor_silent_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Outdoor Silent Mode',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_climatecontrol_outdoor_silent_mode',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_climatecontrol_outdoor_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.werkkamer_climatecontrol_outdoor_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Outdoor Temperature',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_sensoryData_outdoorTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_climatecontrol_outdoor_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Sanne ClimateControl Outdoor Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_climatecontrol_outdoor_temperature',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '13.5',
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_climatecontrol_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.werkkamer_climatecontrol_room_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Room Temperature',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_sensoryData_roomTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_climatecontrol_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Sanne ClimateControl Room Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_climatecontrol_room_temperature',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '19',
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_gateway_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_gateway_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Error Code',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_gateway_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_gateway_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_gateway_error_code',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_gateway_firmware_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_gateway_firmware_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Firmware Version',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_gateway_None_firmwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_gateway_firmware_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Firmware Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_gateway_firmware_version',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '1_12_51',
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_gateway_mac_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_gateway_mac_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Mac Address',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_gateway_None_macAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_gateway_mac_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Mac Address',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_gateway_mac_address',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_gateway_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_gateway_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Model Info',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_gateway_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_gateway_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_gateway_model_info',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'BRP069C4x',
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_gateway_region_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_gateway_region_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Region Code',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_gateway_None_regionCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_gateway_region_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Region Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_gateway_region_code',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'eu',
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_gateway_serial_number-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_gateway_serial_number',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:numeric',
    'original_name': 'Gateway Serial Number',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_gateway_None_serialNumber',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_gateway_serial_number-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Serial Number',
      'icon': 'mdi:numeric',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_gateway_serial_number',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0000000002642750',
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_gateway_ssid-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_gateway_ssid',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:access-point-network',
    'original_name': 'Gateway Ssid',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_gateway_None_ssid',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_gateway_ssid-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Ssid',
      'icon': 'mdi:access-point-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_gateway_ssid',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'DaikinAP32931',
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_gateway_time_zone-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_gateway_time_zone',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Time Zone',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_gateway_None_timeZone',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_gateway_time_zone-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Time Zone',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_gateway_time_zone',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'Europe/Amsterdam',
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_gateway_wifi_connection_s_s_i_d-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_gateway_wifi_connection_s_s_i_d',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:access-point-network',
    'original_name': 'Gateway Wifi Connection S S I D',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_gateway_None_wifiConnectionSSID',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_gateway_wifi_connection_s_s_i_d-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Wifi Connection S S I D',
      'icon': 'mdi:access-point-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_gateway_wifi_connection_s_s_i_d',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'WILLEMSEN',
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_gateway_wifi_connection_strength-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_gateway_wifi_connection_strength',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.SIGNAL_STRENGTH: 'signal_strength'>,
    'original_icon': 'mdi:wifi',
    'original_name': 'Gateway Wifi Connection Strength',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_gateway_None_wifiConnectionStrength',
    'unit_of_measurement': 'dBm',
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_gateway_wifi_connection_strength-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'signal_strength',
      'friendly_name': 'Sanne Gateway Wifi Connection Strength',
      'icon': 'mdi:wifi',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': 'dBm',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_gateway_wifi_connection_strength',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '-46',
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_indoorunit_dry_keep_setting-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.werkkamer_indoorunit_dry_keep_setting',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:water-percent',
    'original_name': 'IndoorUnit Dry Keep Setting',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_indoorUnit_None_dryKeepSetting',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_indoorunit_dry_keep_setting-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne IndoorUnit Dry Keep Setting',
      'icon': 'mdi:water-percent',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_indoorunit_dry_keep_setting',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_indoorunit_eeprom_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_indoorunit_eeprom_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Eeprom Version',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_indoorUnit_None_eepromVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_indoorunit_eeprom_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne IndoorUnit Eeprom Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_indoorunit_eeprom_version',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '12FC',
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_indoorunit_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_indoorunit_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Software Version',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_indoorUnit_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_indoorunit_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne IndoorUnit Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_indoorunit_software_version',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '20003001',
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_outdoorunit_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_outdoorunit_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Error Code',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_outdoorUnit_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_outdoorunit_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne OutdoorUnit Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_outdoorunit_error_code',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '00-',
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_ratelimit_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_ratelimit_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit day',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_limitsensor_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_ratelimit_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_ratelimit_day',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_ratelimit_minute-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_ratelimit_minute',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit minute',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_limitsensor_minute',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_ratelimit_minute-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit minute',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_ratelimit_minute',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_ratelimit_ratelimit_reset-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_ratelimit_ratelimit_reset',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit ratelimit_reset',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_limitsensor_ratelimit_reset',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_ratelimit_ratelimit_reset-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit ratelimit_reset',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_ratelimit_ratelimit_reset',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_ratelimit_remaining_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_ratelimit_remaining_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_day',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_limitsensor_remaining_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_ratelimit_remaining_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit remaining_day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_ratelimit_remaining_day',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_ratelimit_remaining_minutes-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_ratelimit_remaining_minutes',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_minutes',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_limitsensor_remaining_minutes',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_ratelimit_remaining_minutes-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit remaining_minutes',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_ratelimit_remaining_minutes',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_ratelimit_retry_after-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_ratelimit_retry_after',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit retry_after',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_limitsensor_retry_after',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_ratelimit_retry_after-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit retry_after',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_ratelimit_retry_after',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma_ratelimit[switch.johnny_maaike_climatecontrol_econo_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'switch',
    'entity_category': None,
    'entity_id': 'switch.johnny_maaike_climatecontrol_econo_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:leaf',
    'original_name': 'ClimateControl Econo Mode',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_econoMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[switch.johnny_maaike_climatecontrol_econo_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Econo Mode',
      'icon': 'mdi:leaf',
    }),
    'context': <ANY>,
    'entity_id': 'switch.johnny_maaike_climatecontrol_econo_mode',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_altherma_ratelimit[switch.johnny_maaike_climatecontrol_streamer_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'switch',
    'entity_category': None,
    'entity_id': 'switch.johnny_maaike_climatecontrol_streamer_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'hass:air-filter',
    'original_name': 'ClimateControl Streamer Mode',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_streamerMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[switch.johnny_maaike_climatecontrol_streamer_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Streamer Mode',
      'icon': 'hass:air-filter',
    }),
    'context': <ANY>,
    'entity_id': 'switch.johnny_maaike_climatecontrol_streamer_mode',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[switch.linde_climatecontrol_econo_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'switch',
    'entity_category': None,
    'entity_id': 'switch.linde_climatecontrol_econo_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:leaf',
    'original_name': 'ClimateControl Econo Mode',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_econoMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[switch.linde_climatecontrol_econo_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Econo Mode',
      'icon': 'mdi:leaf',
    }),
    'context': <ANY>,
    'entity_id': 'switch.linde_climatecontrol_econo_mode',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[switch.linde_climatecontrol_streamer_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'switch',
    'entity_category': None,
    'entity_id': 'switch.linde_climatecontrol_streamer_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'hass:air-filter',
    'original_name': 'ClimateControl Streamer Mode',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_streamerMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[switch.linde_climatecontrol_streamer_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Streamer Mode',
      'icon': 'hass:air-filter',
    }),
    'context': <ANY>,
    'entity_id': 'switch.linde_climatecontrol_streamer_mode',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[switch.sanne_climatecontrol_econo_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'switch',
    'entity_category': None,
    'entity_id': 'switch.sanne_climatecontrol_econo_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:leaf',
    'original_name': 'ClimateControl Econo Mode',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_econoMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[switch.sanne_climatecontrol_econo_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Econo Mode',
      'icon': 'mdi:leaf',
    }),
    'context': <ANY>,
    'entity_id': 'switch.sanne_climatecontrol_econo_mode',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[switch.sanne_climatecontrol_streamer_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'switch',
    'entity_category': None,
    'entity_id': 'switch.sanne_climatecontrol_streamer_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'hass:air-filter',
    'original_name': 'ClimateControl Streamer Mode',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_streamerMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[switch.sanne_climatecontrol_streamer_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Streamer Mode',
      'icon': 'hass:air-filter',
    }),
    'context': <ANY>,
    'entity_id': 'switch.sanne_climatecontrol_streamer_mode',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[switch.werkkamer_climatecontrol_econo_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'switch',
    'entity_category': None,
    'entity_id': 'switch.werkkamer_climatecontrol_econo_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:leaf',
    'original_name': 'ClimateControl Econo Mode',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_econoMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[switch.werkkamer_climatecontrol_econo_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Econo Mode',
      'icon': 'mdi:leaf',
    }),
    'context': <ANY>,
    'entity_id': 'switch.werkkamer_climatecontrol_econo_mode',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[switch.werkkamer_climatecontrol_streamer_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'switch',
    'entity_category': None,
    'entity_id': 'switch.werkkamer_climatecontrol_streamer_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'hass:air-filter',
    'original_name': 'ClimateControl Streamer Mode',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_streamerMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[switch.werkkamer_climatecontrol_streamer_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Streamer Mode',
      'icon': 'hass:air-filter',
    }),
    'context': <ANY>,
    'entity_id': 'switch.werkkamer_climatecontrol_streamer_mode',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[water_heater.altherma-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'max_temp': 60.0,
      'min_temp': 30.0,
      'operation_list': list([
        'off',
        'heat_pump',
        'performance',
      ]),
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'water_heater',
    'entity_category': None,
    'entity_id': 'water_heater.altherma',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Altherma',
    'platform': 'daikin_onecta',
    'supported_features': <WaterHeaterEntityFeature: 3>,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[water_heater.altherma-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 48.0,
      'friendly_name': 'Altherma',
      'max_temp': 60.0,
      'min_temp': 30.0,
      'operation_list': list([
        'off',
        'heat_pump',
        'performance',
      ]),
      'operation_mode': 'heat_pump',
      'supported_features': <WaterHeaterEntityFeature: 3>,
      'target_temp_high': None,
      'target_temp_low': None,
      'target_temp_step': 1.0,
      'temperature': 48.0,
    }),
    'context': <ANY>,
    'entity_id': 'water_heater.altherma',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'heat_pump',
  })
# ---
# name: test_climate[binary_sensor.altherma_climatecontrol_is_holiday_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_climatecontrol_is_holiday_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Holiday Mode Active',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_None_isHolidayModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.altherma_climatecontrol_is_holiday_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is Holiday Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_climatecontrol_is_holiday_mode_active',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.altherma_climatecontrol_is_in_emergency_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_climatecontrol_is_in_emergency_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Emergency State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_None_isInEmergencyState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.altherma_climatecontrol_is_in_emergency_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Emergency State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_climatecontrol_is_in_emergency_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.altherma_climatecontrol_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_climatecontrol_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Error State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.altherma_climatecontrol_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_climatecontrol_is_in_error_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.altherma_climatecontrol_is_in_installer_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_climatecontrol_is_in_installer_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Installer State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_None_isInInstallerState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.altherma_climatecontrol_is_in_installer_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is In Installer State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_climatecontrol_is_in_installer_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.altherma_climatecontrol_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_climatecontrol_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Warning State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.altherma_climatecontrol_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_climatecontrol_is_in_warning_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.altherma_domestichotwatertank_is_holiday_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_holiday_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Is Holiday Mode Active',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_None_isHolidayModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.altherma_domestichotwatertank_is_holiday_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne DomesticHotWaterTank Is Holiday Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_holiday_mode_active',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.altherma_domestichotwatertank_is_in_emergency_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_in_emergency_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Is In Emergency State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_None_isInEmergencyState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.altherma_domestichotwatertank_is_in_emergency_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne DomesticHotWaterTank Is In Emergency State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_in_emergency_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.altherma_domestichotwatertank_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Is In Error State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.altherma_domestichotwatertank_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne DomesticHotWaterTank Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_in_error_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.altherma_domestichotwatertank_is_in_installer_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_in_installer_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Is In Installer State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_None_isInInstallerState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.altherma_domestichotwatertank_is_in_installer_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne DomesticHotWaterTank Is In Installer State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_in_installer_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.altherma_domestichotwatertank_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Is In Warning State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.altherma_domestichotwatertank_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne DomesticHotWaterTank Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_in_warning_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.altherma_domestichotwatertank_is_powerful_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_powerful_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Is Powerful Mode Active',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_None_isPowerfulModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.altherma_domestichotwatertank_is_powerful_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne DomesticHotWaterTank Is Powerful Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_powerful_mode_active',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.johnny_maaike_climatecontrol_is_cool_heat_master-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.johnny_maaike_climatecontrol_is_cool_heat_master',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Cool Heat Master',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_None_isCoolHeatMaster',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.johnny_maaike_climatecontrol_is_cool_heat_master-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is Cool Heat Master',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.johnny_maaike_climatecontrol_is_cool_heat_master',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_climate[binary_sensor.johnny_maaike_climatecontrol_is_holiday_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.johnny_maaike_climatecontrol_is_holiday_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Holiday Mode Active',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_None_isHolidayModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.johnny_maaike_climatecontrol_is_holiday_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is Holiday Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.johnny_maaike_climatecontrol_is_holiday_mode_active',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.johnny_maaike_climatecontrol_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.johnny_maaike_climatecontrol_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Caution State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.johnny_maaike_climatecontrol_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.johnny_maaike_climatecontrol_is_in_caution_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.johnny_maaike_climatecontrol_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.johnny_maaike_climatecontrol_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Error State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.johnny_maaike_climatecontrol_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.johnny_maaike_climatecontrol_is_in_error_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.johnny_maaike_climatecontrol_is_in_mode_conflict-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.johnny_maaike_climatecontrol_is_in_mode_conflict',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Mode Conflict',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_None_isInModeConflict',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.johnny_maaike_climatecontrol_is_in_mode_conflict-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Mode Conflict',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.johnny_maaike_climatecontrol_is_in_mode_conflict',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.johnny_maaike_climatecontrol_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.johnny_maaike_climatecontrol_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Warning State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.johnny_maaike_climatecontrol_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.johnny_maaike_climatecontrol_is_in_warning_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.johnny_maaike_climatecontrol_is_lock_function_enabled-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.johnny_maaike_climatecontrol_is_lock_function_enabled',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Lock Function Enabled',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_None_isLockFunctionEnabled',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.johnny_maaike_climatecontrol_is_lock_function_enabled-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is Lock Function Enabled',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.johnny_maaike_climatecontrol_is_lock_function_enabled',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.johnny_maaike_climatecontrol_is_powerful_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.johnny_maaike_climatecontrol_is_powerful_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Powerful Mode Active',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_None_isPowerfulModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.johnny_maaike_climatecontrol_is_powerful_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is Powerful Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.johnny_maaike_climatecontrol_is_powerful_mode_active',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.johnny_maaike_gateway_daylight_saving_time_enabled-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.johnny_maaike_gateway_daylight_saving_time_enabled',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Daylight Saving Time Enabled',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_gateway_None_daylightSavingTimeEnabled',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.johnny_maaike_gateway_daylight_saving_time_enabled-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Daylight Saving Time Enabled',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.johnny_maaike_gateway_daylight_saving_time_enabled',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_climate[binary_sensor.johnny_maaike_gateway_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.johnny_maaike_gateway_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Is In Error State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_gateway_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.johnny_maaike_gateway_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne Gateway Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.johnny_maaike_gateway_is_in_error_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.johnny_maaike_gateway_led_enabled-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.johnny_maaike_gateway_led_enabled',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Led Enabled',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_gateway_None_ledEnabled',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.johnny_maaike_gateway_led_enabled-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Led Enabled',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.johnny_maaike_gateway_led_enabled',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.johnny_maaike_outdoorunit_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.johnny_maaike_outdoorunit_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Caution State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_outdoorUnit_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.johnny_maaike_outdoorunit_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne OutdoorUnit Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.johnny_maaike_outdoorunit_is_in_caution_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.johnny_maaike_outdoorunit_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.johnny_maaike_outdoorunit_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Error State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_outdoorUnit_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.johnny_maaike_outdoorunit_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne OutdoorUnit Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.johnny_maaike_outdoorunit_is_in_error_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.johnny_maaike_outdoorunit_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.johnny_maaike_outdoorunit_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Warning State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_outdoorUnit_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.johnny_maaike_outdoorunit_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne OutdoorUnit Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.johnny_maaike_outdoorunit_is_in_warning_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.linde_climatecontrol_is_cool_heat_master-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.linde_climatecontrol_is_cool_heat_master',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Cool Heat Master',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_None_isCoolHeatMaster',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.linde_climatecontrol_is_cool_heat_master-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is Cool Heat Master',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.linde_climatecontrol_is_cool_heat_master',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_climate[binary_sensor.linde_climatecontrol_is_holiday_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.linde_climatecontrol_is_holiday_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Holiday Mode Active',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_None_isHolidayModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.linde_climatecontrol_is_holiday_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is Holiday Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.linde_climatecontrol_is_holiday_mode_active',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.linde_climatecontrol_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.linde_climatecontrol_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Caution State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.linde_climatecontrol_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.linde_climatecontrol_is_in_caution_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.linde_climatecontrol_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.linde_climatecontrol_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Error State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.linde_climatecontrol_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.linde_climatecontrol_is_in_error_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.linde_climatecontrol_is_in_mode_conflict-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.linde_climatecontrol_is_in_mode_conflict',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Mode Conflict',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_None_isInModeConflict',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.linde_climatecontrol_is_in_mode_conflict-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Mode Conflict',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.linde_climatecontrol_is_in_mode_conflict',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.linde_climatecontrol_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.linde_climatecontrol_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Warning State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.linde_climatecontrol_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.linde_climatecontrol_is_in_warning_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.linde_climatecontrol_is_lock_function_enabled-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.linde_climatecontrol_is_lock_function_enabled',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Lock Function Enabled',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_None_isLockFunctionEnabled',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.linde_climatecontrol_is_lock_function_enabled-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is Lock Function Enabled',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.linde_climatecontrol_is_lock_function_enabled',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.linde_climatecontrol_is_powerful_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.linde_climatecontrol_is_powerful_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Powerful Mode Active',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_None_isPowerfulModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.linde_climatecontrol_is_powerful_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is Powerful Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.linde_climatecontrol_is_powerful_mode_active',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.linde_gateway_daylight_saving_time_enabled-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.linde_gateway_daylight_saving_time_enabled',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Daylight Saving Time Enabled',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_gateway_None_daylightSavingTimeEnabled',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.linde_gateway_daylight_saving_time_enabled-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Daylight Saving Time Enabled',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.linde_gateway_daylight_saving_time_enabled',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_climate[binary_sensor.linde_gateway_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.linde_gateway_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Is In Error State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_gateway_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.linde_gateway_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne Gateway Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.linde_gateway_is_in_error_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.linde_gateway_led_enabled-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.linde_gateway_led_enabled',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Led Enabled',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_gateway_None_ledEnabled',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.linde_gateway_led_enabled-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Led Enabled',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.linde_gateway_led_enabled',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.linde_outdoorunit_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.linde_outdoorunit_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Caution State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_outdoorUnit_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.linde_outdoorunit_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne OutdoorUnit Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.linde_outdoorunit_is_in_caution_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.linde_outdoorunit_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.linde_outdoorunit_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Error State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_outdoorUnit_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.linde_outdoorunit_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne OutdoorUnit Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.linde_outdoorunit_is_in_error_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.linde_outdoorunit_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.linde_outdoorunit_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Warning State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_outdoorUnit_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.linde_outdoorunit_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne OutdoorUnit Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.linde_outdoorunit_is_in_warning_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.sanne_climatecontrol_is_cool_heat_master-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.sanne_climatecontrol_is_cool_heat_master',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Cool Heat Master',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_None_isCoolHeatMaster',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.sanne_climatecontrol_is_cool_heat_master-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is Cool Heat Master',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.sanne_climatecontrol_is_cool_heat_master',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_climate[binary_sensor.sanne_climatecontrol_is_holiday_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.sanne_climatecontrol_is_holiday_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Holiday Mode Active',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_None_isHolidayModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.sanne_climatecontrol_is_holiday_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is Holiday Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.sanne_climatecontrol_is_holiday_mode_active',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.sanne_climatecontrol_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.sanne_climatecontrol_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Caution State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.sanne_climatecontrol_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.sanne_climatecontrol_is_in_caution_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.sanne_climatecontrol_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.sanne_climatecontrol_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Error State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.sanne_climatecontrol_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.sanne_climatecontrol_is_in_error_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.sanne_climatecontrol_is_in_mode_conflict-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.sanne_climatecontrol_is_in_mode_conflict',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Mode Conflict',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_None_isInModeConflict',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.sanne_climatecontrol_is_in_mode_conflict-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Mode Conflict',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.sanne_climatecontrol_is_in_mode_conflict',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.sanne_climatecontrol_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.sanne_climatecontrol_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Warning State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.sanne_climatecontrol_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.sanne_climatecontrol_is_in_warning_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.sanne_climatecontrol_is_lock_function_enabled-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.sanne_climatecontrol_is_lock_function_enabled',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Lock Function Enabled',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_None_isLockFunctionEnabled',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.sanne_climatecontrol_is_lock_function_enabled-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is Lock Function Enabled',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.sanne_climatecontrol_is_lock_function_enabled',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.sanne_climatecontrol_is_powerful_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.sanne_climatecontrol_is_powerful_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Powerful Mode Active',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_None_isPowerfulModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.sanne_climatecontrol_is_powerful_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is Powerful Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.sanne_climatecontrol_is_powerful_mode_active',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.sanne_gateway_daylight_saving_time_enabled-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.sanne_gateway_daylight_saving_time_enabled',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Daylight Saving Time Enabled',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_gateway_None_daylightSavingTimeEnabled',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.sanne_gateway_daylight_saving_time_enabled-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Daylight Saving Time Enabled',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.sanne_gateway_daylight_saving_time_enabled',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_climate[binary_sensor.sanne_gateway_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.sanne_gateway_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Is In Error State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_gateway_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.sanne_gateway_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne Gateway Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.sanne_gateway_is_in_error_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.sanne_gateway_led_enabled-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.sanne_gateway_led_enabled',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Led Enabled',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_gateway_None_ledEnabled',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.sanne_gateway_led_enabled-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Led Enabled',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.sanne_gateway_led_enabled',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.sanne_outdoorunit_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.sanne_outdoorunit_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Caution State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_outdoorUnit_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.sanne_outdoorunit_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne OutdoorUnit Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.sanne_outdoorunit_is_in_caution_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.sanne_outdoorunit_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.sanne_outdoorunit_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Error State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_outdoorUnit_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.sanne_outdoorunit_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne OutdoorUnit Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.sanne_outdoorunit_is_in_error_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.sanne_outdoorunit_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.sanne_outdoorunit_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Warning State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_outdoorUnit_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.sanne_outdoorunit_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne OutdoorUnit Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.sanne_outdoorunit_is_in_warning_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.werkkamer_climatecontrol_is_cool_heat_master-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_cool_heat_master',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Cool Heat Master',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_None_isCoolHeatMaster',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.werkkamer_climatecontrol_is_cool_heat_master-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is Cool Heat Master',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_cool_heat_master',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_climate[binary_sensor.werkkamer_climatecontrol_is_holiday_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_holiday_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Holiday Mode Active',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_None_isHolidayModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.werkkamer_climatecontrol_is_holiday_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is Holiday Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_holiday_mode_active',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.werkkamer_climatecontrol_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Caution State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.werkkamer_climatecontrol_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_in_caution_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.werkkamer_climatecontrol_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Error State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.werkkamer_climatecontrol_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_in_error_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.werkkamer_climatecontrol_is_in_mode_conflict-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_in_mode_conflict',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Mode Conflict',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_None_isInModeConflict',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.werkkamer_climatecontrol_is_in_mode_conflict-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Mode Conflict',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_in_mode_conflict',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.werkkamer_climatecontrol_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Warning State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.werkkamer_climatecontrol_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_in_warning_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.werkkamer_climatecontrol_is_lock_function_enabled-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_lock_function_enabled',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Lock Function Enabled',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_None_isLockFunctionEnabled',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.werkkamer_climatecontrol_is_lock_function_enabled-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is Lock Function Enabled',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_lock_function_enabled',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.werkkamer_climatecontrol_is_powerful_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_powerful_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Powerful Mode Active',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_None_isPowerfulModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.werkkamer_climatecontrol_is_powerful_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is Powerful Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_powerful_mode_active',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.werkkamer_gateway_daylight_saving_time_enabled-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.werkkamer_gateway_daylight_saving_time_enabled',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Daylight Saving Time Enabled',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_gateway_None_daylightSavingTimeEnabled',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.werkkamer_gateway_daylight_saving_time_enabled-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Daylight Saving Time Enabled',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.werkkamer_gateway_daylight_saving_time_enabled',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_climate[binary_sensor.werkkamer_gateway_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.werkkamer_gateway_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Is In Error State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_gateway_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.werkkamer_gateway_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne Gateway Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.werkkamer_gateway_is_in_error_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.werkkamer_gateway_led_enabled-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.werkkamer_gateway_led_enabled',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Led Enabled',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_gateway_None_ledEnabled',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.werkkamer_gateway_led_enabled-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Led Enabled',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.werkkamer_gateway_led_enabled',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.werkkamer_outdoorunit_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.werkkamer_outdoorunit_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Caution State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_outdoorUnit_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.werkkamer_outdoorunit_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne OutdoorUnit Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.werkkamer_outdoorunit_is_in_caution_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.werkkamer_outdoorunit_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.werkkamer_outdoorunit_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Error State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_outdoorUnit_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.werkkamer_outdoorunit_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne OutdoorUnit Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.werkkamer_outdoorunit_is_in_error_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.werkkamer_outdoorunit_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.werkkamer_outdoorunit_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Warning State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_outdoorUnit_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.werkkamer_outdoorunit_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne OutdoorUnit Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.werkkamer_outdoorunit_is_in_warning_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[climate.altherma_leaving_water_offset-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
      ]),
      'max_temp': None,
      'min_temp': None,
      'preset_modes': list([
        'away',
        'none',
      ]),
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'climate',
    'entity_category': None,
    'entity_id': 'climate.altherma_leaving_water_offset',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Altherma Leaving Water Offset',
    'platform': 'daikin_onecta',
    'supported_features': <ClimateEntityFeature: 16>,
    'translation_key': 'daikin_onecta',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_leavingWaterOffset',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[climate.altherma_leaving_water_offset-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 27,
      'friendly_name': 'Altherma Leaving Water Offset',
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
      ]),
      'max_temp': None,
      'min_temp': None,
      'preset_mode': 'none',
      'preset_modes': list([
        'away',
        'none',
      ]),
      'supported_features': <ClimateEntityFeature: 16>,
    }),
    'context': <ANY>,
    'entity_id': 'climate.altherma_leaving_water_offset',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[climate.altherma_leaving_water_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
      ]),
      'max_temp': 20,
      'min_temp': 18,
      'preset_modes': list([
        'away',
        'none',
      ]),
      'target_temp_step': 1,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'climate',
    'entity_category': None,
    'entity_id': 'climate.altherma_leaving_water_temperature',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Altherma Leaving Water Temperature',
    'platform': 'daikin_onecta',
    'supported_features': <ClimateEntityFeature: 17>,
    'translation_key': 'daikin_onecta',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_leavingWaterTemperature',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[climate.altherma_leaving_water_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 27,
      'friendly_name': 'Altherma Leaving Water Temperature',
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
      ]),
      'max_temp': 20,
      'min_temp': 18,
      'preset_mode': 'none',
      'preset_modes': list([
        'away',
        'none',
      ]),
      'supported_features': <ClimateEntityFeature: 17>,
      'target_temp_step': 1,
      'temperature': 19,
    }),
    'context': <ANY>,
    'entity_id': 'climate.altherma_leaving_water_temperature',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[climate.altherma_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
      ]),
      'max_temp': 28,
      'min_temp': 23,
      'preset_modes': list([
        'away',
        'none',
      ]),
      'target_temp_step': 0.5,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'climate',
    'entity_category': None,
    'entity_id': 'climate.altherma_room_temperature',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Altherma Room Temperature',
    'platform': 'daikin_onecta',
    'supported_features': <ClimateEntityFeature: 17>,
    'translation_key': 'daikin_onecta',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_roomTemperature',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[climate.altherma_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 21,
      'friendly_name': 'Altherma Room Temperature',
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
      ]),
      'max_temp': 28,
      'min_temp': 23,
      'preset_mode': 'none',
      'preset_modes': list([
        'away',
        'none',
      ]),
      'supported_features': <ClimateEntityFeature: 17>,
      'target_temp_step': 0.5,
      'temperature': 24.5,
    }),
    'context': <ANY>,
    'entity_id': 'climate.altherma_room_temperature',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[climate.johnny_maaike_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'fan_modes': list([
        'auto',
        'quiet',
        '1',
        '2',
        '3',
        '4',
        '5',
      ]),
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
        <HVACMode.DRY: 'dry'>,
      ]),
      'max_temp': 33,
      'min_temp': 18,
      'preset_modes': list([
        'away',
        'boost',
        'eco',
        'none',
      ]),
      'swing_modes': list([
        'off',
        'horizontal',
        'vertical',
        'both',
        'Comfort Airflow',
        'Comfort Airflow and Horizontal',
      ]),
      'target_temp_step': 0.5,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'climate',
    'entity_category': None,
    'entity_id': 'climate.johnny_maaike_room_temperature',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Johnny&Maaike Room Temperature',
    'platform': 'daikin_onecta',
    'supported_features': <ClimateEntityFeature: 57>,
    'translation_key': 'daikin_onecta',
    'unique_id': '32db6075-b739-4026-b661-127009254b42_roomTemperature',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[climate.johnny_maaike_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 19,
      'fan_mode': 'auto',
      'fan_modes': list([
        'auto',
        'quiet',
        '1',
        '2',
        '3',
        '4',
        '5',
      ]),
      'friendly_name': 'Johnny&Maaike Room Temperature',
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
        <HVACMode.DRY: 'dry'>,
      ]),
      'max_temp': 33,
      'min_temp': 18,
      'preset_mode': 'eco',
      'preset_modes': list([
        'away',
        'boost',
        'eco',
        'none',
      ]),
      'supported_features': <ClimateEntityFeature: 57>,
      'swing_mode': 'off',
      'swing_modes': list([
        'off',
        'horizontal',
        'vertical',
        'both',
        'Comfort Airflow',
        'Comfort Airflow and Horizontal',
      ]),
      'target_temp_step': 0.5,
      'temperature': 25,
    }),
    'context': <ANY>,
    'entity_id': 'climate.johnny_maaike_room_temperature',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[climate.linde_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'fan_modes': list([
        'auto',
        'quiet',
        '1',
        '2',
        '3',
        '4',
        '5',
      ]),
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
        <HVACMode.DRY: 'dry'>,
      ]),
      'max_temp': 33,
      'min_temp': 18,
      'preset_modes': list([
        'away',
        'boost',
        'eco',
        'none',
      ]),
      'swing_modes': list([
        'off',
        'horizontal',
        'vertical',
        'both',
        'Comfort Airflow',
        'Comfort Airflow and Horizontal',
      ]),
      'target_temp_step': 0.5,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'climate',
    'entity_category': None,
    'entity_id': 'climate.linde_room_temperature',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Linde Room Temperature',
    'platform': 'daikin_onecta',
    'supported_features': <ClimateEntityFeature: 57>,
    'translation_key': 'daikin_onecta',
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_roomTemperature',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[climate.linde_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 18,
      'fan_mode': 'auto',
      'fan_modes': list([
        'auto',
        'quiet',
        '1',
        '2',
        '3',
        '4',
        '5',
      ]),
      'friendly_name': 'Linde Room Temperature',
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
        <HVACMode.DRY: 'dry'>,
      ]),
      'max_temp': 33,
      'min_temp': 18,
      'preset_mode': 'none',
      'preset_modes': list([
        'away',
        'boost',
        'eco',
        'none',
      ]),
      'supported_features': <ClimateEntityFeature: 57>,
      'swing_mode': 'off',
      'swing_modes': list([
        'off',
        'horizontal',
        'vertical',
        'both',
        'Comfort Airflow',
        'Comfort Airflow and Horizontal',
      ]),
      'target_temp_step': 0.5,
      'temperature': 23,
    }),
    'context': <ANY>,
    'entity_id': 'climate.linde_room_temperature',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[climate.sanne_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'fan_modes': list([
        'auto',
        'quiet',
        '1',
        '2',
        '3',
        '4',
        '5',
      ]),
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
        <HVACMode.DRY: 'dry'>,
      ]),
      'max_temp': 33,
      'min_temp': 18,
      'preset_modes': list([
        'away',
        'boost',
        'eco',
        'none',
      ]),
      'swing_modes': list([
        'off',
        'horizontal',
        'vertical',
        'both',
        'Comfort Airflow',
        'Comfort Airflow and Horizontal',
      ]),
      'target_temp_step': 0.5,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'climate',
    'entity_category': None,
    'entity_id': 'climate.sanne_room_temperature',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Sanne Room Temperature',
    'platform': 'daikin_onecta',
    'supported_features': <ClimateEntityFeature: 57>,
    'translation_key': 'daikin_onecta',
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_roomTemperature',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[climate.sanne_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 19,
      'fan_mode': 'auto',
      'fan_modes': list([
        'auto',
        'quiet',
        '1',
        '2',
        '3',
        '4',
        '5',
      ]),
      'friendly_name': 'Sanne Room Temperature',
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
        <HVACMode.DRY: 'dry'>,
      ]),
      'max_temp': 33,
      'min_temp': 18,
      'preset_mode': 'none',
      'preset_modes': list([
        'away',
        'boost',
        'eco',
        'none',
      ]),
      'supported_features': <ClimateEntityFeature: 57>,
      'swing_mode': 'off',
      'swing_modes': list([
        'off',
        'horizontal',
        'vertical',
        'both',
        'Comfort Airflow',
        'Comfort Airflow and Horizontal',
      ]),
      'target_temp_step': 0.5,
      'temperature': 23,
    }),
    'context': <ANY>,
    'entity_id': 'climate.sanne_room_temperature',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[climate.werkkamer_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'fan_modes': list([
        'auto',
        'quiet',
        '1',
        '2',
        '3',
        '4',
        '5',
      ]),
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
        <HVACMode.DRY: 'dry'>,
      ]),
      'max_temp': 33,
      'min_temp': 18,
      'preset_modes': list([
        'away',
        'boost',
        'eco',
        'none',
      ]),
      'swing_modes': list([
        'off',
        'horizontal',
        'vertical',
        'both',
        'Comfort Airflow',
        'Comfort Airflow and Horizontal',
      ]),
      'target_temp_step': 0.5,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'climate',
    'entity_category': None,
    'entity_id': 'climate.werkkamer_room_temperature',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Werkkamer Room Temperature',
    'platform': 'daikin_onecta',
    'supported_features': <ClimateEntityFeature: 57>,
    'translation_key': 'daikin_onecta',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_roomTemperature',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[climate.werkkamer_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 19,
      'fan_mode': 'auto',
      'fan_modes': list([
        'auto',
        'quiet',
        '1',
        '2',
        '3',
        '4',
        '5',
      ]),
      'friendly_name': 'Werkkamer Room Temperature',
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
        <HVACMode.DRY: 'dry'>,
      ]),
      'max_temp': 33,
      'min_temp': 18,
      'preset_mode': 'none',
      'preset_modes': list([
        'away',
        'boost',
        'eco',
        'none',
      ]),
      'supported_features': <ClimateEntityFeature: 57>,
      'swing_mode': 'off',
      'swing_modes': list([
        'off',
        'horizontal',
        'vertical',
        'both',
        'Comfort Airflow',
        'Comfort Airflow and Horizontal',
      ]),
      'target_temp_step': 0.5,
      'temperature': 25,
    }),
    'context': <ANY>,
    'entity_id': 'climate.werkkamer_room_temperature',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[select.altherma_climatecontrol_schedule-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'User defined',
        'off',
      ]),
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': None,
    'entity_id': 'select.altherma_climatecontrol_schedule',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:calendar-clock',
    'original_name': 'ClimateControl Schedule',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_schedule',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[select.altherma_climatecontrol_schedule-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Schedule',
      'icon': 'mdi:calendar-clock',
      'options': list([
        'User defined',
        'off',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.altherma_climatecontrol_schedule',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[select.johnny_maaike_climatecontrol_schedule-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        '0',
        '1',
        '2',
        'off',
      ]),
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': None,
    'entity_id': 'select.johnny_maaike_climatecontrol_schedule',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:calendar-clock',
    'original_name': 'ClimateControl Schedule',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_schedule',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[select.johnny_maaike_climatecontrol_schedule-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Schedule',
      'icon': 'mdi:calendar-clock',
      'options': list([
        '0',
        '1',
        '2',
        'off',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.johnny_maaike_climatecontrol_schedule',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[select.linde_climatecontrol_schedule-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        '0',
        '1',
        '2',
        'off',
      ]),
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': None,
    'entity_id': 'select.linde_climatecontrol_schedule',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:calendar-clock',
    'original_name': 'ClimateControl Schedule',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_schedule',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[select.linde_climatecontrol_schedule-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Schedule',
      'icon': 'mdi:calendar-clock',
      'options': list([
        '0',
        '1',
        '2',
        'off',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.linde_climatecontrol_schedule',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[select.sanne_climatecontrol_schedule-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        '0',
        '1',
        '2',
        'off',
      ]),
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': None,
    'entity_id': 'select.sanne_climatecontrol_schedule',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:calendar-clock',
    'original_name': 'ClimateControl Schedule',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_schedule',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[select.sanne_climatecontrol_schedule-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Schedule',
      'icon': 'mdi:calendar-clock',
      'options': list([
        '0',
        '1',
        '2',
        'off',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.sanne_climatecontrol_schedule',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[select.werkkamer_climatecontrol_schedule-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        '0',
        '1',
        '2',
        'off',
      ]),
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': None,
    'entity_id': 'select.werkkamer_climatecontrol_schedule',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:calendar-clock',
    'original_name': 'ClimateControl Schedule',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_schedule',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[select.werkkamer_climatecontrol_schedule-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Schedule',
      'icon': 'mdi:calendar-clock',
      'options': list([
        '0',
        '1',
        '2',
        'off',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.werkkamer_climatecontrol_schedule',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[sensor.altherma_climatecontrol_control_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_control_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:alphabetical',
    'original_name': 'ClimateControl Control Mode',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_None_controlMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.altherma_climatecontrol_control_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Control Mode',
      'icon': 'mdi:alphabetical',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_control_mode',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'roomTemperature',
  })
# ---
# name: test_climate[sensor.altherma_climatecontrol_cooling_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_cooling_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_electrical_cooling_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_climate[sensor.altherma_climatecontrol_cooling_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Cooling Daily Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_cooling_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate[sensor.altherma_climatecontrol_cooling_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_cooling_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_electrical_cooling_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_climate[sensor.altherma_climatecontrol_cooling_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Cooling Weekly Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_cooling_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate[sensor.altherma_climatecontrol_cooling_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_cooling_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_electrical_cooling_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_climate[sensor.altherma_climatecontrol_cooling_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Cooling Yearly Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_cooling_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate[sensor.altherma_climatecontrol_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_climatecontrol_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Error Code',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.altherma_climatecontrol_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_error_code',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '-00',
  })
# ---
# name: test_climate[sensor.altherma_climatecontrol_heating_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_heating_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_electrical_heating_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_climate[sensor.altherma_climatecontrol_heating_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Heating Daily Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_heating_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate[sensor.altherma_climatecontrol_heating_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_heating_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_electrical_heating_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_climate[sensor.altherma_climatecontrol_heating_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Heating Weekly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_heating_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate[sensor.altherma_climatecontrol_heating_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_heating_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_electrical_heating_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_climate[sensor.altherma_climatecontrol_heating_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Heating Yearly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_heating_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '1252',
  })
# ---
# name: test_climate[sensor.altherma_climatecontrol_icon_id-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_climatecontrol_icon_id',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Icon Id',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_None_iconId',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.altherma_climatecontrol_icon_id-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Icon Id',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_icon_id',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '8',
  })
# ---
# name: test_climate[sensor.altherma_climatecontrol_leaving_water_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_leaving_water_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Leaving Water Temperature',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_sensoryData_leavingWaterTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_climate[sensor.altherma_climatecontrol_leaving_water_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Sanne ClimateControl Leaving Water Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_leaving_water_temperature',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '27',
  })
# ---
# name: test_climate[sensor.altherma_climatecontrol_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_climatecontrol_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Name',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.altherma_climatecontrol_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_name',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'Altherma',
  })
# ---
# name: test_climate[sensor.altherma_climatecontrol_outdoor_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_outdoor_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Outdoor Temperature',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_sensoryData_outdoorTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_climate[sensor.altherma_climatecontrol_outdoor_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Sanne ClimateControl Outdoor Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_outdoor_temperature',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '17',
  })
# ---
# name: test_climate[sensor.altherma_climatecontrol_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_room_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Room Temperature',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_sensoryData_roomTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_climate[sensor.altherma_climatecontrol_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Sanne ClimateControl Room Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_room_temperature',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '21',
  })
# ---
# name: test_climate[sensor.altherma_climatecontrol_setpoint_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_setpoint_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:alphabetical',
    'original_name': 'ClimateControl Setpoint Mode',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_None_setpointMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.altherma_climatecontrol_setpoint_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Setpoint Mode',
      'icon': 'mdi:alphabetical',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_setpoint_mode',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'weatherDependentHeatingFixedCooling',
  })
# ---
# name: test_climate[sensor.altherma_domestichotwatertank_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_domestichotwatertank_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Error Code',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.altherma_domestichotwatertank_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne DomesticHotWaterTank Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_domestichotwatertank_error_code',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '-00',
  })
# ---
# name: test_climate[sensor.altherma_domestichotwatertank_heating_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_domestichotwatertank_heating_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'DomesticHotWaterTank Heating Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_electrical_heating_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_climate[sensor.altherma_domestichotwatertank_heating_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne DomesticHotWaterTank Heating Daily Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_domestichotwatertank_heating_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate[sensor.altherma_domestichotwatertank_heating_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_domestichotwatertank_heating_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'DomesticHotWaterTank Heating Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_electrical_heating_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_climate[sensor.altherma_domestichotwatertank_heating_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne DomesticHotWaterTank Heating Weekly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_domestichotwatertank_heating_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '5',
  })
# ---
# name: test_climate[sensor.altherma_domestichotwatertank_heating_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_domestichotwatertank_heating_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'DomesticHotWaterTank Heating Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_electrical_heating_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_climate[sensor.altherma_domestichotwatertank_heating_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne DomesticHotWaterTank Heating Yearly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_domestichotwatertank_heating_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '515',
  })
# ---
# name: test_climate[sensor.altherma_domestichotwatertank_icon_id-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_domestichotwatertank_icon_id',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Icon Id',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_None_iconId',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.altherma_domestichotwatertank_icon_id-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne DomesticHotWaterTank Icon Id',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_domestichotwatertank_icon_id',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '9',
  })
# ---
# name: test_climate[sensor.altherma_domestichotwatertank_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_domestichotwatertank_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Name',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.altherma_domestichotwatertank_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne DomesticHotWaterTank Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_domestichotwatertank_name',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_climate[sensor.altherma_domestichotwatertank_setpoint_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_domestichotwatertank_setpoint_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:alphabetical',
    'original_name': 'DomesticHotWaterTank Setpoint Mode',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_None_setpointMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.altherma_domestichotwatertank_setpoint_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne DomesticHotWaterTank Setpoint Mode',
      'icon': 'mdi:alphabetical',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_domestichotwatertank_setpoint_mode',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'fixed',
  })
# ---
# name: test_climate[sensor.altherma_domestichotwatertank_tank_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_domestichotwatertank_tank_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': 'mdi:bathtub-outline',
    'original_name': 'DomesticHotWaterTank Tank Temperature',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_sensoryData_tankTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_climate[sensor.altherma_domestichotwatertank_tank_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Sanne DomesticHotWaterTank Tank Temperature',
      'icon': 'mdi:bathtub-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_domestichotwatertank_tank_temperature',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '48',
  })
# ---
# name: test_climate[sensor.altherma_gateway_firmware_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_gateway_firmware_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Firmware Version',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_gateway_None_firmwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.altherma_gateway_firmware_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Firmware Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_gateway_firmware_version',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '3.2.1',
  })
# ---
# name: test_climate[sensor.altherma_gateway_icon_id-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_gateway_icon_id',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Icon Id',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_gateway_None_iconId',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.altherma_gateway_icon_id-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Icon Id',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_gateway_icon_id',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '3',
  })
# ---
# name: test_climate[sensor.altherma_gateway_ip_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_gateway_ip_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:ip-network',
    'original_name': 'Gateway Ip Address',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_gateway_None_ipAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.altherma_gateway_ip_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Ip Address',
      'icon': 'mdi:ip-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_gateway_ip_address',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '192.168.1.207',
  })
# ---
# name: test_climate[sensor.altherma_gateway_mac_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_gateway_mac_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Mac Address',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_gateway_None_macAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.altherma_gateway_mac_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Mac Address',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_gateway_mac_address',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_climate[sensor.altherma_gateway_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_gateway_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Model Info',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_gateway_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.altherma_gateway_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_gateway_model_info',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'BRP069A78',
  })
# ---
# name: test_climate[sensor.altherma_gateway_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_gateway_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Name',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_gateway_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.altherma_gateway_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_gateway_name',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'Gateway',
  })
# ---
# name: test_climate[sensor.altherma_gateway_serial_number-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_gateway_serial_number',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:numeric',
    'original_name': 'Gateway Serial Number',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_gateway_None_serialNumber',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.altherma_gateway_serial_number-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Serial Number',
      'icon': 'mdi:numeric',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_gateway_serial_number',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0023085',
  })
# ---
# name: test_climate[sensor.altherma_gateway_ssid-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_gateway_ssid',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:access-point-network',
    'original_name': 'Gateway Ssid',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_gateway_None_ssid',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.altherma_gateway_ssid-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Ssid',
      'icon': 'mdi:access-point-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_gateway_ssid',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'daikin-ap',
  })
# ---
# name: test_climate[sensor.altherma_gateway_wifi_connection_s_s_i_d-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_gateway_wifi_connection_s_s_i_d',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:access-point-network',
    'original_name': 'Gateway Wifi Connection S S I D',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_gateway_None_wifiConnectionSSID',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.altherma_gateway_wifi_connection_s_s_i_d-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Wifi Connection S S I D',
      'icon': 'mdi:access-point-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_gateway_wifi_connection_s_s_i_d',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'WILLEMSEN',
  })
# ---
# name: test_climate[sensor.altherma_gateway_wifi_connection_strength-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_gateway_wifi_connection_strength',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.SIGNAL_STRENGTH: 'signal_strength'>,
    'original_icon': 'mdi:wifi',
    'original_name': 'Gateway Wifi Connection Strength',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_gateway_None_wifiConnectionStrength',
    'unit_of_measurement': 'dBm',
  })
# ---
# name: test_climate[sensor.altherma_gateway_wifi_connection_strength-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'signal_strength',
      'friendly_name': 'Sanne Gateway Wifi Connection Strength',
      'icon': 'mdi:wifi',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': 'dBm',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_gateway_wifi_connection_strength',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '-81',
  })
# ---
# name: test_climate[sensor.altherma_indoorunithydro_eeprom_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_indoorunithydro_eeprom_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnitHydro Eeprom Version',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_indoorUnitHydro_None_eepromVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.altherma_indoorunithydro_eeprom_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne IndoorUnitHydro Eeprom Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_indoorunithydro_eeprom_version',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '3608726-74',
  })
# ---
# name: test_climate[sensor.altherma_indoorunithydro_icon_id-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_indoorunithydro_icon_id',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnitHydro Icon Id',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_indoorUnitHydro_None_iconId',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.altherma_indoorunithydro_icon_id-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne IndoorUnitHydro Icon Id',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_indoorunithydro_icon_id',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '4',
  })
# ---
# name: test_climate[sensor.altherma_indoorunithydro_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_indoorunithydro_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnitHydro Model Info',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_indoorUnitHydro_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.altherma_indoorunithydro_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne IndoorUnitHydro Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_indoorunithydro_model_info',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'EHVX08S23EJ9W',
  })
# ---
# name: test_climate[sensor.altherma_indoorunithydro_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_indoorunithydro_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnitHydro Name',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_indoorUnitHydro_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.altherma_indoorunithydro_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne IndoorUnitHydro Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_indoorunithydro_name',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'Indoor Hydro Unit',
  })
# ---
# name: test_climate[sensor.altherma_indoorunithydro_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_indoorunithydro_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnitHydro Software Version',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_indoorUnitHydro_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.altherma_indoorunithydro_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne IndoorUnitHydro Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_indoorunithydro_software_version',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0221',
  })
# ---
# name: test_climate[sensor.altherma_outdoorunit_icon_id-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_outdoorunit_icon_id',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Icon Id',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_outdoorUnit_None_iconId',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.altherma_outdoorunit_icon_id-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne OutdoorUnit Icon Id',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_outdoorunit_icon_id',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '5',
  })
# ---
# name: test_climate[sensor.altherma_outdoorunit_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_outdoorunit_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Model Info',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_outdoorUnit_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.altherma_outdoorunit_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne OutdoorUnit Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_outdoorunit_model_info',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_climate[sensor.altherma_outdoorunit_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_outdoorunit_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Name',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_outdoorUnit_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.altherma_outdoorunit_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne OutdoorUnit Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_outdoorunit_name',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'Outdoor Unit',
  })
# ---
# name: test_climate[sensor.altherma_outdoorunit_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_outdoorunit_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Software Version',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_outdoorUnit_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.altherma_outdoorunit_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne OutdoorUnit Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_outdoorunit_software_version',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'FFFF',
  })
# ---
# name: test_climate[sensor.altherma_ratelimit_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_ratelimit_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit day',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_limitsensor_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.altherma_ratelimit_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_ratelimit_day',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate[sensor.altherma_ratelimit_minute-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_ratelimit_minute',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit minute',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_limitsensor_minute',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.altherma_ratelimit_minute-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit minute',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_ratelimit_minute',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate[sensor.altherma_ratelimit_ratelimit_reset-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_ratelimit_ratelimit_reset',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit ratelimit_reset',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_limitsensor_ratelimit_reset',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.altherma_ratelimit_ratelimit_reset-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit ratelimit_reset',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_ratelimit_ratelimit_reset',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate[sensor.altherma_ratelimit_remaining_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_ratelimit_remaining_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_day',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_limitsensor_remaining_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.altherma_ratelimit_remaining_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit remaining_day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_ratelimit_remaining_day',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate[sensor.altherma_ratelimit_remaining_minutes-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_ratelimit_remaining_minutes',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_minutes',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_limitsensor_remaining_minutes',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.altherma_ratelimit_remaining_minutes-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit remaining_minutes',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_ratelimit_remaining_minutes',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate[sensor.altherma_ratelimit_retry_after-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_ratelimit_retry_after',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit retry_after',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_limitsensor_retry_after',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.altherma_ratelimit_retry_after-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit retry_after',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_ratelimit_retry_after',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate[sensor.altherma_userinterface_date_time-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_userinterface_date_time',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'UserInterface Date Time',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_userInterface_None_dateTime',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.altherma_userinterface_date_time-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne UserInterface Date Time',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_userinterface_date_time',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '2022-06-01T09:17:49',
  })
# ---
# name: test_climate[sensor.altherma_userinterface_firmware_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_userinterface_firmware_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'UserInterface Firmware Version',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_userInterface_None_firmwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.altherma_userinterface_firmware_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne UserInterface Firmware Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_userinterface_firmware_version',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '6.3.0',
  })
# ---
# name: test_climate[sensor.altherma_userinterface_icon_id-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_userinterface_icon_id',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'UserInterface Icon Id',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_userInterface_None_iconId',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.altherma_userinterface_icon_id-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne UserInterface Icon Id',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_userinterface_icon_id',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '6',
  })
# ---
# name: test_climate[sensor.altherma_userinterface_micon_id-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_userinterface_micon_id',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'UserInterface Micon Id',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_userInterface_None_miconId',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.altherma_userinterface_micon_id-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne UserInterface Micon Id',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_userinterface_micon_id',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '20010E02',
  })
# ---
# name: test_climate[sensor.altherma_userinterface_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_userinterface_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'UserInterface Name',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_userInterface_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.altherma_userinterface_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne UserInterface Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_userinterface_name',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'User Interface',
  })
# ---
# name: test_climate[sensor.altherma_userinterface_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_userinterface_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'UserInterface Software Version',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_userInterface_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.altherma_userinterface_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne UserInterface Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_userinterface_software_version',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '6.3.0',
  })
# ---
# name: test_climate[sensor.johnny_maaike_climatecontrol_cooling_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_cooling_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_electrical_cooling_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_climate[sensor.johnny_maaike_climatecontrol_cooling_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Cooling Daily Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_cooling_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate[sensor.johnny_maaike_climatecontrol_cooling_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_cooling_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_electrical_cooling_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_climate[sensor.johnny_maaike_climatecontrol_cooling_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Cooling Weekly Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_cooling_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0.2',
  })
# ---
# name: test_climate[sensor.johnny_maaike_climatecontrol_cooling_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_cooling_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_electrical_cooling_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_climate[sensor.johnny_maaike_climatecontrol_cooling_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Cooling Yearly Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_cooling_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '6.6',
  })
# ---
# name: test_climate[sensor.johnny_maaike_climatecontrol_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Error Code',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.johnny_maaike_climatecontrol_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_error_code',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '00-',
  })
# ---
# name: test_climate[sensor.johnny_maaike_climatecontrol_heating_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_heating_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_electrical_heating_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_climate[sensor.johnny_maaike_climatecontrol_heating_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Heating Daily Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_heating_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate[sensor.johnny_maaike_climatecontrol_heating_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_heating_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_electrical_heating_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_climate[sensor.johnny_maaike_climatecontrol_heating_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Heating Weekly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_heating_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate[sensor.johnny_maaike_climatecontrol_heating_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_heating_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_electrical_heating_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_climate[sensor.johnny_maaike_climatecontrol_heating_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Heating Yearly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_heating_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '11.5',
  })
# ---
# name: test_climate[sensor.johnny_maaike_climatecontrol_icon_id-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_icon_id',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Icon Id',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_None_iconId',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.johnny_maaike_climatecontrol_icon_id-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Icon Id',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_icon_id',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '15',
  })
# ---
# name: test_climate[sensor.johnny_maaike_climatecontrol_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Name',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.johnny_maaike_climatecontrol_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_name',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'Johnny&Maaike',
  })
# ---
# name: test_climate[sensor.johnny_maaike_climatecontrol_outdoor_silent_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_outdoor_silent_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'ClimateControl Outdoor Silent Mode',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_None_outdoorSilentMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.johnny_maaike_climatecontrol_outdoor_silent_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Outdoor Silent Mode',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_outdoor_silent_mode',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[sensor.johnny_maaike_climatecontrol_outdoor_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_outdoor_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Outdoor Temperature',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_sensoryData_outdoorTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_climate[sensor.johnny_maaike_climatecontrol_outdoor_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Sanne ClimateControl Outdoor Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_outdoor_temperature',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '13.5',
  })
# ---
# name: test_climate[sensor.johnny_maaike_climatecontrol_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_room_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Room Temperature',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_sensoryData_roomTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_climate[sensor.johnny_maaike_climatecontrol_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Sanne ClimateControl Room Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_room_temperature',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '19',
  })
# ---
# name: test_climate[sensor.johnny_maaike_gateway_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_gateway_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Error Code',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_gateway_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.johnny_maaike_gateway_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_gateway_error_code',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_climate[sensor.johnny_maaike_gateway_firmware_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_gateway_firmware_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Firmware Version',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_gateway_None_firmwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.johnny_maaike_gateway_firmware_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Firmware Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_gateway_firmware_version',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '1_12_51',
  })
# ---
# name: test_climate[sensor.johnny_maaike_gateway_mac_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_gateway_mac_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Mac Address',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_gateway_None_macAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.johnny_maaike_gateway_mac_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Mac Address',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_gateway_mac_address',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_climate[sensor.johnny_maaike_gateway_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_gateway_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Model Info',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_gateway_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.johnny_maaike_gateway_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_gateway_model_info',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'BRP069C4x',
  })
# ---
# name: test_climate[sensor.johnny_maaike_gateway_region_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_gateway_region_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Region Code',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_gateway_None_regionCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.johnny_maaike_gateway_region_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Region Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_gateway_region_code',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'eu',
  })
# ---
# name: test_climate[sensor.johnny_maaike_gateway_serial_number-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_gateway_serial_number',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:numeric',
    'original_name': 'Gateway Serial Number',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_gateway_None_serialNumber',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.johnny_maaike_gateway_serial_number-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Serial Number',
      'icon': 'mdi:numeric',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_gateway_serial_number',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0000000002641374',
  })
# ---
# name: test_climate[sensor.johnny_maaike_gateway_ssid-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_gateway_ssid',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:access-point-network',
    'original_name': 'Gateway Ssid',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_gateway_None_ssid',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.johnny_maaike_gateway_ssid-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Ssid',
      'icon': 'mdi:access-point-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_gateway_ssid',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'DaikinAP83731',
  })
# ---
# name: test_climate[sensor.johnny_maaike_gateway_time_zone-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_gateway_time_zone',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Time Zone',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_gateway_None_timeZone',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.johnny_maaike_gateway_time_zone-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Time Zone',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_gateway_time_zone',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'Europe/Amsterdam',
  })
# ---
# name: test_climate[sensor.johnny_maaike_gateway_wifi_connection_s_s_i_d-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_gateway_wifi_connection_s_s_i_d',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:access-point-network',
    'original_name': 'Gateway Wifi Connection S S I D',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_gateway_None_wifiConnectionSSID',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.johnny_maaike_gateway_wifi_connection_s_s_i_d-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Wifi Connection S S I D',
      'icon': 'mdi:access-point-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_gateway_wifi_connection_s_s_i_d',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'WILLEMSEN',
  })
# ---
# name: test_climate[sensor.johnny_maaike_gateway_wifi_connection_strength-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_gateway_wifi_connection_strength',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.SIGNAL_STRENGTH: 'signal_strength'>,
    'original_icon': 'mdi:wifi',
    'original_name': 'Gateway Wifi Connection Strength',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_gateway_None_wifiConnectionStrength',
    'unit_of_measurement': 'dBm',
  })
# ---
# name: test_climate[sensor.johnny_maaike_gateway_wifi_connection_strength-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'signal_strength',
      'friendly_name': 'Sanne Gateway Wifi Connection Strength',
      'icon': 'mdi:wifi',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': 'dBm',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_gateway_wifi_connection_strength',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '-47',
  })
# ---
# name: test_climate[sensor.johnny_maaike_indoorunit_dry_keep_setting-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.johnny_maaike_indoorunit_dry_keep_setting',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:water-percent',
    'original_name': 'IndoorUnit Dry Keep Setting',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_indoorUnit_None_dryKeepSetting',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.johnny_maaike_indoorunit_dry_keep_setting-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne IndoorUnit Dry Keep Setting',
      'icon': 'mdi:water-percent',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_indoorunit_dry_keep_setting',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_climate[sensor.johnny_maaike_indoorunit_eeprom_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_indoorunit_eeprom_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Eeprom Version',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_indoorUnit_None_eepromVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.johnny_maaike_indoorunit_eeprom_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne IndoorUnit Eeprom Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_indoorunit_eeprom_version',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '12FC',
  })
# ---
# name: test_climate[sensor.johnny_maaike_indoorunit_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_indoorunit_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Software Version',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_indoorUnit_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.johnny_maaike_indoorunit_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne IndoorUnit Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_indoorunit_software_version',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '20003001',
  })
# ---
# name: test_climate[sensor.johnny_maaike_outdoorunit_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_outdoorunit_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Error Code',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_outdoorUnit_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.johnny_maaike_outdoorunit_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne OutdoorUnit Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_outdoorunit_error_code',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '00-',
  })
# ---
# name: test_climate[sensor.johnny_maaike_ratelimit_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_ratelimit_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit day',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_limitsensor_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.johnny_maaike_ratelimit_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_ratelimit_day',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate[sensor.johnny_maaike_ratelimit_minute-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_ratelimit_minute',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit minute',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_limitsensor_minute',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.johnny_maaike_ratelimit_minute-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit minute',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_ratelimit_minute',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate[sensor.johnny_maaike_ratelimit_ratelimit_reset-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_ratelimit_ratelimit_reset',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit ratelimit_reset',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_limitsensor_ratelimit_reset',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.johnny_maaike_ratelimit_ratelimit_reset-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit ratelimit_reset',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_ratelimit_ratelimit_reset',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate[sensor.johnny_maaike_ratelimit_remaining_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_ratelimit_remaining_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_day',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_limitsensor_remaining_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.johnny_maaike_ratelimit_remaining_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit remaining_day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_ratelimit_remaining_day',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate[sensor.johnny_maaike_ratelimit_remaining_minutes-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_ratelimit_remaining_minutes',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_minutes',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_limitsensor_remaining_minutes',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.johnny_maaike_ratelimit_remaining_minutes-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit remaining_minutes',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_ratelimit_remaining_minutes',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate[sensor.johnny_maaike_ratelimit_retry_after-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_ratelimit_retry_after',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit retry_after',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_limitsensor_retry_after',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.johnny_maaike_ratelimit_retry_after-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit retry_after',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_ratelimit_retry_after',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate[sensor.linde_climatecontrol_cooling_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.linde_climatecontrol_cooling_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_electrical_cooling_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_climate[sensor.linde_climatecontrol_cooling_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Cooling Daily Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_climatecontrol_cooling_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate[sensor.linde_climatecontrol_cooling_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.linde_climatecontrol_cooling_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_electrical_cooling_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_climate[sensor.linde_climatecontrol_cooling_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Cooling Weekly Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_climatecontrol_cooling_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0.3',
  })
# ---
# name: test_climate[sensor.linde_climatecontrol_cooling_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.linde_climatecontrol_cooling_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_electrical_cooling_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_climate[sensor.linde_climatecontrol_cooling_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Cooling Yearly Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_climatecontrol_cooling_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '1.6',
  })
# ---
# name: test_climate[sensor.linde_climatecontrol_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_climatecontrol_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Error Code',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.linde_climatecontrol_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_climatecontrol_error_code',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '00-',
  })
# ---
# name: test_climate[sensor.linde_climatecontrol_heating_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.linde_climatecontrol_heating_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_electrical_heating_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_climate[sensor.linde_climatecontrol_heating_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Heating Daily Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_climatecontrol_heating_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate[sensor.linde_climatecontrol_heating_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.linde_climatecontrol_heating_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_electrical_heating_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_climate[sensor.linde_climatecontrol_heating_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Heating Weekly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_climatecontrol_heating_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate[sensor.linde_climatecontrol_heating_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.linde_climatecontrol_heating_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_electrical_heating_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_climate[sensor.linde_climatecontrol_heating_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Heating Yearly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_climatecontrol_heating_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '18.7',
  })
# ---
# name: test_climate[sensor.linde_climatecontrol_icon_id-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_climatecontrol_icon_id',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Icon Id',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_None_iconId',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.linde_climatecontrol_icon_id-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Icon Id',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_climatecontrol_icon_id',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '15',
  })
# ---
# name: test_climate[sensor.linde_climatecontrol_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_climatecontrol_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Name',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.linde_climatecontrol_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_climatecontrol_name',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'Linde',
  })
# ---
# name: test_climate[sensor.linde_climatecontrol_outdoor_silent_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.linde_climatecontrol_outdoor_silent_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'ClimateControl Outdoor Silent Mode',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_None_outdoorSilentMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.linde_climatecontrol_outdoor_silent_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Outdoor Silent Mode',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_climatecontrol_outdoor_silent_mode',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[sensor.linde_climatecontrol_outdoor_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.linde_climatecontrol_outdoor_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Outdoor Temperature',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_sensoryData_outdoorTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_climate[sensor.linde_climatecontrol_outdoor_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Sanne ClimateControl Outdoor Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_climatecontrol_outdoor_temperature',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '13.5',
  })
# ---
# name: test_climate[sensor.linde_climatecontrol_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.linde_climatecontrol_room_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Room Temperature',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_sensoryData_roomTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_climate[sensor.linde_climatecontrol_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Sanne ClimateControl Room Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_climatecontrol_room_temperature',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '18',
  })
# ---
# name: test_climate[sensor.linde_gateway_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_gateway_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Error Code',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_gateway_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.linde_gateway_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_gateway_error_code',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_climate[sensor.linde_gateway_firmware_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_gateway_firmware_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Firmware Version',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_gateway_None_firmwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.linde_gateway_firmware_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Firmware Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_gateway_firmware_version',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '1_12_84',
  })
# ---
# name: test_climate[sensor.linde_gateway_mac_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_gateway_mac_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Mac Address',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_gateway_None_macAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.linde_gateway_mac_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Mac Address',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_gateway_mac_address',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_climate[sensor.linde_gateway_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_gateway_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Model Info',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_gateway_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.linde_gateway_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_gateway_model_info',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'BRP069C4x',
  })
# ---
# name: test_climate[sensor.linde_gateway_region_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_gateway_region_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Region Code',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_gateway_None_regionCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.linde_gateway_region_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Region Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_gateway_region_code',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'eu',
  })
# ---
# name: test_climate[sensor.linde_gateway_serial_number-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_gateway_serial_number',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:numeric',
    'original_name': 'Gateway Serial Number',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_gateway_None_serialNumber',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.linde_gateway_serial_number-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Serial Number',
      'icon': 'mdi:numeric',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_gateway_serial_number',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0000000002404589',
  })
# ---
# name: test_climate[sensor.linde_gateway_ssid-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_gateway_ssid',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:access-point-network',
    'original_name': 'Gateway Ssid',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_gateway_None_ssid',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.linde_gateway_ssid-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Ssid',
      'icon': 'mdi:access-point-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_gateway_ssid',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'DaikinAP66051',
  })
# ---
# name: test_climate[sensor.linde_gateway_time_zone-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_gateway_time_zone',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Time Zone',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_gateway_None_timeZone',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.linde_gateway_time_zone-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Time Zone',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_gateway_time_zone',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'Europe/Amsterdam',
  })
# ---
# name: test_climate[sensor.linde_gateway_wifi_connection_s_s_i_d-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_gateway_wifi_connection_s_s_i_d',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:access-point-network',
    'original_name': 'Gateway Wifi Connection S S I D',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_gateway_None_wifiConnectionSSID',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.linde_gateway_wifi_connection_s_s_i_d-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Wifi Connection S S I D',
      'icon': 'mdi:access-point-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_gateway_wifi_connection_s_s_i_d',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'WILLEMSEN',
  })
# ---
# name: test_climate[sensor.linde_gateway_wifi_connection_strength-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_gateway_wifi_connection_strength',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.SIGNAL_STRENGTH: 'signal_strength'>,
    'original_icon': 'mdi:wifi',
    'original_name': 'Gateway Wifi Connection Strength',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_gateway_None_wifiConnectionStrength',
    'unit_of_measurement': 'dBm',
  })
# ---
# name: test_climate[sensor.linde_gateway_wifi_connection_strength-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'signal_strength',
      'friendly_name': 'Sanne Gateway Wifi Connection Strength',
      'icon': 'mdi:wifi',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': 'dBm',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_gateway_wifi_connection_strength',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '-48',
  })
# ---
# name: test_climate[sensor.linde_indoorunit_dry_keep_setting-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.linde_indoorunit_dry_keep_setting',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:water-percent',
    'original_name': 'IndoorUnit Dry Keep Setting',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_indoorUnit_None_dryKeepSetting',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.linde_indoorunit_dry_keep_setting-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne IndoorUnit Dry Keep Setting',
      'icon': 'mdi:water-percent',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_indoorunit_dry_keep_setting',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_climate[sensor.linde_indoorunit_eeprom_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_indoorunit_eeprom_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Eeprom Version',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_indoorUnit_None_eepromVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.linde_indoorunit_eeprom_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne IndoorUnit Eeprom Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_indoorunit_eeprom_version',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '12FD',
  })
# ---
# name: test_climate[sensor.linde_indoorunit_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_indoorunit_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Software Version',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_indoorUnit_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.linde_indoorunit_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne IndoorUnit Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_indoorunit_software_version',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '20003001',
  })
# ---
# name: test_climate[sensor.linde_outdoorunit_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_outdoorunit_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Error Code',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_outdoorUnit_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.linde_outdoorunit_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne OutdoorUnit Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_outdoorunit_error_code',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '00-',
  })
# ---
# name: test_climate[sensor.linde_ratelimit_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_ratelimit_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit day',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_limitsensor_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.linde_ratelimit_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_ratelimit_day',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate[sensor.linde_ratelimit_minute-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_ratelimit_minute',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit minute',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_limitsensor_minute',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.linde_ratelimit_minute-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit minute',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_ratelimit_minute',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate[sensor.linde_ratelimit_ratelimit_reset-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_ratelimit_ratelimit_reset',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit ratelimit_reset',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_limitsensor_ratelimit_reset',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.linde_ratelimit_ratelimit_reset-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit ratelimit_reset',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_ratelimit_ratelimit_reset',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate[sensor.linde_ratelimit_remaining_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_ratelimit_remaining_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_day',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_limitsensor_remaining_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.linde_ratelimit_remaining_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit remaining_day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_ratelimit_remaining_day',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate[sensor.linde_ratelimit_remaining_minutes-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_ratelimit_remaining_minutes',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_minutes',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_limitsensor_remaining_minutes',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.linde_ratelimit_remaining_minutes-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit remaining_minutes',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_ratelimit_remaining_minutes',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate[sensor.linde_ratelimit_retry_after-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_ratelimit_retry_after',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit retry_after',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_limitsensor_retry_after',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.linde_ratelimit_retry_after-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit retry_after',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_ratelimit_retry_after',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate[sensor.sanne_climatecontrol_cooling_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sanne_climatecontrol_cooling_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_electrical_cooling_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_climate[sensor.sanne_climatecontrol_cooling_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Cooling Daily Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_climatecontrol_cooling_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate[sensor.sanne_climatecontrol_cooling_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sanne_climatecontrol_cooling_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_electrical_cooling_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_climate[sensor.sanne_climatecontrol_cooling_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Cooling Weekly Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_climatecontrol_cooling_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0.3',
  })
# ---
# name: test_climate[sensor.sanne_climatecontrol_cooling_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sanne_climatecontrol_cooling_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_electrical_cooling_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_climate[sensor.sanne_climatecontrol_cooling_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Cooling Yearly Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_climatecontrol_cooling_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '1.6',
  })
# ---
# name: test_climate[sensor.sanne_climatecontrol_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_climatecontrol_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Error Code',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.sanne_climatecontrol_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_climatecontrol_error_code',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '00-',
  })
# ---
# name: test_climate[sensor.sanne_climatecontrol_heating_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sanne_climatecontrol_heating_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_electrical_heating_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_climate[sensor.sanne_climatecontrol_heating_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Heating Daily Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_climatecontrol_heating_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate[sensor.sanne_climatecontrol_heating_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sanne_climatecontrol_heating_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_electrical_heating_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_climate[sensor.sanne_climatecontrol_heating_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Heating Weekly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_climatecontrol_heating_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate[sensor.sanne_climatecontrol_heating_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sanne_climatecontrol_heating_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_electrical_heating_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_climate[sensor.sanne_climatecontrol_heating_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Heating Yearly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_climatecontrol_heating_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '31.5',
  })
# ---
# name: test_climate[sensor.sanne_climatecontrol_icon_id-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_climatecontrol_icon_id',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Icon Id',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_None_iconId',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.sanne_climatecontrol_icon_id-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Icon Id',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_climatecontrol_icon_id',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '15',
  })
# ---
# name: test_climate[sensor.sanne_climatecontrol_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_climatecontrol_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Name',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.sanne_climatecontrol_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_climatecontrol_name',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'Sanne',
  })
# ---
# name: test_climate[sensor.sanne_climatecontrol_outdoor_silent_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sanne_climatecontrol_outdoor_silent_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'ClimateControl Outdoor Silent Mode',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_None_outdoorSilentMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.sanne_climatecontrol_outdoor_silent_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Outdoor Silent Mode',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_climatecontrol_outdoor_silent_mode',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[sensor.sanne_climatecontrol_outdoor_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sanne_climatecontrol_outdoor_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Outdoor Temperature',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_sensoryData_outdoorTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_climate[sensor.sanne_climatecontrol_outdoor_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Sanne ClimateControl Outdoor Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_climatecontrol_outdoor_temperature',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '13.5',
  })
# ---
# name: test_climate[sensor.sanne_climatecontrol_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sanne_climatecontrol_room_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Room Temperature',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_sensoryData_roomTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_climate[sensor.sanne_climatecontrol_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Sanne ClimateControl Room Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_climatecontrol_room_temperature',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '19',
  })
# ---
# name: test_climate[sensor.sanne_gateway_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_gateway_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Error Code',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_gateway_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.sanne_gateway_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_gateway_error_code',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_climate[sensor.sanne_gateway_firmware_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_gateway_firmware_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Firmware Version',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_gateway_None_firmwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.sanne_gateway_firmware_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Firmware Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_gateway_firmware_version',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '1_12_51',
  })
# ---
# name: test_climate[sensor.sanne_gateway_mac_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_gateway_mac_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Mac Address',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_gateway_None_macAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.sanne_gateway_mac_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Mac Address',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_gateway_mac_address',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_climate[sensor.sanne_gateway_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_gateway_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Model Info',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_gateway_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.sanne_gateway_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_gateway_model_info',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'BRP069C4x',
  })
# ---
# name: test_climate[sensor.sanne_gateway_region_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_gateway_region_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Region Code',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_gateway_None_regionCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.sanne_gateway_region_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Region Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_gateway_region_code',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'eu',
  })
# ---
# name: test_climate[sensor.sanne_gateway_serial_number-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_gateway_serial_number',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:numeric',
    'original_name': 'Gateway Serial Number',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_gateway_None_serialNumber',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.sanne_gateway_serial_number-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Serial Number',
      'icon': 'mdi:numeric',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_gateway_serial_number',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0000000002405236',
  })
# ---
# name: test_climate[sensor.sanne_gateway_ssid-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_gateway_ssid',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:access-point-network',
    'original_name': 'Gateway Ssid',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_gateway_None_ssid',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.sanne_gateway_ssid-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Ssid',
      'icon': 'mdi:access-point-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_gateway_ssid',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'DaikinAP22483',
  })
# ---
# name: test_climate[sensor.sanne_gateway_time_zone-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_gateway_time_zone',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Time Zone',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_gateway_None_timeZone',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.sanne_gateway_time_zone-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Time Zone',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_gateway_time_zone',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'Europe/Amsterdam',
  })
# ---
# name: test_climate[sensor.sanne_gateway_wifi_connection_s_s_i_d-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_gateway_wifi_connection_s_s_i_d',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:access-point-network',
    'original_name': 'Gateway Wifi Connection S S I D',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_gateway_None_wifiConnectionSSID',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.sanne_gateway_wifi_connection_s_s_i_d-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Wifi Connection S S I D',
      'icon': 'mdi:access-point-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_gateway_wifi_connection_s_s_i_d',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'WILLEMSEN',
  })
# ---
# name: test_climate[sensor.sanne_gateway_wifi_connection_strength-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_gateway_wifi_connection_strength',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.SIGNAL_STRENGTH: 'signal_strength'>,
    'original_icon': 'mdi:wifi',
    'original_name': 'Gateway Wifi Connection Strength',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_gateway_None_wifiConnectionStrength',
    'unit_of_measurement': 'dBm',
  })
# ---
# name: test_climate[sensor.sanne_gateway_wifi_connection_strength-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'signal_strength',
      'friendly_name': 'Sanne Gateway Wifi Connection Strength',
      'icon': 'mdi:wifi',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': 'dBm',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_gateway_wifi_connection_strength',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '-35',
  })
# ---
# name: test_climate[sensor.sanne_indoorunit_dry_keep_setting-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sanne_indoorunit_dry_keep_setting',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:water-percent',
    'original_name': 'IndoorUnit Dry Keep Setting',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_indoorUnit_None_dryKeepSetting',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.sanne_indoorunit_dry_keep_setting-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne IndoorUnit Dry Keep Setting',
      'icon': 'mdi:water-percent',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_indoorunit_dry_keep_setting',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_climate[sensor.sanne_indoorunit_eeprom_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_indoorunit_eeprom_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Eeprom Version',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_indoorUnit_None_eepromVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.sanne_indoorunit_eeprom_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne IndoorUnit Eeprom Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_indoorunit_eeprom_version',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '12FD',
  })
# ---
# name: test_climate[sensor.sanne_indoorunit_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_indoorunit_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Software Version',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_indoorUnit_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.sanne_indoorunit_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne IndoorUnit Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_indoorunit_software_version',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '20003001',
  })
# ---
# name: test_climate[sensor.sanne_outdoorunit_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_outdoorunit_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Error Code',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_outdoorUnit_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.sanne_outdoorunit_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne OutdoorUnit Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_outdoorunit_error_code',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '00-',
  })
# ---
# name: test_climate[sensor.sanne_ratelimit_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_ratelimit_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit day',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_limitsensor_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.sanne_ratelimit_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_ratelimit_day',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate[sensor.sanne_ratelimit_minute-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_ratelimit_minute',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit minute',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_limitsensor_minute',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.sanne_ratelimit_minute-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit minute',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_ratelimit_minute',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate[sensor.sanne_ratelimit_ratelimit_reset-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_ratelimit_ratelimit_reset',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit ratelimit_reset',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_limitsensor_ratelimit_reset',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.sanne_ratelimit_ratelimit_reset-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit ratelimit_reset',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_ratelimit_ratelimit_reset',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate[sensor.sanne_ratelimit_remaining_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_ratelimit_remaining_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_day',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_limitsensor_remaining_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.sanne_ratelimit_remaining_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit remaining_day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_ratelimit_remaining_day',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate[sensor.sanne_ratelimit_remaining_minutes-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_ratelimit_remaining_minutes',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_minutes',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_limitsensor_remaining_minutes',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.sanne_ratelimit_remaining_minutes-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit remaining_minutes',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_ratelimit_remaining_minutes',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate[sensor.sanne_ratelimit_retry_after-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_ratelimit_retry_after',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit retry_after',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_limitsensor_retry_after',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.sanne_ratelimit_retry_after-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit retry_after',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_ratelimit_retry_after',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate[sensor.werkkamer_climatecontrol_cooling_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.werkkamer_climatecontrol_cooling_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_electrical_cooling_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_climate[sensor.werkkamer_climatecontrol_cooling_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Cooling Daily Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_climatecontrol_cooling_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0.1',
  })
# ---
# name: test_climate[sensor.werkkamer_climatecontrol_cooling_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.werkkamer_climatecontrol_cooling_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_electrical_cooling_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_climate[sensor.werkkamer_climatecontrol_cooling_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Cooling Weekly Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_climatecontrol_cooling_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0.3',
  })
# ---
# name: test_climate[sensor.werkkamer_climatecontrol_cooling_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.werkkamer_climatecontrol_cooling_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_electrical_cooling_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_climate[sensor.werkkamer_climatecontrol_cooling_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Cooling Yearly Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_climatecontrol_cooling_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '1.6',
  })
# ---
# name: test_climate[sensor.werkkamer_climatecontrol_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_climatecontrol_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Error Code',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.werkkamer_climatecontrol_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_climatecontrol_error_code',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '00-',
  })
# ---
# name: test_climate[sensor.werkkamer_climatecontrol_heating_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.werkkamer_climatecontrol_heating_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_electrical_heating_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_climate[sensor.werkkamer_climatecontrol_heating_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Heating Daily Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_climatecontrol_heating_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate[sensor.werkkamer_climatecontrol_heating_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.werkkamer_climatecontrol_heating_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_electrical_heating_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_climate[sensor.werkkamer_climatecontrol_heating_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Heating Weekly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_climatecontrol_heating_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate[sensor.werkkamer_climatecontrol_heating_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.werkkamer_climatecontrol_heating_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_electrical_heating_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_climate[sensor.werkkamer_climatecontrol_heating_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Heating Yearly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_climatecontrol_heating_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '22.5',
  })
# ---
# name: test_climate[sensor.werkkamer_climatecontrol_icon_id-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_climatecontrol_icon_id',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Icon Id',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_None_iconId',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.werkkamer_climatecontrol_icon_id-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Icon Id',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_climatecontrol_icon_id',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '15',
  })
# ---
# name: test_climate[sensor.werkkamer_climatecontrol_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_climatecontrol_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Name',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.werkkamer_climatecontrol_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_climatecontrol_name',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'Werkkamer',
  })
# ---
# name: test_climate[sensor.werkkamer_climatecontrol_outdoor_silent_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.werkkamer_climatecontrol_outdoor_silent_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'ClimateControl Outdoor Silent Mode',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_None_outdoorSilentMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.werkkamer_climatecontrol_outdoor_silent_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Outdoor Silent Mode',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_climatecontrol_outdoor_silent_mode',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[sensor.werkkamer_climatecontrol_outdoor_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.werkkamer_climatecontrol_outdoor_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Outdoor Temperature',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_sensoryData_outdoorTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_climate[sensor.werkkamer_climatecontrol_outdoor_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Sanne ClimateControl Outdoor Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_climatecontrol_outdoor_temperature',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '13.5',
  })
# ---
# name: test_climate[sensor.werkkamer_climatecontrol_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.werkkamer_climatecontrol_room_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Room Temperature',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_sensoryData_roomTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_climate[sensor.werkkamer_climatecontrol_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Sanne ClimateControl Room Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_climatecontrol_room_temperature',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '19',
  })
# ---
# name: test_climate[sensor.werkkamer_gateway_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_gateway_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Error Code',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_gateway_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.werkkamer_gateway_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_gateway_error_code',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_climate[sensor.werkkamer_gateway_firmware_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_gateway_firmware_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Firmware Version',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_gateway_None_firmwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.werkkamer_gateway_firmware_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Firmware Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_gateway_firmware_version',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '1_12_51',
  })
# ---
# name: test_climate[sensor.werkkamer_gateway_mac_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_gateway_mac_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Mac Address',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_gateway_None_macAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.werkkamer_gateway_mac_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Mac Address',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_gateway_mac_address',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_climate[sensor.werkkamer_gateway_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_gateway_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Model Info',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_gateway_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.werkkamer_gateway_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_gateway_model_info',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'BRP069C4x',
  })
# ---
# name: test_climate[sensor.werkkamer_gateway_region_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_gateway_region_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Region Code',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_gateway_None_regionCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.werkkamer_gateway_region_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Region Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_gateway_region_code',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'eu',
  })
# ---
# name: test_climate[sensor.werkkamer_gateway_serial_number-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_gateway_serial_number',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:numeric',
    'original_name': 'Gateway Serial Number',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_gateway_None_serialNumber',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.werkkamer_gateway_serial_number-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Serial Number',
      'icon': 'mdi:numeric',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_gateway_serial_number',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0000000002642750',
  })
# ---
# name: test_climate[sensor.werkkamer_gateway_ssid-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_gateway_ssid',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:access-point-network',
    'original_name': 'Gateway Ssid',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_gateway_None_ssid',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.werkkamer_gateway_ssid-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Ssid',
      'icon': 'mdi:access-point-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_gateway_ssid',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'DaikinAP32931',
  })
# ---
# name: test_climate[sensor.werkkamer_gateway_time_zone-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_gateway_time_zone',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Time Zone',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_gateway_None_timeZone',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.werkkamer_gateway_time_zone-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Time Zone',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_gateway_time_zone',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'Europe/Amsterdam',
  })
# ---
# name: test_climate[sensor.werkkamer_gateway_wifi_connection_s_s_i_d-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_gateway_wifi_connection_s_s_i_d',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:access-point-network',
    'original_name': 'Gateway Wifi Connection S S I D',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_gateway_None_wifiConnectionSSID',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.werkkamer_gateway_wifi_connection_s_s_i_d-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Wifi Connection S S I D',
      'icon': 'mdi:access-point-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_gateway_wifi_connection_s_s_i_d',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'WILLEMSEN',
  })
# ---
# name: test_climate[sensor.werkkamer_gateway_wifi_connection_strength-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_gateway_wifi_connection_strength',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.SIGNAL_STRENGTH: 'signal_strength'>,
    'original_icon': 'mdi:wifi',
    'original_name': 'Gateway Wifi Connection Strength',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_gateway_None_wifiConnectionStrength',
    'unit_of_measurement': 'dBm',
  })
# ---
# name: test_climate[sensor.werkkamer_gateway_wifi_connection_strength-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'signal_strength',
      'friendly_name': 'Sanne Gateway Wifi Connection Strength',
      'icon': 'mdi:wifi',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': 'dBm',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_gateway_wifi_connection_strength',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '-46',
  })
# ---
# name: test_climate[sensor.werkkamer_indoorunit_dry_keep_setting-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.werkkamer_indoorunit_dry_keep_setting',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:water-percent',
    'original_name': 'IndoorUnit Dry Keep Setting',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_indoorUnit_None_dryKeepSetting',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.werkkamer_indoorunit_dry_keep_setting-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne IndoorUnit Dry Keep Setting',
      'icon': 'mdi:water-percent',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_indoorunit_dry_keep_setting',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_climate[sensor.werkkamer_indoorunit_eeprom_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_indoorunit_eeprom_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Eeprom Version',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_indoorUnit_None_eepromVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.werkkamer_indoorunit_eeprom_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne IndoorUnit Eeprom Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_indoorunit_eeprom_version',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '12FC',
  })
# ---
# name: test_climate[sensor.werkkamer_indoorunit_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_indoorunit_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Software Version',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_indoorUnit_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.werkkamer_indoorunit_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne IndoorUnit Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_indoorunit_software_version',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '20003001',
  })
# ---
# name: test_climate[sensor.werkkamer_outdoorunit_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_outdoorunit_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Error Code',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_outdoorUnit_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.werkkamer_outdoorunit_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne OutdoorUnit Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_outdoorunit_error_code',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '00-',
  })
# ---
# name: test_climate[sensor.werkkamer_ratelimit_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_ratelimit_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit day',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_limitsensor_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.werkkamer_ratelimit_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_ratelimit_day',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate[sensor.werkkamer_ratelimit_minute-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_ratelimit_minute',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit minute',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_limitsensor_minute',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.werkkamer_ratelimit_minute-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit minute',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_ratelimit_minute',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate[sensor.werkkamer_ratelimit_ratelimit_reset-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_ratelimit_ratelimit_reset',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit ratelimit_reset',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_limitsensor_ratelimit_reset',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.werkkamer_ratelimit_ratelimit_reset-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit ratelimit_reset',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_ratelimit_ratelimit_reset',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate[sensor.werkkamer_ratelimit_remaining_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_ratelimit_remaining_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_day',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_limitsensor_remaining_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.werkkamer_ratelimit_remaining_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit remaining_day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_ratelimit_remaining_day',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate[sensor.werkkamer_ratelimit_remaining_minutes-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_ratelimit_remaining_minutes',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_minutes',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_limitsensor_remaining_minutes',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.werkkamer_ratelimit_remaining_minutes-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit remaining_minutes',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_ratelimit_remaining_minutes',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate[sensor.werkkamer_ratelimit_retry_after-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_ratelimit_retry_after',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit retry_after',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_limitsensor_retry_after',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.werkkamer_ratelimit_retry_after-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit retry_after',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_ratelimit_retry_after',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate[switch.johnny_maaike_climatecontrol_econo_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'switch',
    'entity_category': None,
    'entity_id': 'switch.johnny_maaike_climatecontrol_econo_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:leaf',
    'original_name': 'ClimateControl Econo Mode',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_econoMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[switch.johnny_maaike_climatecontrol_econo_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Econo Mode',
      'icon': 'mdi:leaf',
    }),
    'context': <ANY>,
    'entity_id': 'switch.johnny_maaike_climatecontrol_econo_mode',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_climate[switch.johnny_maaike_climatecontrol_streamer_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'switch',
    'entity_category': None,
    'entity_id': 'switch.johnny_maaike_climatecontrol_streamer_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'hass:air-filter',
    'original_name': 'ClimateControl Streamer Mode',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_streamerMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[switch.johnny_maaike_climatecontrol_streamer_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Streamer Mode',
      'icon': 'hass:air-filter',
    }),
    'context': <ANY>,
    'entity_id': 'switch.johnny_maaike_climatecontrol_streamer_mode',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[switch.linde_climatecontrol_econo_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'switch',
    'entity_category': None,
    'entity_id': 'switch.linde_climatecontrol_econo_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:leaf',
    'original_name': 'ClimateControl Econo Mode',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_econoMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[switch.linde_climatecontrol_econo_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Econo Mode',
      'icon': 'mdi:leaf',
    }),
    'context': <ANY>,
    'entity_id': 'switch.linde_climatecontrol_econo_mode',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[switch.linde_climatecontrol_streamer_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'switch',
    'entity_category': None,
    'entity_id': 'switch.linde_climatecontrol_streamer_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'hass:air-filter',
    'original_name': 'ClimateControl Streamer Mode',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_streamerMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[switch.linde_climatecontrol_streamer_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Streamer Mode',
      'icon': 'hass:air-filter',
    }),
    'context': <ANY>,
    'entity_id': 'switch.linde_climatecontrol_streamer_mode',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[switch.sanne_climatecontrol_econo_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'switch',
    'entity_category': None,
    'entity_id': 'switch.sanne_climatecontrol_econo_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:leaf',
    'original_name': 'ClimateControl Econo Mode',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_econoMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[switch.sanne_climatecontrol_econo_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Econo Mode',
      'icon': 'mdi:leaf',
    }),
    'context': <ANY>,
    'entity_id': 'switch.sanne_climatecontrol_econo_mode',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[switch.sanne_climatecontrol_streamer_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'switch',
    'entity_category': None,
    'entity_id': 'switch.sanne_climatecontrol_streamer_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'hass:air-filter',
    'original_name': 'ClimateControl Streamer Mode',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_streamerMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[switch.sanne_climatecontrol_streamer_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Streamer Mode',
      'icon': 'hass:air-filter',
    }),
    'context': <ANY>,
    'entity_id': 'switch.sanne_climatecontrol_streamer_mode',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[switch.werkkamer_climatecontrol_econo_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'switch',
    'entity_category': None,
    'entity_id': 'switch.werkkamer_climatecontrol_econo_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:leaf',
    'original_name': 'ClimateControl Econo Mode',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_econoMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[switch.werkkamer_climatecontrol_econo_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Econo Mode',
      'icon': 'mdi:leaf',
    }),
    'context': <ANY>,
    'entity_id': 'switch.werkkamer_climatecontrol_econo_mode',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[switch.werkkamer_climatecontrol_streamer_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'switch',
    'entity_category': None,
    'entity_id': 'switch.werkkamer_climatecontrol_streamer_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'hass:air-filter',
    'original_name': 'ClimateControl Streamer Mode',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_streamerMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[switch.werkkamer_climatecontrol_streamer_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Streamer Mode',
      'icon': 'hass:air-filter',
    }),
    'context': <ANY>,
    'entity_id': 'switch.werkkamer_climatecontrol_streamer_mode',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[water_heater.altherma-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'max_temp': 60.0,
      'min_temp': 30.0,
      'operation_list': list([
        'off',
        'heat_pump',
        'performance',
      ]),
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'water_heater',
    'entity_category': None,
    'entity_id': 'water_heater.altherma',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Altherma',
    'platform': 'daikin_onecta',
    'supported_features': <WaterHeaterEntityFeature: 3>,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[water_heater.altherma-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 48.0,
      'friendly_name': 'Altherma',
      'max_temp': 60.0,
      'min_temp': 30.0,
      'operation_list': list([
        'off',
        'heat_pump',
        'performance',
      ]),
      'operation_mode': 'heat_pump',
      'supported_features': <WaterHeaterEntityFeature: 3>,
      'target_temp_high': None,
      'target_temp_low': None,
      'target_temp_step': 1.0,
      'temperature': 48.0,
    }),
    'context': <ANY>,
    'entity_id': 'water_heater.altherma',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'heat_pump',
  })
# ---
# name: test_climate_fixedfanmode[binary_sensor.werkkamer_climatecontrol_is_holiday_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_holiday_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Holiday Mode Active',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_None_isHolidayModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_fixedfanmode[binary_sensor.werkkamer_climatecontrol_is_holiday_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Werkkamer ClimateControl Is Holiday Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_holiday_mode_active',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate_fixedfanmode[binary_sensor.werkkamer_climatecontrol_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Caution State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_fixedfanmode[binary_sensor.werkkamer_climatecontrol_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Werkkamer ClimateControl Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_in_caution_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate_fixedfanmode[binary_sensor.werkkamer_climatecontrol_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Error State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_fixedfanmode[binary_sensor.werkkamer_climatecontrol_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Werkkamer ClimateControl Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_in_error_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate_fixedfanmode[binary_sensor.werkkamer_climatecontrol_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Warning State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_fixedfanmode[binary_sensor.werkkamer_climatecontrol_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Werkkamer ClimateControl Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_in_warning_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate_fixedfanmode[binary_sensor.werkkamer_climatecontrol_is_powerful_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_powerful_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Powerful Mode Active',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_None_isPowerfulModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_fixedfanmode[binary_sensor.werkkamer_climatecontrol_is_powerful_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Werkkamer ClimateControl Is Powerful Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_powerful_mode_active',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate_fixedfanmode[binary_sensor.werkkamer_gateway_is_firmware_update_supported-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.werkkamer_gateway_is_firmware_update_supported',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Is Firmware Update Supported',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_gateway_None_isFirmwareUpdateSupported',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_fixedfanmode[binary_sensor.werkkamer_gateway_is_firmware_update_supported-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Werkkamer Gateway Is Firmware Update Supported',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.werkkamer_gateway_is_firmware_update_supported',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_climate_fixedfanmode[binary_sensor.werkkamer_gateway_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.werkkamer_gateway_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Is In Error State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_gateway_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_fixedfanmode[binary_sensor.werkkamer_gateway_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Werkkamer Gateway Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.werkkamer_gateway_is_in_error_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate_fixedfanmode[binary_sensor.werkkamer_outdoorunit_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.werkkamer_outdoorunit_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Caution State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_outdoorUnit_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_fixedfanmode[binary_sensor.werkkamer_outdoorunit_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Werkkamer OutdoorUnit Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.werkkamer_outdoorunit_is_in_caution_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate_fixedfanmode[binary_sensor.werkkamer_outdoorunit_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.werkkamer_outdoorunit_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Error State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_outdoorUnit_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_fixedfanmode[binary_sensor.werkkamer_outdoorunit_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Werkkamer OutdoorUnit Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.werkkamer_outdoorunit_is_in_error_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate_fixedfanmode[binary_sensor.werkkamer_outdoorunit_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.werkkamer_outdoorunit_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Warning State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_outdoorUnit_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_fixedfanmode[binary_sensor.werkkamer_outdoorunit_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Werkkamer OutdoorUnit Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.werkkamer_outdoorunit_is_in_warning_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate_fixedfanmode[climate.werkkamer_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'fan_modes': list([
        'auto',
        'quiet',
        '1',
        '2',
        '3',
        '4',
        '5',
      ]),
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
        <HVACMode.DRY: 'dry'>,
      ]),
      'max_temp': 31,
      'min_temp': 10,
      'preset_modes': list([
        'away',
        'boost',
        'none',
      ]),
      'swing_modes': list([
        'off',
        'horizontal',
        'vertical',
        'both',
        'Comfort Airflow',
        'Comfort Airflow and Horizontal',
      ]),
      'target_temp_step': 0.5,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'climate',
    'entity_category': None,
    'entity_id': 'climate.werkkamer_room_temperature',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Werkkamer Room Temperature',
    'platform': 'daikin_onecta',
    'supported_features': <ClimateEntityFeature: 57>,
    'translation_key': 'daikin_onecta',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_roomTemperature',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_fixedfanmode[climate.werkkamer_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 19,
      'fan_mode': '3',
      'fan_modes': list([
        'auto',
        'quiet',
        '1',
        '2',
        '3',
        '4',
        '5',
      ]),
      'friendly_name': 'Werkkamer Room Temperature',
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
        <HVACMode.DRY: 'dry'>,
      ]),
      'max_temp': 31,
      'min_temp': 10,
      'preset_mode': 'none',
      'preset_modes': list([
        'away',
        'boost',
        'none',
      ]),
      'supported_features': <ClimateEntityFeature: 57>,
      'swing_mode': 'off',
      'swing_modes': list([
        'off',
        'horizontal',
        'vertical',
        'both',
        'Comfort Airflow',
        'Comfort Airflow and Horizontal',
      ]),
      'target_temp_step': 0.5,
      'temperature': 21,
    }),
    'context': <ANY>,
    'entity_id': 'climate.werkkamer_room_temperature',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate_fixedfanmode[select.werkkamer_climatecontrol_schedule-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        '0',
        'off',
      ]),
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': None,
    'entity_id': 'select.werkkamer_climatecontrol_schedule',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:calendar-clock',
    'original_name': 'ClimateControl Schedule',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_schedule',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_fixedfanmode[select.werkkamer_climatecontrol_schedule-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Werkkamer ClimateControl Schedule',
      'icon': 'mdi:calendar-clock',
      'options': list([
        '0',
        'off',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.werkkamer_climatecontrol_schedule',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate_fixedfanmode[sensor.werkkamer_climatecontrol_cooling_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.werkkamer_climatecontrol_cooling_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_electrical_cooling_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_climate_fixedfanmode[sensor.werkkamer_climatecontrol_cooling_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Werkkamer ClimateControl Cooling Daily Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_climatecontrol_cooling_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate_fixedfanmode[sensor.werkkamer_climatecontrol_cooling_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.werkkamer_climatecontrol_cooling_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_electrical_cooling_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_climate_fixedfanmode[sensor.werkkamer_climatecontrol_cooling_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Werkkamer ClimateControl Cooling Weekly Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_climatecontrol_cooling_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate_fixedfanmode[sensor.werkkamer_climatecontrol_cooling_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.werkkamer_climatecontrol_cooling_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_electrical_cooling_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_climate_fixedfanmode[sensor.werkkamer_climatecontrol_cooling_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Werkkamer ClimateControl Cooling Yearly Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_climatecontrol_cooling_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0.1',
  })
# ---
# name: test_climate_fixedfanmode[sensor.werkkamer_climatecontrol_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_climatecontrol_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Error Code',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_fixedfanmode[sensor.werkkamer_climatecontrol_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Werkkamer ClimateControl Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_climatecontrol_error_code',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'U0-00',
  })
# ---
# name: test_climate_fixedfanmode[sensor.werkkamer_climatecontrol_heating_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.werkkamer_climatecontrol_heating_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_electrical_heating_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_climate_fixedfanmode[sensor.werkkamer_climatecontrol_heating_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Werkkamer ClimateControl Heating Daily Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_climatecontrol_heating_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate_fixedfanmode[sensor.werkkamer_climatecontrol_heating_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.werkkamer_climatecontrol_heating_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_electrical_heating_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_climate_fixedfanmode[sensor.werkkamer_climatecontrol_heating_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Werkkamer ClimateControl Heating Weekly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_climatecontrol_heating_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0.3',
  })
# ---
# name: test_climate_fixedfanmode[sensor.werkkamer_climatecontrol_heating_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.werkkamer_climatecontrol_heating_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_electrical_heating_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_climate_fixedfanmode[sensor.werkkamer_climatecontrol_heating_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Werkkamer ClimateControl Heating Yearly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_climatecontrol_heating_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '12.5',
  })
# ---
# name: test_climate_fixedfanmode[sensor.werkkamer_climatecontrol_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_climatecontrol_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Name',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_fixedfanmode[sensor.werkkamer_climatecontrol_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Werkkamer ClimateControl Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_climatecontrol_name',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'Werkkamer',
  })
# ---
# name: test_climate_fixedfanmode[sensor.werkkamer_climatecontrol_outdoor_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.werkkamer_climatecontrol_outdoor_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Outdoor Temperature',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_sensoryData_outdoorTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_climate_fixedfanmode[sensor.werkkamer_climatecontrol_outdoor_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Werkkamer ClimateControl Outdoor Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_climatecontrol_outdoor_temperature',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '14.5',
  })
# ---
# name: test_climate_fixedfanmode[sensor.werkkamer_climatecontrol_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.werkkamer_climatecontrol_room_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Room Temperature',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_sensoryData_roomTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_climate_fixedfanmode[sensor.werkkamer_climatecontrol_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Werkkamer ClimateControl Room Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_climatecontrol_room_temperature',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '19',
  })
# ---
# name: test_climate_fixedfanmode[sensor.werkkamer_gateway_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_gateway_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Error Code',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_gateway_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_fixedfanmode[sensor.werkkamer_gateway_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Werkkamer Gateway Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_gateway_error_code',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_climate_fixedfanmode[sensor.werkkamer_gateway_firmware_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_gateway_firmware_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Firmware Version',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_gateway_None_firmwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_fixedfanmode[sensor.werkkamer_gateway_firmware_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Werkkamer Gateway Firmware Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_gateway_firmware_version',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '1_28_0',
  })
# ---
# name: test_climate_fixedfanmode[sensor.werkkamer_gateway_ip_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_gateway_ip_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:ip-network',
    'original_name': 'Gateway Ip Address',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_gateway_None_ipAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_fixedfanmode[sensor.werkkamer_gateway_ip_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Werkkamer Gateway Ip Address',
      'icon': 'mdi:ip-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_gateway_ip_address',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '192.168.1.200',
  })
# ---
# name: test_climate_fixedfanmode[sensor.werkkamer_gateway_mac_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_gateway_mac_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Mac Address',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_gateway_None_macAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_fixedfanmode[sensor.werkkamer_gateway_mac_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Werkkamer Gateway Mac Address',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_gateway_mac_address',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'e8:4f:25:c7:fe:da',
  })
# ---
# name: test_climate_fixedfanmode[sensor.werkkamer_gateway_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_gateway_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Model Info',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_gateway_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_fixedfanmode[sensor.werkkamer_gateway_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Werkkamer Gateway Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_gateway_model_info',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'BRP069C4x',
  })
# ---
# name: test_climate_fixedfanmode[sensor.werkkamer_indoorunit_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_indoorunit_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Software Version',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_indoorUnit_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_fixedfanmode[sensor.werkkamer_indoorunit_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Werkkamer IndoorUnit Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_indoorunit_software_version',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '20003001',
  })
# ---
# name: test_climate_fixedfanmode[sensor.werkkamer_outdoorunit_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_outdoorunit_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Error Code',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_outdoorUnit_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_fixedfanmode[sensor.werkkamer_outdoorunit_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Werkkamer OutdoorUnit Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_outdoorunit_error_code',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '00-',
  })
# ---
# name: test_climate_fixedfanmode[sensor.werkkamer_ratelimit_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_ratelimit_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit day',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_limitsensor_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_fixedfanmode[sensor.werkkamer_ratelimit_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Werkkamer RateLimit day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_ratelimit_day',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate_fixedfanmode[sensor.werkkamer_ratelimit_minute-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_ratelimit_minute',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit minute',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_limitsensor_minute',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_fixedfanmode[sensor.werkkamer_ratelimit_minute-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Werkkamer RateLimit minute',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_ratelimit_minute',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate_fixedfanmode[sensor.werkkamer_ratelimit_ratelimit_reset-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_ratelimit_ratelimit_reset',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit ratelimit_reset',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_limitsensor_ratelimit_reset',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_fixedfanmode[sensor.werkkamer_ratelimit_ratelimit_reset-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Werkkamer RateLimit ratelimit_reset',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_ratelimit_ratelimit_reset',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate_fixedfanmode[sensor.werkkamer_ratelimit_remaining_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_ratelimit_remaining_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_day',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_limitsensor_remaining_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_fixedfanmode[sensor.werkkamer_ratelimit_remaining_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Werkkamer RateLimit remaining_day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_ratelimit_remaining_day',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate_fixedfanmode[sensor.werkkamer_ratelimit_remaining_minutes-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_ratelimit_remaining_minutes',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_minutes',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_limitsensor_remaining_minutes',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_fixedfanmode[sensor.werkkamer_ratelimit_remaining_minutes-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Werkkamer RateLimit remaining_minutes',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_ratelimit_remaining_minutes',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate_fixedfanmode[sensor.werkkamer_ratelimit_retry_after-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_ratelimit_retry_after',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit retry_after',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_limitsensor_retry_after',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_fixedfanmode[sensor.werkkamer_ratelimit_retry_after-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Werkkamer RateLimit retry_after',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_ratelimit_retry_after',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate_floorheatingairflow[binary_sensor.laurens_climatecontrol_is_cool_heat_master-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.laurens_climatecontrol_is_cool_heat_master',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Cool Heat Master',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '71f33ee1-a82d-4f08-8f61-bf25fd872731_climateControl_None_isCoolHeatMaster',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[binary_sensor.laurens_climatecontrol_is_cool_heat_master-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Laurens ClimateControl Is Cool Heat Master',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.laurens_climatecontrol_is_cool_heat_master',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_climate_floorheatingairflow[binary_sensor.laurens_climatecontrol_is_holiday_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.laurens_climatecontrol_is_holiday_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Holiday Mode Active',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '71f33ee1-a82d-4f08-8f61-bf25fd872731_climateControl_None_isHolidayModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[binary_sensor.laurens_climatecontrol_is_holiday_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Laurens ClimateControl Is Holiday Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.laurens_climatecontrol_is_holiday_mode_active',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate_floorheatingairflow[binary_sensor.laurens_climatecontrol_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.laurens_climatecontrol_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Caution State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '71f33ee1-a82d-4f08-8f61-bf25fd872731_climateControl_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[binary_sensor.laurens_climatecontrol_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Laurens ClimateControl Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.laurens_climatecontrol_is_in_caution_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate_floorheatingairflow[binary_sensor.laurens_climatecontrol_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.laurens_climatecontrol_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Error State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '71f33ee1-a82d-4f08-8f61-bf25fd872731_climateControl_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[binary_sensor.laurens_climatecontrol_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Laurens ClimateControl Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.laurens_climatecontrol_is_in_error_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate_floorheatingairflow[binary_sensor.laurens_climatecontrol_is_in_mode_conflict-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.laurens_climatecontrol_is_in_mode_conflict',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Mode Conflict',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '71f33ee1-a82d-4f08-8f61-bf25fd872731_climateControl_None_isInModeConflict',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[binary_sensor.laurens_climatecontrol_is_in_mode_conflict-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Laurens ClimateControl Is In Mode Conflict',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.laurens_climatecontrol_is_in_mode_conflict',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate_floorheatingairflow[binary_sensor.laurens_climatecontrol_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.laurens_climatecontrol_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Warning State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '71f33ee1-a82d-4f08-8f61-bf25fd872731_climateControl_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[binary_sensor.laurens_climatecontrol_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Laurens ClimateControl Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.laurens_climatecontrol_is_in_warning_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate_floorheatingairflow[binary_sensor.laurens_climatecontrol_is_lock_function_enabled-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.laurens_climatecontrol_is_lock_function_enabled',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Lock Function Enabled',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '71f33ee1-a82d-4f08-8f61-bf25fd872731_climateControl_None_isLockFunctionEnabled',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[binary_sensor.laurens_climatecontrol_is_lock_function_enabled-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Laurens ClimateControl Is Lock Function Enabled',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.laurens_climatecontrol_is_lock_function_enabled',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate_floorheatingairflow[binary_sensor.laurens_climatecontrol_is_powerful_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.laurens_climatecontrol_is_powerful_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Powerful Mode Active',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '71f33ee1-a82d-4f08-8f61-bf25fd872731_climateControl_None_isPowerfulModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[binary_sensor.laurens_climatecontrol_is_powerful_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Laurens ClimateControl Is Powerful Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.laurens_climatecontrol_is_powerful_mode_active',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate_floorheatingairflow[binary_sensor.laurens_gateway_daylight_saving_time_enabled-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.laurens_gateway_daylight_saving_time_enabled',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Daylight Saving Time Enabled',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '71f33ee1-a82d-4f08-8f61-bf25fd872731_gateway_None_daylightSavingTimeEnabled',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[binary_sensor.laurens_gateway_daylight_saving_time_enabled-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Laurens Gateway Daylight Saving Time Enabled',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.laurens_gateway_daylight_saving_time_enabled',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_climate_floorheatingairflow[binary_sensor.laurens_gateway_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.laurens_gateway_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Is In Error State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '71f33ee1-a82d-4f08-8f61-bf25fd872731_gateway_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[binary_sensor.laurens_gateway_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Laurens Gateway Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.laurens_gateway_is_in_error_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate_floorheatingairflow[binary_sensor.laurens_gateway_led_enabled-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.laurens_gateway_led_enabled',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Led Enabled',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '71f33ee1-a82d-4f08-8f61-bf25fd872731_gateway_None_ledEnabled',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[binary_sensor.laurens_gateway_led_enabled-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Laurens Gateway Led Enabled',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.laurens_gateway_led_enabled',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate_floorheatingairflow[binary_sensor.laurens_outdoorunit_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.laurens_outdoorunit_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Caution State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '71f33ee1-a82d-4f08-8f61-bf25fd872731_outdoorUnit_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[binary_sensor.laurens_outdoorunit_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Laurens OutdoorUnit Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.laurens_outdoorunit_is_in_caution_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate_floorheatingairflow[binary_sensor.laurens_outdoorunit_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.laurens_outdoorunit_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Error State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '71f33ee1-a82d-4f08-8f61-bf25fd872731_outdoorUnit_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[binary_sensor.laurens_outdoorunit_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Laurens OutdoorUnit Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.laurens_outdoorunit_is_in_error_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate_floorheatingairflow[binary_sensor.laurens_outdoorunit_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.laurens_outdoorunit_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Warning State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '71f33ee1-a82d-4f08-8f61-bf25fd872731_outdoorUnit_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[binary_sensor.laurens_outdoorunit_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Laurens OutdoorUnit Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.laurens_outdoorunit_is_in_warning_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate_floorheatingairflow[binary_sensor.woonkamer_airco_climatecontrol_is_cool_heat_master-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.woonkamer_airco_climatecontrol_is_cool_heat_master',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Cool Heat Master',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '27920256-e0af-4780-8f5f-1f88d8fdf0ba_climateControl_None_isCoolHeatMaster',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[binary_sensor.woonkamer_airco_climatecontrol_is_cool_heat_master-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Woonkamer airco ClimateControl Is Cool Heat Master',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.woonkamer_airco_climatecontrol_is_cool_heat_master',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_climate_floorheatingairflow[binary_sensor.woonkamer_airco_climatecontrol_is_holiday_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.woonkamer_airco_climatecontrol_is_holiday_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Holiday Mode Active',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '27920256-e0af-4780-8f5f-1f88d8fdf0ba_climateControl_None_isHolidayModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[binary_sensor.woonkamer_airco_climatecontrol_is_holiday_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Woonkamer airco ClimateControl Is Holiday Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.woonkamer_airco_climatecontrol_is_holiday_mode_active',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate_floorheatingairflow[binary_sensor.woonkamer_airco_climatecontrol_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.woonkamer_airco_climatecontrol_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Caution State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '27920256-e0af-4780-8f5f-1f88d8fdf0ba_climateControl_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[binary_sensor.woonkamer_airco_climatecontrol_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Woonkamer airco ClimateControl Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.woonkamer_airco_climatecontrol_is_in_caution_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate_floorheatingairflow[binary_sensor.woonkamer_airco_climatecontrol_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.woonkamer_airco_climatecontrol_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Error State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '27920256-e0af-4780-8f5f-1f88d8fdf0ba_climateControl_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[binary_sensor.woonkamer_airco_climatecontrol_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Woonkamer airco ClimateControl Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.woonkamer_airco_climatecontrol_is_in_error_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate_floorheatingairflow[binary_sensor.woonkamer_airco_climatecontrol_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.woonkamer_airco_climatecontrol_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Warning State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '27920256-e0af-4780-8f5f-1f88d8fdf0ba_climateControl_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[binary_sensor.woonkamer_airco_climatecontrol_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Woonkamer airco ClimateControl Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.woonkamer_airco_climatecontrol_is_in_warning_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate_floorheatingairflow[binary_sensor.woonkamer_airco_climatecontrol_is_lock_function_enabled-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.woonkamer_airco_climatecontrol_is_lock_function_enabled',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Lock Function Enabled',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '27920256-e0af-4780-8f5f-1f88d8fdf0ba_climateControl_None_isLockFunctionEnabled',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[binary_sensor.woonkamer_airco_climatecontrol_is_lock_function_enabled-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Woonkamer airco ClimateControl Is Lock Function Enabled',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.woonkamer_airco_climatecontrol_is_lock_function_enabled',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate_floorheatingairflow[binary_sensor.woonkamer_airco_climatecontrol_is_powerful_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.woonkamer_airco_climatecontrol_is_powerful_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Powerful Mode Active',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '27920256-e0af-4780-8f5f-1f88d8fdf0ba_climateControl_None_isPowerfulModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[binary_sensor.woonkamer_airco_climatecontrol_is_powerful_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Woonkamer airco ClimateControl Is Powerful Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.woonkamer_airco_climatecontrol_is_powerful_mode_active',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate_floorheatingairflow[binary_sensor.woonkamer_airco_gateway_daylight_saving_time_enabled-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.woonkamer_airco_gateway_daylight_saving_time_enabled',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Daylight Saving Time Enabled',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '27920256-e0af-4780-8f5f-1f88d8fdf0ba_gateway_None_daylightSavingTimeEnabled',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[binary_sensor.woonkamer_airco_gateway_daylight_saving_time_enabled-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Woonkamer airco Gateway Daylight Saving Time Enabled',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.woonkamer_airco_gateway_daylight_saving_time_enabled',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_climate_floorheatingairflow[binary_sensor.woonkamer_airco_gateway_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.woonkamer_airco_gateway_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Is In Error State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '27920256-e0af-4780-8f5f-1f88d8fdf0ba_gateway_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[binary_sensor.woonkamer_airco_gateway_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Woonkamer airco Gateway Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.woonkamer_airco_gateway_is_in_error_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate_floorheatingairflow[binary_sensor.woonkamer_airco_gateway_led_enabled-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.woonkamer_airco_gateway_led_enabled',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Led Enabled',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '27920256-e0af-4780-8f5f-1f88d8fdf0ba_gateway_None_ledEnabled',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[binary_sensor.woonkamer_airco_gateway_led_enabled-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Woonkamer airco Gateway Led Enabled',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.woonkamer_airco_gateway_led_enabled',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_climate_floorheatingairflow[binary_sensor.woonkamer_airco_outdoorunit_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.woonkamer_airco_outdoorunit_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Caution State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '27920256-e0af-4780-8f5f-1f88d8fdf0ba_outdoorUnit_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[binary_sensor.woonkamer_airco_outdoorunit_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Woonkamer airco OutdoorUnit Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.woonkamer_airco_outdoorunit_is_in_caution_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate_floorheatingairflow[binary_sensor.woonkamer_airco_outdoorunit_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.woonkamer_airco_outdoorunit_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Error State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '27920256-e0af-4780-8f5f-1f88d8fdf0ba_outdoorUnit_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[binary_sensor.woonkamer_airco_outdoorunit_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Woonkamer airco OutdoorUnit Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.woonkamer_airco_outdoorunit_is_in_error_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate_floorheatingairflow[binary_sensor.woonkamer_airco_outdoorunit_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.woonkamer_airco_outdoorunit_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Warning State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '27920256-e0af-4780-8f5f-1f88d8fdf0ba_outdoorUnit_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[binary_sensor.woonkamer_airco_outdoorunit_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Woonkamer airco OutdoorUnit Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.woonkamer_airco_outdoorunit_is_in_warning_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate_floorheatingairflow[climate.laurens_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'fan_modes': list([
        'auto',
        'quiet',
        '1',
        '2',
        '3',
        '4',
        '5',
      ]),
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
        <HVACMode.DRY: 'dry'>,
      ]),
      'max_temp': 31,
      'min_temp': 10,
      'preset_modes': list([
        'away',
        'boost',
        'eco',
        'none',
      ]),
      'swing_modes': list([
        'off',
        'horizontal',
        'vertical',
        'both',
        'Comfort Airflow',
        'Comfort Airflow and Horizontal',
      ]),
      'target_temp_step': 0.5,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'climate',
    'entity_category': None,
    'entity_id': 'climate.laurens_room_temperature',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Laurens Room Temperature',
    'platform': 'daikin_onecta',
    'supported_features': <ClimateEntityFeature: 57>,
    'translation_key': 'daikin_onecta',
    'unique_id': '71f33ee1-a82d-4f08-8f61-bf25fd872731_roomTemperature',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[climate.laurens_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 16,
      'fan_mode': 'auto',
      'fan_modes': list([
        'auto',
        'quiet',
        '1',
        '2',
        '3',
        '4',
        '5',
      ]),
      'friendly_name': 'Laurens Room Temperature',
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
        <HVACMode.DRY: 'dry'>,
      ]),
      'max_temp': 31,
      'min_temp': 10,
      'preset_mode': 'none',
      'preset_modes': list([
        'away',
        'boost',
        'eco',
        'none',
      ]),
      'supported_features': <ClimateEntityFeature: 57>,
      'swing_mode': 'Comfort Airflow',
      'swing_modes': list([
        'off',
        'horizontal',
        'vertical',
        'both',
        'Comfort Airflow',
        'Comfort Airflow and Horizontal',
      ]),
      'target_temp_step': 0.5,
      'temperature': 23,
    }),
    'context': <ANY>,
    'entity_id': 'climate.laurens_room_temperature',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate_floorheatingairflow[climate.woonkamer_airco_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'fan_modes': list([
        'auto',
        'quiet',
        '1',
        '2',
        '3',
        '4',
        '5',
      ]),
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
        <HVACMode.DRY: 'dry'>,
      ]),
      'max_temp': 30,
      'min_temp': 10,
      'preset_modes': list([
        'away',
        'boost',
        'eco',
        'none',
      ]),
      'swing_modes': list([
        'off',
        'vertical',
        'floorHeatingAirflow',
      ]),
      'target_temp_step': 0.5,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'climate',
    'entity_category': None,
    'entity_id': 'climate.woonkamer_airco_room_temperature',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Woonkamer airco Room Temperature',
    'platform': 'daikin_onecta',
    'supported_features': <ClimateEntityFeature: 57>,
    'translation_key': 'daikin_onecta',
    'unique_id': '27920256-e0af-4780-8f5f-1f88d8fdf0ba_roomTemperature',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[climate.woonkamer_airco_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 18,
      'fan_mode': 'auto',
      'fan_modes': list([
        'auto',
        'quiet',
        '1',
        '2',
        '3',
        '4',
        '5',
      ]),
      'friendly_name': 'Woonkamer airco Room Temperature',
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
        <HVACMode.DRY: 'dry'>,
      ]),
      'max_temp': 30,
      'min_temp': 10,
      'preset_mode': 'none',
      'preset_modes': list([
        'away',
        'boost',
        'eco',
        'none',
      ]),
      'supported_features': <ClimateEntityFeature: 57>,
      'swing_mode': 'off',
      'swing_modes': list([
        'off',
        'vertical',
        'floorHeatingAirflow',
      ]),
      'target_temp_step': 0.5,
      'temperature': 23.5,
    }),
    'context': <ANY>,
    'entity_id': 'climate.woonkamer_airco_room_temperature',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'heat',
  })
# ---
# name: test_climate_floorheatingairflow[select.laurens_climatecontrol_schedule-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        '0',
        '1',
        '2',
        'off',
      ]),
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': None,
    'entity_id': 'select.laurens_climatecontrol_schedule',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:calendar-clock',
    'original_name': 'ClimateControl Schedule',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '71f33ee1-a82d-4f08-8f61-bf25fd872731_climateControl_schedule',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[select.laurens_climatecontrol_schedule-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Laurens ClimateControl Schedule',
      'icon': 'mdi:calendar-clock',
      'options': list([
        '0',
        '1',
        '2',
        'off',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.laurens_climatecontrol_schedule',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate_floorheatingairflow[select.woonkamer_airco_climatecontrol_schedule-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        '0',
        '1',
        '2',
        'off',
      ]),
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': None,
    'entity_id': 'select.woonkamer_airco_climatecontrol_schedule',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:calendar-clock',
    'original_name': 'ClimateControl Schedule',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '27920256-e0af-4780-8f5f-1f88d8fdf0ba_climateControl_schedule',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[select.woonkamer_airco_climatecontrol_schedule-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Woonkamer airco ClimateControl Schedule',
      'icon': 'mdi:calendar-clock',
      'options': list([
        '0',
        '1',
        '2',
        'off',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.woonkamer_airco_climatecontrol_schedule',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_climatecontrol_cooling_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.laurens_climatecontrol_cooling_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '71f33ee1-a82d-4f08-8f61-bf25fd872731_climateControl_electrical_cooling_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_climatecontrol_cooling_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Laurens ClimateControl Cooling Daily Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.laurens_climatecontrol_cooling_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_climatecontrol_cooling_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.laurens_climatecontrol_cooling_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '71f33ee1-a82d-4f08-8f61-bf25fd872731_climateControl_electrical_cooling_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_climatecontrol_cooling_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Laurens ClimateControl Cooling Weekly Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.laurens_climatecontrol_cooling_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_climatecontrol_cooling_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.laurens_climatecontrol_cooling_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '71f33ee1-a82d-4f08-8f61-bf25fd872731_climateControl_electrical_cooling_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_climatecontrol_cooling_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Laurens ClimateControl Cooling Yearly Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.laurens_climatecontrol_cooling_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '29.9',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_climatecontrol_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.laurens_climatecontrol_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Error Code',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '71f33ee1-a82d-4f08-8f61-bf25fd872731_climateControl_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_climatecontrol_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Laurens ClimateControl Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.laurens_climatecontrol_error_code',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '00-',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_climatecontrol_heating_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.laurens_climatecontrol_heating_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '71f33ee1-a82d-4f08-8f61-bf25fd872731_climateControl_electrical_heating_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_climatecontrol_heating_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Laurens ClimateControl Heating Daily Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.laurens_climatecontrol_heating_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_climatecontrol_heating_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.laurens_climatecontrol_heating_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '71f33ee1-a82d-4f08-8f61-bf25fd872731_climateControl_electrical_heating_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_climatecontrol_heating_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Laurens ClimateControl Heating Weekly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.laurens_climatecontrol_heating_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0.5',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_climatecontrol_heating_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.laurens_climatecontrol_heating_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '71f33ee1-a82d-4f08-8f61-bf25fd872731_climateControl_electrical_heating_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_climatecontrol_heating_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Laurens ClimateControl Heating Yearly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.laurens_climatecontrol_heating_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '23.3',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_climatecontrol_icon_id-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.laurens_climatecontrol_icon_id',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Icon Id',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '71f33ee1-a82d-4f08-8f61-bf25fd872731_climateControl_None_iconId',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_climatecontrol_icon_id-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Laurens ClimateControl Icon Id',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.laurens_climatecontrol_icon_id',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '15',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_climatecontrol_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.laurens_climatecontrol_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Name',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '71f33ee1-a82d-4f08-8f61-bf25fd872731_climateControl_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_climatecontrol_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Laurens ClimateControl Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.laurens_climatecontrol_name',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'Laurens',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_climatecontrol_outdoor_silent_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.laurens_climatecontrol_outdoor_silent_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'ClimateControl Outdoor Silent Mode',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '71f33ee1-a82d-4f08-8f61-bf25fd872731_climateControl_None_outdoorSilentMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_climatecontrol_outdoor_silent_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Laurens ClimateControl Outdoor Silent Mode',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.laurens_climatecontrol_outdoor_silent_mode',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_climatecontrol_outdoor_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.laurens_climatecontrol_outdoor_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Outdoor Temperature',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '71f33ee1-a82d-4f08-8f61-bf25fd872731_climateControl_sensoryData_outdoorTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_climatecontrol_outdoor_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Laurens ClimateControl Outdoor Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.laurens_climatecontrol_outdoor_temperature',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '9.5',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_climatecontrol_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.laurens_climatecontrol_room_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Room Temperature',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '71f33ee1-a82d-4f08-8f61-bf25fd872731_climateControl_sensoryData_roomTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_climatecontrol_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Laurens ClimateControl Room Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.laurens_climatecontrol_room_temperature',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '16',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_gateway_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.laurens_gateway_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Error Code',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '71f33ee1-a82d-4f08-8f61-bf25fd872731_gateway_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_gateway_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Laurens Gateway Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.laurens_gateway_error_code',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_gateway_firmware_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.laurens_gateway_firmware_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Firmware Version',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '71f33ee1-a82d-4f08-8f61-bf25fd872731_gateway_None_firmwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_gateway_firmware_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Laurens Gateway Firmware Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.laurens_gateway_firmware_version',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '1_12_84',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_gateway_mac_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.laurens_gateway_mac_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Mac Address',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '71f33ee1-a82d-4f08-8f61-bf25fd872731_gateway_None_macAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_gateway_mac_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Laurens Gateway Mac Address',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.laurens_gateway_mac_address',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'e8:4f:25:d3:f5:fe',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_gateway_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.laurens_gateway_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Model Info',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '71f33ee1-a82d-4f08-8f61-bf25fd872731_gateway_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_gateway_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Laurens Gateway Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.laurens_gateway_model_info',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'BRP069C4x',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_gateway_region_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.laurens_gateway_region_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Region Code',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '71f33ee1-a82d-4f08-8f61-bf25fd872731_gateway_None_regionCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_gateway_region_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Laurens Gateway Region Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.laurens_gateway_region_code',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'eu',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_gateway_serial_number-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.laurens_gateway_serial_number',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:numeric',
    'original_name': 'Gateway Serial Number',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '71f33ee1-a82d-4f08-8f61-bf25fd872731_gateway_None_serialNumber',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_gateway_serial_number-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Laurens Gateway Serial Number',
      'icon': 'mdi:numeric',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.laurens_gateway_serial_number',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0000000003088268',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_gateway_ssid-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.laurens_gateway_ssid',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:access-point-network',
    'original_name': 'Gateway Ssid',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '71f33ee1-a82d-4f08-8f61-bf25fd872731_gateway_None_ssid',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_gateway_ssid-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Laurens Gateway Ssid',
      'icon': 'mdi:access-point-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.laurens_gateway_ssid',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'DaikinAP31731',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_gateway_time_zone-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.laurens_gateway_time_zone',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Time Zone',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '71f33ee1-a82d-4f08-8f61-bf25fd872731_gateway_None_timeZone',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_gateway_time_zone-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Laurens Gateway Time Zone',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.laurens_gateway_time_zone',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'Europe/Amsterdam',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_gateway_wifi_connection_s_s_i_d-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.laurens_gateway_wifi_connection_s_s_i_d',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:access-point-network',
    'original_name': 'Gateway Wifi Connection S S I D',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '71f33ee1-a82d-4f08-8f61-bf25fd872731_gateway_None_wifiConnectionSSID',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_gateway_wifi_connection_s_s_i_d-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Laurens Gateway Wifi Connection S S I D',
      'icon': 'mdi:access-point-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.laurens_gateway_wifi_connection_s_s_i_d',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'SSIDPLOEG24',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_gateway_wifi_connection_strength-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.laurens_gateway_wifi_connection_strength',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.SIGNAL_STRENGTH: 'signal_strength'>,
    'original_icon': 'mdi:wifi',
    'original_name': 'Gateway Wifi Connection Strength',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '71f33ee1-a82d-4f08-8f61-bf25fd872731_gateway_None_wifiConnectionStrength',
    'unit_of_measurement': 'dBm',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_gateway_wifi_connection_strength-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'signal_strength',
      'friendly_name': 'Laurens Gateway Wifi Connection Strength',
      'icon': 'mdi:wifi',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': 'dBm',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.laurens_gateway_wifi_connection_strength',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '-50',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_indoorunit_dry_keep_setting-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.laurens_indoorunit_dry_keep_setting',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:water-percent',
    'original_name': 'IndoorUnit Dry Keep Setting',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '71f33ee1-a82d-4f08-8f61-bf25fd872731_indoorUnit_None_dryKeepSetting',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_indoorunit_dry_keep_setting-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Laurens IndoorUnit Dry Keep Setting',
      'icon': 'mdi:water-percent',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.laurens_indoorunit_dry_keep_setting',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_indoorunit_eeprom_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.laurens_indoorunit_eeprom_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Eeprom Version',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '71f33ee1-a82d-4f08-8f61-bf25fd872731_indoorUnit_None_eepromVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_indoorunit_eeprom_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Laurens IndoorUnit Eeprom Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.laurens_indoorunit_eeprom_version',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '12FC',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_indoorunit_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.laurens_indoorunit_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Software Version',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '71f33ee1-a82d-4f08-8f61-bf25fd872731_indoorUnit_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_indoorunit_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Laurens IndoorUnit Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.laurens_indoorunit_software_version',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '20003001',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_outdoorunit_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.laurens_outdoorunit_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Error Code',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '71f33ee1-a82d-4f08-8f61-bf25fd872731_outdoorUnit_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_outdoorunit_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Laurens OutdoorUnit Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.laurens_outdoorunit_error_code',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '00-',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_ratelimit_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.laurens_ratelimit_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit day',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '71f33ee1-a82d-4f08-8f61-bf25fd872731_limitsensor_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_ratelimit_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Laurens RateLimit day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.laurens_ratelimit_day',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_ratelimit_minute-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.laurens_ratelimit_minute',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit minute',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '71f33ee1-a82d-4f08-8f61-bf25fd872731_limitsensor_minute',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_ratelimit_minute-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Laurens RateLimit minute',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.laurens_ratelimit_minute',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_ratelimit_ratelimit_reset-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.laurens_ratelimit_ratelimit_reset',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit ratelimit_reset',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '71f33ee1-a82d-4f08-8f61-bf25fd872731_limitsensor_ratelimit_reset',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_ratelimit_ratelimit_reset-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Laurens RateLimit ratelimit_reset',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.laurens_ratelimit_ratelimit_reset',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_ratelimit_remaining_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.laurens_ratelimit_remaining_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_day',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '71f33ee1-a82d-4f08-8f61-bf25fd872731_limitsensor_remaining_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_ratelimit_remaining_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Laurens RateLimit remaining_day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.laurens_ratelimit_remaining_day',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_ratelimit_remaining_minutes-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.laurens_ratelimit_remaining_minutes',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_minutes',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '71f33ee1-a82d-4f08-8f61-bf25fd872731_limitsensor_remaining_minutes',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_ratelimit_remaining_minutes-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Laurens RateLimit remaining_minutes',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.laurens_ratelimit_remaining_minutes',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_ratelimit_retry_after-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.laurens_ratelimit_retry_after',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit retry_after',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '71f33ee1-a82d-4f08-8f61-bf25fd872731_limitsensor_retry_after',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_ratelimit_retry_after-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Laurens RateLimit retry_after',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.laurens_ratelimit_retry_after',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_climatecontrol_cooling_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.woonkamer_airco_climatecontrol_cooling_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '27920256-e0af-4780-8f5f-1f88d8fdf0ba_climateControl_electrical_cooling_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_climatecontrol_cooling_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Woonkamer airco ClimateControl Cooling Daily Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.woonkamer_airco_climatecontrol_cooling_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_climatecontrol_cooling_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.woonkamer_airco_climatecontrol_cooling_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '27920256-e0af-4780-8f5f-1f88d8fdf0ba_climateControl_electrical_cooling_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_climatecontrol_cooling_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Woonkamer airco ClimateControl Cooling Weekly Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.woonkamer_airco_climatecontrol_cooling_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_climatecontrol_cooling_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.woonkamer_airco_climatecontrol_cooling_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '27920256-e0af-4780-8f5f-1f88d8fdf0ba_climateControl_electrical_cooling_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_climatecontrol_cooling_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Woonkamer airco ClimateControl Cooling Yearly Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.woonkamer_airco_climatecontrol_cooling_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_climatecontrol_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.woonkamer_airco_climatecontrol_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Error Code',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '27920256-e0af-4780-8f5f-1f88d8fdf0ba_climateControl_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_climatecontrol_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Woonkamer airco ClimateControl Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.woonkamer_airco_climatecontrol_error_code',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '00-',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_climatecontrol_heating_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.woonkamer_airco_climatecontrol_heating_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '27920256-e0af-4780-8f5f-1f88d8fdf0ba_climateControl_electrical_heating_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_climatecontrol_heating_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Woonkamer airco ClimateControl Heating Daily Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.woonkamer_airco_climatecontrol_heating_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_climatecontrol_heating_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.woonkamer_airco_climatecontrol_heating_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '27920256-e0af-4780-8f5f-1f88d8fdf0ba_climateControl_electrical_heating_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_climatecontrol_heating_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Woonkamer airco ClimateControl Heating Weekly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.woonkamer_airco_climatecontrol_heating_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '13.2',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_climatecontrol_heating_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.woonkamer_airco_climatecontrol_heating_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '27920256-e0af-4780-8f5f-1f88d8fdf0ba_climateControl_electrical_heating_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_climatecontrol_heating_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Woonkamer airco ClimateControl Heating Yearly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.woonkamer_airco_climatecontrol_heating_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '89.5',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_climatecontrol_icon_id-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.woonkamer_airco_climatecontrol_icon_id',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Icon Id',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '27920256-e0af-4780-8f5f-1f88d8fdf0ba_climateControl_None_iconId',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_climatecontrol_icon_id-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Woonkamer airco ClimateControl Icon Id',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.woonkamer_airco_climatecontrol_icon_id',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '15',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_climatecontrol_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.woonkamer_airco_climatecontrol_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Name',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '27920256-e0af-4780-8f5f-1f88d8fdf0ba_climateControl_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_climatecontrol_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Woonkamer airco ClimateControl Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.woonkamer_airco_climatecontrol_name',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'Woonkamer airco',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_climatecontrol_outdoor_silent_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.woonkamer_airco_climatecontrol_outdoor_silent_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'ClimateControl Outdoor Silent Mode',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '27920256-e0af-4780-8f5f-1f88d8fdf0ba_climateControl_None_outdoorSilentMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_climatecontrol_outdoor_silent_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Woonkamer airco ClimateControl Outdoor Silent Mode',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.woonkamer_airco_climatecontrol_outdoor_silent_mode',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_climatecontrol_outdoor_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.woonkamer_airco_climatecontrol_outdoor_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Outdoor Temperature',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '27920256-e0af-4780-8f5f-1f88d8fdf0ba_climateControl_sensoryData_outdoorTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_climatecontrol_outdoor_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Woonkamer airco ClimateControl Outdoor Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.woonkamer_airco_climatecontrol_outdoor_temperature',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '9.5',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_climatecontrol_room_humidity-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.woonkamer_airco_climatecontrol_room_humidity',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.HUMIDITY: 'humidity'>,
    'original_icon': 'mdi:water-percent',
    'original_name': 'ClimateControl Room Humidity',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '27920256-e0af-4780-8f5f-1f88d8fdf0ba_climateControl_sensoryData_roomHumidity',
    'unit_of_measurement': '%',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_climatecontrol_room_humidity-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'humidity',
      'friendly_name': 'Woonkamer airco ClimateControl Room Humidity',
      'icon': 'mdi:water-percent',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.woonkamer_airco_climatecontrol_room_humidity',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '55',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_climatecontrol_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.woonkamer_airco_climatecontrol_room_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Room Temperature',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '27920256-e0af-4780-8f5f-1f88d8fdf0ba_climateControl_sensoryData_roomTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_climatecontrol_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Woonkamer airco ClimateControl Room Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.woonkamer_airco_climatecontrol_room_temperature',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '18',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_gateway_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.woonkamer_airco_gateway_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Error Code',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '27920256-e0af-4780-8f5f-1f88d8fdf0ba_gateway_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_gateway_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Woonkamer airco Gateway Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.woonkamer_airco_gateway_error_code',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_gateway_firmware_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.woonkamer_airco_gateway_firmware_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Firmware Version',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '27920256-e0af-4780-8f5f-1f88d8fdf0ba_gateway_None_firmwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_gateway_firmware_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Woonkamer airco Gateway Firmware Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.woonkamer_airco_gateway_firmware_version',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '1_12_84',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_gateway_mac_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.woonkamer_airco_gateway_mac_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Mac Address',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '27920256-e0af-4780-8f5f-1f88d8fdf0ba_gateway_None_macAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_gateway_mac_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Woonkamer airco Gateway Mac Address',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.woonkamer_airco_gateway_mac_address',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'dc:fe:23:81:f4:46',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_gateway_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.woonkamer_airco_gateway_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Model Info',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '27920256-e0af-4780-8f5f-1f88d8fdf0ba_gateway_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_gateway_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Woonkamer airco Gateway Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.woonkamer_airco_gateway_model_info',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'BRP069C4x',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_gateway_region_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.woonkamer_airco_gateway_region_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Region Code',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '27920256-e0af-4780-8f5f-1f88d8fdf0ba_gateway_None_regionCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_gateway_region_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Woonkamer airco Gateway Region Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.woonkamer_airco_gateway_region_code',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'eu',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_gateway_serial_number-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.woonkamer_airco_gateway_serial_number',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:numeric',
    'original_name': 'Gateway Serial Number',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '27920256-e0af-4780-8f5f-1f88d8fdf0ba_gateway_None_serialNumber',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_gateway_serial_number-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Woonkamer airco Gateway Serial Number',
      'icon': 'mdi:numeric',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.woonkamer_airco_gateway_serial_number',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0000000005165265',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_gateway_ssid-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.woonkamer_airco_gateway_ssid',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:access-point-network',
    'original_name': 'Gateway Ssid',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '27920256-e0af-4780-8f5f-1f88d8fdf0ba_gateway_None_ssid',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_gateway_ssid-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Woonkamer airco Gateway Ssid',
      'icon': 'mdi:access-point-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.woonkamer_airco_gateway_ssid',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'DaikinAP79283',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_gateway_time_zone-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.woonkamer_airco_gateway_time_zone',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Time Zone',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '27920256-e0af-4780-8f5f-1f88d8fdf0ba_gateway_None_timeZone',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_gateway_time_zone-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Woonkamer airco Gateway Time Zone',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.woonkamer_airco_gateway_time_zone',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'Europe/Amsterdam',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_gateway_wifi_connection_s_s_i_d-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.woonkamer_airco_gateway_wifi_connection_s_s_i_d',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:access-point-network',
    'original_name': 'Gateway Wifi Connection S S I D',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '27920256-e0af-4780-8f5f-1f88d8fdf0ba_gateway_None_wifiConnectionSSID',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_gateway_wifi_connection_s_s_i_d-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Woonkamer airco Gateway Wifi Connection S S I D',
      'icon': 'mdi:access-point-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.woonkamer_airco_gateway_wifi_connection_s_s_i_d',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'SSIDPLOEG24',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_gateway_wifi_connection_strength-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.woonkamer_airco_gateway_wifi_connection_strength',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.SIGNAL_STRENGTH: 'signal_strength'>,
    'original_icon': 'mdi:wifi',
    'original_name': 'Gateway Wifi Connection Strength',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '27920256-e0af-4780-8f5f-1f88d8fdf0ba_gateway_None_wifiConnectionStrength',
    'unit_of_measurement': 'dBm',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_gateway_wifi_connection_strength-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'signal_strength',
      'friendly_name': 'Woonkamer airco Gateway Wifi Connection Strength',
      'icon': 'mdi:wifi',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': 'dBm',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.woonkamer_airco_gateway_wifi_connection_strength',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '-54',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_indoorunit_dry_keep_setting-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.woonkamer_airco_indoorunit_dry_keep_setting',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:water-percent',
    'original_name': 'IndoorUnit Dry Keep Setting',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '27920256-e0af-4780-8f5f-1f88d8fdf0ba_indoorUnit_None_dryKeepSetting',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_indoorunit_dry_keep_setting-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Woonkamer airco IndoorUnit Dry Keep Setting',
      'icon': 'mdi:water-percent',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.woonkamer_airco_indoorunit_dry_keep_setting',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_indoorunit_eeprom_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.woonkamer_airco_indoorunit_eeprom_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Eeprom Version',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '27920256-e0af-4780-8f5f-1f88d8fdf0ba_indoorUnit_None_eepromVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_indoorunit_eeprom_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Woonkamer airco IndoorUnit Eeprom Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.woonkamer_airco_indoorunit_eeprom_version',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '1576',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_indoorunit_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.woonkamer_airco_indoorunit_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Software Version',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '27920256-e0af-4780-8f5f-1f88d8fdf0ba_indoorUnit_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_indoorunit_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Woonkamer airco IndoorUnit Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.woonkamer_airco_indoorunit_software_version',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '19015C02',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_outdoorunit_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.woonkamer_airco_outdoorunit_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Error Code',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '27920256-e0af-4780-8f5f-1f88d8fdf0ba_outdoorUnit_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_outdoorunit_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Woonkamer airco OutdoorUnit Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.woonkamer_airco_outdoorunit_error_code',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '00-',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_ratelimit_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.woonkamer_airco_ratelimit_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit day',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '27920256-e0af-4780-8f5f-1f88d8fdf0ba_limitsensor_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_ratelimit_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Woonkamer airco RateLimit day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.woonkamer_airco_ratelimit_day',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_ratelimit_minute-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.woonkamer_airco_ratelimit_minute',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit minute',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '27920256-e0af-4780-8f5f-1f88d8fdf0ba_limitsensor_minute',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_ratelimit_minute-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Woonkamer airco RateLimit minute',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.woonkamer_airco_ratelimit_minute',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_ratelimit_ratelimit_reset-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.woonkamer_airco_ratelimit_ratelimit_reset',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit ratelimit_reset',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '27920256-e0af-4780-8f5f-1f88d8fdf0ba_limitsensor_ratelimit_reset',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_ratelimit_ratelimit_reset-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Woonkamer airco RateLimit ratelimit_reset',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.woonkamer_airco_ratelimit_ratelimit_reset',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_ratelimit_remaining_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.woonkamer_airco_ratelimit_remaining_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_day',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '27920256-e0af-4780-8f5f-1f88d8fdf0ba_limitsensor_remaining_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_ratelimit_remaining_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Woonkamer airco RateLimit remaining_day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.woonkamer_airco_ratelimit_remaining_day',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_ratelimit_remaining_minutes-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.woonkamer_airco_ratelimit_remaining_minutes',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_minutes',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '27920256-e0af-4780-8f5f-1f88d8fdf0ba_limitsensor_remaining_minutes',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_ratelimit_remaining_minutes-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Woonkamer airco RateLimit remaining_minutes',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.woonkamer_airco_ratelimit_remaining_minutes',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_ratelimit_retry_after-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.woonkamer_airco_ratelimit_retry_after',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit retry_after',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '27920256-e0af-4780-8f5f-1f88d8fdf0ba_limitsensor_retry_after',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_ratelimit_retry_after-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Woonkamer airco RateLimit retry_after',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.woonkamer_airco_ratelimit_retry_after',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate_floorheatingairflow[switch.laurens_climatecontrol_econo_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'switch',
    'entity_category': None,
    'entity_id': 'switch.laurens_climatecontrol_econo_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:leaf',
    'original_name': 'ClimateControl Econo Mode',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '71f33ee1-a82d-4f08-8f61-bf25fd872731_climateControl_econoMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[switch.laurens_climatecontrol_econo_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Laurens ClimateControl Econo Mode',
      'icon': 'mdi:leaf',
    }),
    'context': <ANY>,
    'entity_id': 'switch.laurens_climatecontrol_econo_mode',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate_floorheatingairflow[switch.laurens_climatecontrol_streamer_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'switch',
    'entity_category': None,
    'entity_id': 'switch.laurens_climatecontrol_streamer_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'hass:air-filter',
    'original_name': 'ClimateControl Streamer Mode',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '71f33ee1-a82d-4f08-8f61-bf25fd872731_climateControl_streamerMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[switch.laurens_climatecontrol_streamer_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Laurens ClimateControl Streamer Mode',
      'icon': 'hass:air-filter',
    }),
    'context': <ANY>,
    'entity_id': 'switch.laurens_climatecontrol_streamer_mode',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate_floorheatingairflow[switch.woonkamer_airco_climatecontrol_econo_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'switch',
    'entity_category': None,
    'entity_id': 'switch.woonkamer_airco_climatecontrol_econo_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:leaf',
    'original_name': 'ClimateControl Econo Mode',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '27920256-e0af-4780-8f5f-1f88d8fdf0ba_climateControl_econoMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[switch.woonkamer_airco_climatecontrol_econo_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Woonkamer airco ClimateControl Econo Mode',
      'icon': 'mdi:leaf',
    }),
    'context': <ANY>,
    'entity_id': 'switch.woonkamer_airco_climatecontrol_econo_mode',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate_floorheatingairflow[switch.woonkamer_airco_climatecontrol_streamer_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'switch',
    'entity_category': None,
    'entity_id': 'switch.woonkamer_airco_climatecontrol_streamer_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'hass:air-filter',
    'original_name': 'ClimateControl Streamer Mode',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '27920256-e0af-4780-8f5f-1f88d8fdf0ba_climateControl_streamerMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[switch.woonkamer_airco_climatecontrol_streamer_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Woonkamer airco ClimateControl Streamer Mode',
      'icon': 'hass:air-filter',
    }),
    'context': <ANY>,
    'entity_id': 'switch.woonkamer_airco_climatecontrol_streamer_mode',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_holidaymode[binary_sensor.climatecontrol_is_holiday_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.climatecontrol_is_holiday_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Holiday Mode Active',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '13995b32-fc6e-43ed-918e-5d2b01095ccb_climateControl_None_isHolidayModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_holidaymode[binary_sensor.climatecontrol_is_holiday_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'ClimateControl Is Holiday Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.climatecontrol_is_holiday_mode_active',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_holidaymode[binary_sensor.climatecontrol_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.climatecontrol_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Error State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '13995b32-fc6e-43ed-918e-5d2b01095ccb_climateControl_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_holidaymode[binary_sensor.climatecontrol_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'ClimateControl Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.climatecontrol_is_in_error_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_holidaymode[binary_sensor.climatecontrol_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.climatecontrol_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Warning State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '13995b32-fc6e-43ed-918e-5d2b01095ccb_climateControl_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_holidaymode[binary_sensor.climatecontrol_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'ClimateControl Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.climatecontrol_is_in_warning_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_holidaymode[binary_sensor.domestichotwaterflowthrough_is_holiday_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.domestichotwaterflowthrough_is_holiday_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterFlowThrough Is Holiday Mode Active',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '13995b32-fc6e-43ed-918e-5d2b01095ccb_domesticHotWaterFlowThrough_None_isHolidayModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_holidaymode[binary_sensor.domestichotwaterflowthrough_is_holiday_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'DomesticHotWaterFlowThrough Is Holiday Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.domestichotwaterflowthrough_is_holiday_mode_active',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_holidaymode[binary_sensor.domestichotwaterflowthrough_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.domestichotwaterflowthrough_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterFlowThrough Is In Error State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '13995b32-fc6e-43ed-918e-5d2b01095ccb_domesticHotWaterFlowThrough_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_holidaymode[binary_sensor.domestichotwaterflowthrough_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'DomesticHotWaterFlowThrough Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.domestichotwaterflowthrough_is_in_error_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_holidaymode[binary_sensor.domestichotwaterflowthrough_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.domestichotwaterflowthrough_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterFlowThrough Is In Warning State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '13995b32-fc6e-43ed-918e-5d2b01095ccb_domesticHotWaterFlowThrough_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_holidaymode[binary_sensor.domestichotwaterflowthrough_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'DomesticHotWaterFlowThrough Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.domestichotwaterflowthrough_is_in_warning_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_holidaymode[binary_sensor.gateway_is_firmware_update_supported-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.gateway_is_firmware_update_supported',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Is Firmware Update Supported',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '13995b32-fc6e-43ed-918e-5d2b01095ccb_gateway_None_isFirmwareUpdateSupported',
    'unit_of_measurement': None,
  })
# ---
# name: test_holidaymode[binary_sensor.gateway_is_firmware_update_supported-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Gateway Is Firmware Update Supported',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.gateway_is_firmware_update_supported',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_holidaymode[binary_sensor.gateway_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.gateway_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Is In Error State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '13995b32-fc6e-43ed-918e-5d2b01095ccb_gateway_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_holidaymode[binary_sensor.gateway_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Gateway Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.gateway_is_in_error_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_holidaymode[climate.room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.HEAT: 'heat'>,
      ]),
      'max_temp': 30,
      'min_temp': 10,
      'preset_modes': list([
        'away',
        'none',
      ]),
      'target_temp_step': 0.5,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'climate',
    'entity_category': None,
    'entity_id': 'climate.room_temperature',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': ' Room Temperature',
    'platform': 'daikin_onecta',
    'supported_features': <ClimateEntityFeature: 16>,
    'translation_key': 'daikin_onecta',
    'unique_id': '13995b32-fc6e-43ed-918e-5d2b01095ccb_roomTemperature',
    'unit_of_measurement': None,
  })
# ---
# name: test_holidaymode[climate.room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 23,
      'friendly_name': ' Room Temperature',
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.HEAT: 'heat'>,
      ]),
      'max_temp': 30,
      'min_temp': 10,
      'preset_mode': 'away',
      'preset_modes': list([
        'away',
        'none',
      ]),
      'supported_features': <ClimateEntityFeature: 16>,
      'target_temp_step': 0.5,
    }),
    'context': <ANY>,
    'entity_id': 'climate.room_temperature',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'heat',
  })
# ---
# name: test_holidaymode[select.climatecontrol_schedule-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'Automatic 1',
        'Automatic 2',
        'off',
      ]),
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': None,
    'entity_id': 'select.climatecontrol_schedule',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:calendar-clock',
    'original_name': 'ClimateControl Schedule',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '13995b32-fc6e-43ed-918e-5d2b01095ccb_climateControl_schedule',
    'unit_of_measurement': None,
  })
# ---
# name: test_holidaymode[select.climatecontrol_schedule-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'ClimateControl Schedule',
      'icon': 'mdi:calendar-clock',
      'options': list([
        'Automatic 1',
        'Automatic 2',
        'off',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.climatecontrol_schedule',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'Automatic 1',
  })
# ---
# name: test_holidaymode[sensor.climatecontrol_control_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.climatecontrol_control_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:alphabetical',
    'original_name': 'ClimateControl Control Mode',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '13995b32-fc6e-43ed-918e-5d2b01095ccb_climateControl_None_controlMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_holidaymode[sensor.climatecontrol_control_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'ClimateControl Control Mode',
      'icon': 'mdi:alphabetical',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.climatecontrol_control_mode',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'roomTemperature',
  })
# ---
# name: test_holidaymode[sensor.climatecontrol_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.climatecontrol_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Error Code',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '13995b32-fc6e-43ed-918e-5d2b01095ccb_climateControl_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_holidaymode[sensor.climatecontrol_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'ClimateControl Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.climatecontrol_error_code',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_holidaymode[sensor.climatecontrol_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.climatecontrol_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Name',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '13995b32-fc6e-43ed-918e-5d2b01095ccb_climateControl_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_holidaymode[sensor.climatecontrol_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'ClimateControl Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.climatecontrol_name',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_holidaymode[sensor.climatecontrol_on_off_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.climatecontrol_on_off_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:toggle-switch-variant',
    'original_name': 'ClimateControl On Off Mode',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '13995b32-fc6e-43ed-918e-5d2b01095ccb_climateControl_None_onOffMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_holidaymode[sensor.climatecontrol_on_off_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'ClimateControl On Off Mode',
      'icon': 'mdi:toggle-switch-variant',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.climatecontrol_on_off_mode',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_holidaymode[sensor.climatecontrol_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.climatecontrol_room_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Room Temperature',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '13995b32-fc6e-43ed-918e-5d2b01095ccb_climateControl_sensoryData_roomTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_holidaymode[sensor.climatecontrol_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'ClimateControl Room Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.climatecontrol_room_temperature',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '23',
  })
# ---
# name: test_holidaymode[sensor.climatecontrol_target_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.climatecontrol_target_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'ClimateControl Target Temperature',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '13995b32-fc6e-43ed-918e-5d2b01095ccb_climateControl_None_targetTemperature',
    'unit_of_measurement': None,
  })
# ---
# name: test_holidaymode[sensor.climatecontrol_target_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'ClimateControl Target Temperature',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.climatecontrol_target_temperature',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '23',
  })
# ---
# name: test_holidaymode[sensor.domestichotwaterflowthrough_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.domestichotwaterflowthrough_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterFlowThrough Error Code',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '13995b32-fc6e-43ed-918e-5d2b01095ccb_domesticHotWaterFlowThrough_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_holidaymode[sensor.domestichotwaterflowthrough_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'DomesticHotWaterFlowThrough Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.domestichotwaterflowthrough_error_code',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_holidaymode[sensor.domestichotwaterflowthrough_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.domestichotwaterflowthrough_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterFlowThrough Name',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '13995b32-fc6e-43ed-918e-5d2b01095ccb_domesticHotWaterFlowThrough_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_holidaymode[sensor.domestichotwaterflowthrough_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'DomesticHotWaterFlowThrough Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.domestichotwaterflowthrough_name',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_holidaymode[sensor.domestichotwaterflowthrough_on_off_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.domestichotwaterflowthrough_on_off_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:toggle-switch-variant',
    'original_name': 'DomesticHotWaterFlowThrough On Off Mode',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '13995b32-fc6e-43ed-918e-5d2b01095ccb_domesticHotWaterFlowThrough_None_onOffMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_holidaymode[sensor.domestichotwaterflowthrough_on_off_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'DomesticHotWaterFlowThrough On Off Mode',
      'icon': 'mdi:toggle-switch-variant',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.domestichotwaterflowthrough_on_off_mode',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_holidaymode[sensor.gateway_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.gateway_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Error Code',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '13995b32-fc6e-43ed-918e-5d2b01095ccb_gateway_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_holidaymode[sensor.gateway_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Gateway Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.gateway_error_code',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_holidaymode[sensor.gateway_firmware_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.gateway_firmware_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Firmware Version',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '13995b32-fc6e-43ed-918e-5d2b01095ccb_gateway_None_firmwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_holidaymode[sensor.gateway_firmware_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Gateway Firmware Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.gateway_firmware_version',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '438CC083000',
  })
# ---
# name: test_holidaymode[sensor.gateway_ip_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.gateway_ip_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:ip-network',
    'original_name': 'Gateway Ip Address',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '13995b32-fc6e-43ed-918e-5d2b01095ccb_gateway_None_ipAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_holidaymode[sensor.gateway_ip_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Gateway Ip Address',
      'icon': 'mdi:ip-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.gateway_ip_address',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '192.168.45.16',
  })
# ---
# name: test_holidaymode[sensor.gateway_mac_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.gateway_mac_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Mac Address',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '13995b32-fc6e-43ed-918e-5d2b01095ccb_gateway_None_macAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_holidaymode[sensor.gateway_mac_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Gateway Mac Address',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.gateway_mac_address',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '00:23:7e:f8:91:3e',
  })
# ---
# name: test_holidaymode[sensor.gateway_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.gateway_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Model Info',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '13995b32-fc6e-43ed-918e-5d2b01095ccb_gateway_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_holidaymode[sensor.gateway_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Gateway Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.gateway_model_info',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'DRGATEWAYAA',
  })
# ---
# name: test_holidaymode[sensor.gateway_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.gateway_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Name',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '13995b32-fc6e-43ed-918e-5d2b01095ccb_gateway_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_holidaymode[sensor.gateway_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Gateway Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.gateway_name',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'Gateway',
  })
# ---
# name: test_holidaymode[sensor.indoorunithydro_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.indoorunithydro_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnitHydro Model Info',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '13995b32-fc6e-43ed-918e-5d2b01095ccb_indoorUnitHydro_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_holidaymode[sensor.indoorunithydro_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'IndoorUnitHydro Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.indoorunithydro_model_info',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'D2CND',
  })
# ---
# name: test_holidaymode[sensor.indoorunithydro_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.indoorunithydro_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnitHydro Name',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '13995b32-fc6e-43ed-918e-5d2b01095ccb_indoorUnitHydro_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_holidaymode[sensor.indoorunithydro_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'IndoorUnitHydro Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.indoorunithydro_name',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'Indoor Unit Hydro',
  })
# ---
# name: test_holidaymode[sensor.indoorunithydro_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.indoorunithydro_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnitHydro Software Version',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '13995b32-fc6e-43ed-918e-5d2b01095ccb_indoorUnitHydro_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_holidaymode[sensor.indoorunithydro_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'IndoorUnitHydro Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.indoorunithydro_software_version',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '02_BA_B',
  })
# ---
# name: test_holidaymode[sensor.outdoorunit_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.outdoorunit_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Name',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '13995b32-fc6e-43ed-918e-5d2b01095ccb_outdoorUnit_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_holidaymode[sensor.outdoorunit_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'OutdoorUnit Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.outdoorunit_name',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'Outdoor Unit',
  })
# ---
# name: test_holidaymode[sensor.outdoorunit_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.outdoorunit_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Software Version',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '13995b32-fc6e-43ed-918e-5d2b01095ccb_outdoorUnit_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_holidaymode[sensor.outdoorunit_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'OutdoorUnit Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.outdoorunit_software_version',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '--',
  })
# ---
# name: test_holidaymode[sensor.ratelimit_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.ratelimit_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit day',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '13995b32-fc6e-43ed-918e-5d2b01095ccb_limitsensor_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_holidaymode[sensor.ratelimit_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'RateLimit day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.ratelimit_day',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_holidaymode[sensor.ratelimit_minute-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.ratelimit_minute',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit minute',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '13995b32-fc6e-43ed-918e-5d2b01095ccb_limitsensor_minute',
    'unit_of_measurement': None,
  })
# ---
# name: test_holidaymode[sensor.ratelimit_minute-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'RateLimit minute',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.ratelimit_minute',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_holidaymode[sensor.ratelimit_ratelimit_reset-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.ratelimit_ratelimit_reset',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit ratelimit_reset',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '13995b32-fc6e-43ed-918e-5d2b01095ccb_limitsensor_ratelimit_reset',
    'unit_of_measurement': None,
  })
# ---
# name: test_holidaymode[sensor.ratelimit_ratelimit_reset-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'RateLimit ratelimit_reset',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.ratelimit_ratelimit_reset',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_holidaymode[sensor.ratelimit_remaining_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.ratelimit_remaining_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_day',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '13995b32-fc6e-43ed-918e-5d2b01095ccb_limitsensor_remaining_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_holidaymode[sensor.ratelimit_remaining_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'RateLimit remaining_day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.ratelimit_remaining_day',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_holidaymode[sensor.ratelimit_remaining_minutes-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.ratelimit_remaining_minutes',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_minutes',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '13995b32-fc6e-43ed-918e-5d2b01095ccb_limitsensor_remaining_minutes',
    'unit_of_measurement': None,
  })
# ---
# name: test_holidaymode[sensor.ratelimit_remaining_minutes-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'RateLimit remaining_minutes',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.ratelimit_remaining_minutes',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_holidaymode[sensor.ratelimit_retry_after-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.ratelimit_retry_after',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit retry_after',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '13995b32-fc6e-43ed-918e-5d2b01095ccb_limitsensor_retry_after',
    'unit_of_measurement': None,
  })
# ---
# name: test_holidaymode[sensor.ratelimit_retry_after-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'RateLimit retry_after',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.ratelimit_retry_after',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_holidaymode[sensor.userinterface_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.userinterface_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'UserInterface Name',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '13995b32-fc6e-43ed-918e-5d2b01095ccb_userInterface_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_holidaymode[sensor.userinterface_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'UserInterface Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.userinterface_name',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'User Interface',
  })
# ---
# name: test_holidaymode[sensor.userinterface_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.userinterface_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'UserInterface Software Version',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '13995b32-fc6e-43ed-918e-5d2b01095ccb_userInterface_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_holidaymode[sensor.userinterface_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'UserInterface Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.userinterface_software_version',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'V37.06',
  })
# ---
# name: test_holidaymode[water_heater.daikin_onecta_13995b32_fc6e_43ed_918e_5d2b01095ccb-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'max_temp': 60.0,
      'min_temp': 35.0,
      'operation_list': list([
        'off',
        'heat_pump',
      ]),
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'water_heater',
    'entity_category': None,
    'entity_id': 'water_heater.daikin_onecta_13995b32_fc6e_43ed_918e_5d2b01095ccb',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': '',
    'platform': 'daikin_onecta',
    'supported_features': <WaterHeaterEntityFeature: 2>,
    'translation_key': None,
    'unique_id': '13995b32-fc6e-43ed-918e-5d2b01095ccb',
    'unit_of_measurement': None,
  })
# ---
# name: test_holidaymode[water_heater.daikin_onecta_13995b32_fc6e_43ed_918e_5d2b01095ccb-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': None,
      'friendly_name': '',
      'max_temp': 60.0,
      'min_temp': 35.0,
      'operation_list': list([
        'off',
        'heat_pump',
      ]),
      'operation_mode': 'heat_pump',
      'supported_features': <WaterHeaterEntityFeature: 2>,
      'target_temp_high': None,
      'target_temp_low': None,
      'target_temp_step': 1.0,
      'temperature': 49.0,
    }),
    'context': <ANY>,
    'entity_id': 'water_heater.daikin_onecta_13995b32_fc6e_43ed_918e_5d2b01095ccb',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'heat_pump',
  })
# ---
# name: test_mc80z[binary_sensor.climatecontrol_is_holiday_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.climatecontrol_is_holiday_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Holiday Mode Active',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1c80e348-61c1-4f0d-a8b1-917f2f904529_climateControl_None_isHolidayModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[binary_sensor.climatecontrol_is_holiday_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'ClimateControl Is Holiday Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.climatecontrol_is_holiday_mode_active',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_mc80z[binary_sensor.climatecontrol_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.climatecontrol_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Caution State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1c80e348-61c1-4f0d-a8b1-917f2f904529_climateControl_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[binary_sensor.climatecontrol_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'ClimateControl Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.climatecontrol_is_in_caution_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_mc80z[binary_sensor.climatecontrol_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.climatecontrol_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Error State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1c80e348-61c1-4f0d-a8b1-917f2f904529_climateControl_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[binary_sensor.climatecontrol_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'ClimateControl Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.climatecontrol_is_in_error_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_mc80z[binary_sensor.climatecontrol_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.climatecontrol_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Warning State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1c80e348-61c1-4f0d-a8b1-917f2f904529_climateControl_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[binary_sensor.climatecontrol_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'ClimateControl Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.climatecontrol_is_in_warning_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_mc80z[binary_sensor.gateway_is_firmware_update_supported-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.gateway_is_firmware_update_supported',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Is Firmware Update Supported',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1c80e348-61c1-4f0d-a8b1-917f2f904529_gateway_None_isFirmwareUpdateSupported',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[binary_sensor.gateway_is_firmware_update_supported-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Gateway Is Firmware Update Supported',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.gateway_is_firmware_update_supported',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_mc80z[binary_sensor.gateway_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.gateway_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Is In Error State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1c80e348-61c1-4f0d-a8b1-917f2f904529_gateway_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[binary_sensor.gateway_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Gateway Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.gateway_is_in_error_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_mc80z[binary_sensor.vloerverwarming_climatecontrol_is_holiday_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.vloerverwarming_climatecontrol_is_holiday_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Holiday Mode Active',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01_climateControl_None_isHolidayModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[binary_sensor.vloerverwarming_climatecontrol_is_holiday_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Vloerverwarming ClimateControl Is Holiday Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.vloerverwarming_climatecontrol_is_holiday_mode_active',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_mc80z[binary_sensor.vloerverwarming_climatecontrol_is_in_emergency_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.vloerverwarming_climatecontrol_is_in_emergency_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Emergency State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01_climateControl_None_isInEmergencyState',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[binary_sensor.vloerverwarming_climatecontrol_is_in_emergency_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Vloerverwarming ClimateControl Is In Emergency State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.vloerverwarming_climatecontrol_is_in_emergency_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_mc80z[binary_sensor.vloerverwarming_climatecontrol_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.vloerverwarming_climatecontrol_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Error State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01_climateControl_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[binary_sensor.vloerverwarming_climatecontrol_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Vloerverwarming ClimateControl Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.vloerverwarming_climatecontrol_is_in_error_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_mc80z[binary_sensor.vloerverwarming_climatecontrol_is_in_installer_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.vloerverwarming_climatecontrol_is_in_installer_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Installer State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01_climateControl_None_isInInstallerState',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[binary_sensor.vloerverwarming_climatecontrol_is_in_installer_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Vloerverwarming ClimateControl Is In Installer State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.vloerverwarming_climatecontrol_is_in_installer_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_mc80z[binary_sensor.vloerverwarming_climatecontrol_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.vloerverwarming_climatecontrol_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Warning State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01_climateControl_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[binary_sensor.vloerverwarming_climatecontrol_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Vloerverwarming ClimateControl Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.vloerverwarming_climatecontrol_is_in_warning_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_mc80z[binary_sensor.vloerverwarming_domestichotwatertank_is_holiday_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.vloerverwarming_domestichotwatertank_is_holiday_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Is Holiday Mode Active',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01_domesticHotWaterTank_None_isHolidayModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[binary_sensor.vloerverwarming_domestichotwatertank_is_holiday_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Vloerverwarming DomesticHotWaterTank Is Holiday Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.vloerverwarming_domestichotwatertank_is_holiday_mode_active',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_mc80z[binary_sensor.vloerverwarming_domestichotwatertank_is_in_emergency_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.vloerverwarming_domestichotwatertank_is_in_emergency_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Is In Emergency State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01_domesticHotWaterTank_None_isInEmergencyState',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[binary_sensor.vloerverwarming_domestichotwatertank_is_in_emergency_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Vloerverwarming DomesticHotWaterTank Is In Emergency State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.vloerverwarming_domestichotwatertank_is_in_emergency_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_mc80z[binary_sensor.vloerverwarming_domestichotwatertank_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.vloerverwarming_domestichotwatertank_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Is In Error State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01_domesticHotWaterTank_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[binary_sensor.vloerverwarming_domestichotwatertank_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Vloerverwarming DomesticHotWaterTank Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.vloerverwarming_domestichotwatertank_is_in_error_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_mc80z[binary_sensor.vloerverwarming_domestichotwatertank_is_in_installer_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.vloerverwarming_domestichotwatertank_is_in_installer_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Is In Installer State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01_domesticHotWaterTank_None_isInInstallerState',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[binary_sensor.vloerverwarming_domestichotwatertank_is_in_installer_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Vloerverwarming DomesticHotWaterTank Is In Installer State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.vloerverwarming_domestichotwatertank_is_in_installer_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_mc80z[binary_sensor.vloerverwarming_domestichotwatertank_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.vloerverwarming_domestichotwatertank_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Is In Warning State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01_domesticHotWaterTank_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[binary_sensor.vloerverwarming_domestichotwatertank_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Vloerverwarming DomesticHotWaterTank Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.vloerverwarming_domestichotwatertank_is_in_warning_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_mc80z[binary_sensor.vloerverwarming_domestichotwatertank_is_powerful_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.vloerverwarming_domestichotwatertank_is_powerful_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Is Powerful Mode Active',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01_domesticHotWaterTank_None_isPowerfulModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[binary_sensor.vloerverwarming_domestichotwatertank_is_powerful_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Vloerverwarming DomesticHotWaterTank Is Powerful Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.vloerverwarming_domestichotwatertank_is_powerful_mode_active',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_mc80z[binary_sensor.vloerverwarming_gateway_is_firmware_update_supported-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.vloerverwarming_gateway_is_firmware_update_supported',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Is Firmware Update Supported',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01_gateway_None_isFirmwareUpdateSupported',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[binary_sensor.vloerverwarming_gateway_is_firmware_update_supported-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Vloerverwarming Gateway Is Firmware Update Supported',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.vloerverwarming_gateway_is_firmware_update_supported',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_mc80z[binary_sensor.vloerverwarming_gateway_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.vloerverwarming_gateway_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Is In Error State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01_gateway_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[binary_sensor.vloerverwarming_gateway_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Vloerverwarming Gateway Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.vloerverwarming_gateway_is_in_error_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_mc80z[climate.vloerverwarming_leaving_water_offset-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
      ]),
      'max_temp': 10,
      'min_temp': -10,
      'preset_modes': list([
        'away',
        'none',
      ]),
      'target_temp_step': 1,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'climate',
    'entity_category': None,
    'entity_id': 'climate.vloerverwarming_leaving_water_offset',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Vloerverwarming Leaving Water Offset',
    'platform': 'daikin_onecta',
    'supported_features': <ClimateEntityFeature: 17>,
    'translation_key': 'daikin_onecta',
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01_leavingWaterOffset',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[climate.vloerverwarming_leaving_water_offset-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 25,
      'friendly_name': 'Vloerverwarming Leaving Water Offset',
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
      ]),
      'max_temp': 10,
      'min_temp': -10,
      'preset_mode': 'none',
      'preset_modes': list([
        'away',
        'none',
      ]),
      'supported_features': <ClimateEntityFeature: 17>,
      'target_temp_step': 1,
      'temperature': -3,
    }),
    'context': <ANY>,
    'entity_id': 'climate.vloerverwarming_leaving_water_offset',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'heat',
  })
# ---
# name: test_mc80z[select.climatecontrol_schedule-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        '0',
        '1',
        '2',
        'off',
      ]),
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': None,
    'entity_id': 'select.climatecontrol_schedule',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:calendar-clock',
    'original_name': 'ClimateControl Schedule',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1c80e348-61c1-4f0d-a8b1-917f2f904529_climateControl_schedule',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[select.climatecontrol_schedule-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'ClimateControl Schedule',
      'icon': 'mdi:calendar-clock',
      'options': list([
        '0',
        '1',
        '2',
        'off',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.climatecontrol_schedule',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_mc80z[select.vloerverwarming_domestichotwatertank_schedule-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'User defined',
        'off',
      ]),
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': None,
    'entity_id': 'select.vloerverwarming_domestichotwatertank_schedule',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:calendar-clock',
    'original_name': 'DomesticHotWaterTank Schedule',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01_domesticHotWaterTank_schedule',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[select.vloerverwarming_domestichotwatertank_schedule-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Vloerverwarming DomesticHotWaterTank Schedule',
      'icon': 'mdi:calendar-clock',
      'options': list([
        'User defined',
        'off',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.vloerverwarming_domestichotwatertank_schedule',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'User defined',
  })
# ---
# name: test_mc80z[sensor.climatecontrol_air_purification_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.climatecontrol_air_purification_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:alphabetical',
    'original_name': 'ClimateControl Air Purification Mode',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1c80e348-61c1-4f0d-a8b1-917f2f904529_climateControl_None_airPurificationMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[sensor.climatecontrol_air_purification_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'ClimateControl Air Purification Mode',
      'icon': 'mdi:alphabetical',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.climatecontrol_air_purification_mode',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'econo',
  })
# ---
# name: test_mc80z[sensor.climatecontrol_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.climatecontrol_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Error Code',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1c80e348-61c1-4f0d-a8b1-917f2f904529_climateControl_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[sensor.climatecontrol_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'ClimateControl Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.climatecontrol_error_code',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '00-00',
  })
# ---
# name: test_mc80z[sensor.climatecontrol_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.climatecontrol_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Name',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1c80e348-61c1-4f0d-a8b1-917f2f904529_climateControl_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[sensor.climatecontrol_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'ClimateControl Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.climatecontrol_name',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_mc80z[sensor.climatecontrol_pm10_concentration-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.climatecontrol_pm10_concentration',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.PM10: 'pm10'>,
    'original_icon': 'mdi:blur',
    'original_name': 'ClimateControl Pm10 Concentration',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1c80e348-61c1-4f0d-a8b1-917f2f904529_climateControl_sensoryData_pm10Concentration',
    'unit_of_measurement': 'µg/m³',
  })
# ---
# name: test_mc80z[sensor.climatecontrol_pm10_concentration-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'pm10',
      'friendly_name': 'ClimateControl Pm10 Concentration',
      'icon': 'mdi:blur',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': 'µg/m³',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.climatecontrol_pm10_concentration',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '2',
  })
# ---
# name: test_mc80z[sensor.climatecontrol_pm1_concentration-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.climatecontrol_pm1_concentration',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.PM1: 'pm1'>,
    'original_icon': 'mdi:blur',
    'original_name': 'ClimateControl Pm1 Concentration',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1c80e348-61c1-4f0d-a8b1-917f2f904529_climateControl_sensoryData_pm1Concentration',
    'unit_of_measurement': 'µg/m³',
  })
# ---
# name: test_mc80z[sensor.climatecontrol_pm1_concentration-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'pm1',
      'friendly_name': 'ClimateControl Pm1 Concentration',
      'icon': 'mdi:blur',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': 'µg/m³',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.climatecontrol_pm1_concentration',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '1',
  })
# ---
# name: test_mc80z[sensor.climatecontrol_pm25_concentration-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.climatecontrol_pm25_concentration',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.PM25: 'pm25'>,
    'original_icon': 'mdi:blur',
    'original_name': 'ClimateControl Pm25 Concentration',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1c80e348-61c1-4f0d-a8b1-917f2f904529_climateControl_sensoryData_pm25Concentration',
    'unit_of_measurement': 'µg/m³',
  })
# ---
# name: test_mc80z[sensor.climatecontrol_pm25_concentration-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'pm25',
      'friendly_name': 'ClimateControl Pm25 Concentration',
      'icon': 'mdi:blur',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': 'µg/m³',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.climatecontrol_pm25_concentration',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '2',
  })
# ---
# name: test_mc80z[sensor.climatecontrol_room_humidity-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.climatecontrol_room_humidity',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.HUMIDITY: 'humidity'>,
    'original_icon': 'mdi:water-percent',
    'original_name': 'ClimateControl Room Humidity',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1c80e348-61c1-4f0d-a8b1-917f2f904529_climateControl_sensoryData_roomHumidity',
    'unit_of_measurement': '%',
  })
# ---
# name: test_mc80z[sensor.climatecontrol_room_humidity-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'humidity',
      'friendly_name': 'ClimateControl Room Humidity',
      'icon': 'mdi:water-percent',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.climatecontrol_room_humidity',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '56',
  })
# ---
# name: test_mc80z[sensor.climatecontrol_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.climatecontrol_room_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Room Temperature',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1c80e348-61c1-4f0d-a8b1-917f2f904529_climateControl_sensoryData_roomTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_mc80z[sensor.climatecontrol_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'ClimateControl Room Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.climatecontrol_room_temperature',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '21',
  })
# ---
# name: test_mc80z[sensor.gateway_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.gateway_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Error Code',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1c80e348-61c1-4f0d-a8b1-917f2f904529_gateway_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[sensor.gateway_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Gateway Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.gateway_error_code',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_mc80z[sensor.gateway_firmware_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.gateway_firmware_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Firmware Version',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1c80e348-61c1-4f0d-a8b1-917f2f904529_gateway_None_firmwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[sensor.gateway_firmware_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Gateway Firmware Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.gateway_firmware_version',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '1_28_0',
  })
# ---
# name: test_mc80z[sensor.gateway_ip_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.gateway_ip_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:ip-network',
    'original_name': 'Gateway Ip Address',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1c80e348-61c1-4f0d-a8b1-917f2f904529_gateway_None_ipAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[sensor.gateway_ip_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Gateway Ip Address',
      'icon': 'mdi:ip-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.gateway_ip_address',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '192.168.1.31',
  })
# ---
# name: test_mc80z[sensor.gateway_mac_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.gateway_mac_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Mac Address',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1c80e348-61c1-4f0d-a8b1-917f2f904529_gateway_None_macAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[sensor.gateway_mac_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Gateway Mac Address',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.gateway_mac_address',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '9c:50:d1:ba:3a:96',
  })
# ---
# name: test_mc80z[sensor.gateway_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.gateway_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Model Info',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1c80e348-61c1-4f0d-a8b1-917f2f904529_gateway_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[sensor.gateway_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Gateway Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.gateway_model_info',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'BRP069C4x',
  })
# ---
# name: test_mc80z[sensor.indoorunit_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.indoorunit_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Model Info',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1c80e348-61c1-4f0d-a8b1-917f2f904529_indoorUnit_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[sensor.indoorunit_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'IndoorUnit Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.indoorunit_model_info',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'MC80Z_',
  })
# ---
# name: test_mc80z[sensor.indoorunit_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.indoorunit_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Software Version',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1c80e348-61c1-4f0d-a8b1-917f2f904529_indoorUnit_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[sensor.indoorunit_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'IndoorUnit Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.indoorunit_software_version',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '22014C01',
  })
# ---
# name: test_mc80z[sensor.ratelimit_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.ratelimit_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit day',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1c80e348-61c1-4f0d-a8b1-917f2f904529_limitsensor_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[sensor.ratelimit_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'RateLimit day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.ratelimit_day',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_mc80z[sensor.ratelimit_minute-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.ratelimit_minute',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit minute',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1c80e348-61c1-4f0d-a8b1-917f2f904529_limitsensor_minute',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[sensor.ratelimit_minute-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'RateLimit minute',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.ratelimit_minute',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_mc80z[sensor.ratelimit_ratelimit_reset-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.ratelimit_ratelimit_reset',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit ratelimit_reset',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1c80e348-61c1-4f0d-a8b1-917f2f904529_limitsensor_ratelimit_reset',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[sensor.ratelimit_ratelimit_reset-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'RateLimit ratelimit_reset',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.ratelimit_ratelimit_reset',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_mc80z[sensor.ratelimit_remaining_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.ratelimit_remaining_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_day',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1c80e348-61c1-4f0d-a8b1-917f2f904529_limitsensor_remaining_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[sensor.ratelimit_remaining_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'RateLimit remaining_day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.ratelimit_remaining_day',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_mc80z[sensor.ratelimit_remaining_minutes-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.ratelimit_remaining_minutes',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_minutes',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1c80e348-61c1-4f0d-a8b1-917f2f904529_limitsensor_remaining_minutes',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[sensor.ratelimit_remaining_minutes-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'RateLimit remaining_minutes',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.ratelimit_remaining_minutes',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_mc80z[sensor.ratelimit_retry_after-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.ratelimit_retry_after',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit retry_after',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1c80e348-61c1-4f0d-a8b1-917f2f904529_limitsensor_retry_after',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[sensor.ratelimit_retry_after-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'RateLimit retry_after',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.ratelimit_retry_after',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_climatecontrol_control_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.vloerverwarming_climatecontrol_control_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:alphabetical',
    'original_name': 'ClimateControl Control Mode',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01_climateControl_None_controlMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_climatecontrol_control_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Vloerverwarming ClimateControl Control Mode',
      'icon': 'mdi:alphabetical',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vloerverwarming_climatecontrol_control_mode',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'externalRoomTemperature',
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_climatecontrol_cooling_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.vloerverwarming_climatecontrol_cooling_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01_climateControl_electrical_cooling_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_climatecontrol_cooling_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Vloerverwarming ClimateControl Cooling Daily Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vloerverwarming_climatecontrol_cooling_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_climatecontrol_cooling_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.vloerverwarming_climatecontrol_cooling_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01_climateControl_electrical_cooling_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_climatecontrol_cooling_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Vloerverwarming ClimateControl Cooling Weekly Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vloerverwarming_climatecontrol_cooling_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_climatecontrol_cooling_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.vloerverwarming_climatecontrol_cooling_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01_climateControl_electrical_cooling_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_climatecontrol_cooling_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Vloerverwarming ClimateControl Cooling Yearly Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vloerverwarming_climatecontrol_cooling_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_climatecontrol_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.vloerverwarming_climatecontrol_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Error Code',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01_climateControl_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_climatecontrol_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Vloerverwarming ClimateControl Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vloerverwarming_climatecontrol_error_code',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_climatecontrol_heating_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.vloerverwarming_climatecontrol_heating_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01_climateControl_electrical_heating_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_climatecontrol_heating_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Vloerverwarming ClimateControl Heating Daily Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vloerverwarming_climatecontrol_heating_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '3',
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_climatecontrol_heating_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.vloerverwarming_climatecontrol_heating_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01_climateControl_electrical_heating_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_climatecontrol_heating_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Vloerverwarming ClimateControl Heating Weekly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vloerverwarming_climatecontrol_heating_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '15',
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_climatecontrol_heating_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.vloerverwarming_climatecontrol_heating_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01_climateControl_electrical_heating_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_climatecontrol_heating_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Vloerverwarming ClimateControl Heating Yearly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vloerverwarming_climatecontrol_heating_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '416',
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_climatecontrol_leaving_water_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.vloerverwarming_climatecontrol_leaving_water_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Leaving Water Temperature',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01_climateControl_sensoryData_leavingWaterTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_climatecontrol_leaving_water_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Vloerverwarming ClimateControl Leaving Water Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vloerverwarming_climatecontrol_leaving_water_temperature',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '25',
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_climatecontrol_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.vloerverwarming_climatecontrol_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Name',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01_climateControl_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_climatecontrol_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Vloerverwarming ClimateControl Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vloerverwarming_climatecontrol_name',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'Vloerverwarming',
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_climatecontrol_outdoor_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.vloerverwarming_climatecontrol_outdoor_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Outdoor Temperature',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01_climateControl_sensoryData_outdoorTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_climatecontrol_outdoor_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Vloerverwarming ClimateControl Outdoor Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vloerverwarming_climatecontrol_outdoor_temperature',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '12',
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_climatecontrol_setpoint_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.vloerverwarming_climatecontrol_setpoint_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:alphabetical',
    'original_name': 'ClimateControl Setpoint Mode',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01_climateControl_None_setpointMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_climatecontrol_setpoint_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Vloerverwarming ClimateControl Setpoint Mode',
      'icon': 'mdi:alphabetical',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vloerverwarming_climatecontrol_setpoint_mode',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'weatherDependent',
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_climatecontrol_target_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.vloerverwarming_climatecontrol_target_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'ClimateControl Target Temperature',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01_climateControl_None_targetTemperature',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_climatecontrol_target_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Vloerverwarming ClimateControl Target Temperature',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vloerverwarming_climatecontrol_target_temperature',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '-3',
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_domestichotwatertank_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.vloerverwarming_domestichotwatertank_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Error Code',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01_domesticHotWaterTank_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_domestichotwatertank_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Vloerverwarming DomesticHotWaterTank Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vloerverwarming_domestichotwatertank_error_code',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_domestichotwatertank_heating_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.vloerverwarming_domestichotwatertank_heating_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'DomesticHotWaterTank Heating Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01_domesticHotWaterTank_electrical_heating_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_domestichotwatertank_heating_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Vloerverwarming DomesticHotWaterTank Heating Daily Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vloerverwarming_domestichotwatertank_heating_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '1',
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_domestichotwatertank_heating_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.vloerverwarming_domestichotwatertank_heating_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'DomesticHotWaterTank Heating Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01_domesticHotWaterTank_electrical_heating_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_domestichotwatertank_heating_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Vloerverwarming DomesticHotWaterTank Heating Weekly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vloerverwarming_domestichotwatertank_heating_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '5',
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_domestichotwatertank_heating_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.vloerverwarming_domestichotwatertank_heating_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'DomesticHotWaterTank Heating Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01_domesticHotWaterTank_electrical_heating_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_domestichotwatertank_heating_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Vloerverwarming DomesticHotWaterTank Heating Yearly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vloerverwarming_domestichotwatertank_heating_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '68',
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_domestichotwatertank_heatup_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.vloerverwarming_domestichotwatertank_heatup_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:alphabetical',
    'original_name': 'DomesticHotWaterTank Heatup Mode',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01_domesticHotWaterTank_None_heatupMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_domestichotwatertank_heatup_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Vloerverwarming DomesticHotWaterTank Heatup Mode',
      'icon': 'mdi:alphabetical',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vloerverwarming_domestichotwatertank_heatup_mode',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'scheduleOnly',
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_domestichotwatertank_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.vloerverwarming_domestichotwatertank_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Name',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01_domesticHotWaterTank_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_domestichotwatertank_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Vloerverwarming DomesticHotWaterTank Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vloerverwarming_domestichotwatertank_name',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'Warm water',
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_domestichotwatertank_setpoint_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.vloerverwarming_domestichotwatertank_setpoint_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:alphabetical',
    'original_name': 'DomesticHotWaterTank Setpoint Mode',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01_domesticHotWaterTank_None_setpointMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_domestichotwatertank_setpoint_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Vloerverwarming DomesticHotWaterTank Setpoint Mode',
      'icon': 'mdi:alphabetical',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vloerverwarming_domestichotwatertank_setpoint_mode',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'fixed',
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_domestichotwatertank_tank_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.vloerverwarming_domestichotwatertank_tank_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': 'mdi:bathtub-outline',
    'original_name': 'DomesticHotWaterTank Tank Temperature',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01_domesticHotWaterTank_sensoryData_tankTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_domestichotwatertank_tank_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Vloerverwarming DomesticHotWaterTank Tank Temperature',
      'icon': 'mdi:bathtub-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vloerverwarming_domestichotwatertank_tank_temperature',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '41',
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_gateway_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.vloerverwarming_gateway_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Error Code',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01_gateway_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_gateway_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Vloerverwarming Gateway Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vloerverwarming_gateway_error_code',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_gateway_firmware_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.vloerverwarming_gateway_firmware_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Firmware Version',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01_gateway_None_firmwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_gateway_firmware_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Vloerverwarming Gateway Firmware Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vloerverwarming_gateway_firmware_version',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '436CC166000',
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_gateway_ip_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.vloerverwarming_gateway_ip_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:ip-network',
    'original_name': 'Gateway Ip Address',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01_gateway_None_ipAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_gateway_ip_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Vloerverwarming Gateway Ip Address',
      'icon': 'mdi:ip-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vloerverwarming_gateway_ip_address',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '192.168.1.205',
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_gateway_mac_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.vloerverwarming_gateway_mac_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Mac Address',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01_gateway_None_macAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_gateway_mac_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Vloerverwarming Gateway Mac Address',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vloerverwarming_gateway_mac_address',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '00:23:7e:cb:98:8d',
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_gateway_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.vloerverwarming_gateway_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Model Info',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01_gateway_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_gateway_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Vloerverwarming Gateway Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vloerverwarming_gateway_model_info',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'BRP069A61',
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_gateway_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.vloerverwarming_gateway_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Name',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01_gateway_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_gateway_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Vloerverwarming Gateway Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vloerverwarming_gateway_name',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'Gateway',
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_indoorunithydro_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.vloerverwarming_indoorunithydro_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnitHydro Model Info',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01_indoorUnitHydro_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_indoorunithydro_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Vloerverwarming IndoorUnitHydro Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vloerverwarming_indoorunithydro_model_info',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'EHVH08S23DA6V',
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_indoorunithydro_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.vloerverwarming_indoorunithydro_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnitHydro Name',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01_indoorUnitHydro_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_indoorunithydro_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Vloerverwarming IndoorUnitHydro Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vloerverwarming_indoorunithydro_name',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'Indoor Unit Hydro',
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_indoorunithydro_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.vloerverwarming_indoorunithydro_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnitHydro Software Version',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01_indoorUnitHydro_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_indoorunithydro_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Vloerverwarming IndoorUnitHydro Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vloerverwarming_indoorunithydro_software_version',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'ID7401',
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_outdoorunit_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.vloerverwarming_outdoorunit_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Name',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01_outdoorUnit_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_outdoorunit_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Vloerverwarming OutdoorUnit Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vloerverwarming_outdoorunit_name',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'Outdoor Unit',
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_outdoorunit_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.vloerverwarming_outdoorunit_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Software Version',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01_outdoorUnit_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_outdoorunit_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Vloerverwarming OutdoorUnit Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vloerverwarming_outdoorunit_software_version',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'IDE7C4',
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_ratelimit_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.vloerverwarming_ratelimit_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit day',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01_limitsensor_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_ratelimit_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Vloerverwarming RateLimit day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vloerverwarming_ratelimit_day',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_ratelimit_minute-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.vloerverwarming_ratelimit_minute',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit minute',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01_limitsensor_minute',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_ratelimit_minute-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Vloerverwarming RateLimit minute',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vloerverwarming_ratelimit_minute',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_ratelimit_ratelimit_reset-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.vloerverwarming_ratelimit_ratelimit_reset',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit ratelimit_reset',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01_limitsensor_ratelimit_reset',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_ratelimit_ratelimit_reset-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Vloerverwarming RateLimit ratelimit_reset',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vloerverwarming_ratelimit_ratelimit_reset',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_ratelimit_remaining_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.vloerverwarming_ratelimit_remaining_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_day',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01_limitsensor_remaining_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_ratelimit_remaining_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Vloerverwarming RateLimit remaining_day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vloerverwarming_ratelimit_remaining_day',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_ratelimit_remaining_minutes-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.vloerverwarming_ratelimit_remaining_minutes',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_minutes',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01_limitsensor_remaining_minutes',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_ratelimit_remaining_minutes-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Vloerverwarming RateLimit remaining_minutes',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vloerverwarming_ratelimit_remaining_minutes',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_ratelimit_retry_after-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.vloerverwarming_ratelimit_retry_after',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit retry_after',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01_limitsensor_retry_after',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_ratelimit_retry_after-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Vloerverwarming RateLimit retry_after',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vloerverwarming_ratelimit_retry_after',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_userinterface_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.vloerverwarming_userinterface_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'UserInterface Name',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01_userInterface_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_userinterface_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Vloerverwarming UserInterface Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vloerverwarming_userinterface_name',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'User Interface',
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_userinterface_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.vloerverwarming_userinterface_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'UserInterface Software Version',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01_userInterface_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_userinterface_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Vloerverwarming UserInterface Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vloerverwarming_userinterface_software_version',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'v01.07.00',
  })
# ---
# name: test_mc80z[water_heater.vloerverwarming-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'max_temp': 60.0,
      'min_temp': 30.0,
      'operation_list': list([
        'off',
        'heat_pump',
        'performance',
      ]),
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'water_heater',
    'entity_category': None,
    'entity_id': 'water_heater.vloerverwarming',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Vloerverwarming',
    'platform': 'daikin_onecta',
    'supported_features': <WaterHeaterEntityFeature: 2>,
    'translation_key': None,
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[water_heater.vloerverwarming-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 41.0,
      'friendly_name': 'Vloerverwarming',
      'max_temp': 60.0,
      'min_temp': 30.0,
      'operation_list': list([
        'off',
        'heat_pump',
        'performance',
      ]),
      'operation_mode': 'heat_pump',
      'supported_features': <WaterHeaterEntityFeature: 2>,
      'target_temp_high': None,
      'target_temp_low': None,
      'target_temp_step': 1.0,
      'temperature': 43.0,
    }),
    'context': <ANY>,
    'entity_id': 'water_heater.vloerverwarming',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'heat_pump',
  })
# ---
# name: test_water_heater[binary_sensor.altherma_climatecontrol_is_holiday_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_climatecontrol_is_holiday_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Holiday Mode Active',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_None_isHolidayModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_water_heater[binary_sensor.altherma_climatecontrol_is_holiday_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma ClimateControl Is Holiday Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_climatecontrol_is_holiday_mode_active',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_water_heater[binary_sensor.altherma_climatecontrol_is_in_emergency_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_climatecontrol_is_in_emergency_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Emergency State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_None_isInEmergencyState',
    'unit_of_measurement': None,
  })
# ---
# name: test_water_heater[binary_sensor.altherma_climatecontrol_is_in_emergency_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Altherma ClimateControl Is In Emergency State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_climatecontrol_is_in_emergency_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_water_heater[binary_sensor.altherma_climatecontrol_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_climatecontrol_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Error State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_water_heater[binary_sensor.altherma_climatecontrol_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Altherma ClimateControl Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_climatecontrol_is_in_error_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_water_heater[binary_sensor.altherma_climatecontrol_is_in_installer_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_climatecontrol_is_in_installer_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Installer State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_None_isInInstallerState',
    'unit_of_measurement': None,
  })
# ---
# name: test_water_heater[binary_sensor.altherma_climatecontrol_is_in_installer_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma ClimateControl Is In Installer State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_climatecontrol_is_in_installer_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_water_heater[binary_sensor.altherma_climatecontrol_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_climatecontrol_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Warning State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_water_heater[binary_sensor.altherma_climatecontrol_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Altherma ClimateControl Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_climatecontrol_is_in_warning_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_water_heater[binary_sensor.altherma_domestichotwatertank_is_holiday_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_holiday_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Is Holiday Mode Active',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_None_isHolidayModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_water_heater[binary_sensor.altherma_domestichotwatertank_is_holiday_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma DomesticHotWaterTank Is Holiday Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_holiday_mode_active',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_water_heater[binary_sensor.altherma_domestichotwatertank_is_in_emergency_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_in_emergency_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Is In Emergency State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_None_isInEmergencyState',
    'unit_of_measurement': None,
  })
# ---
# name: test_water_heater[binary_sensor.altherma_domestichotwatertank_is_in_emergency_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Altherma DomesticHotWaterTank Is In Emergency State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_in_emergency_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_water_heater[binary_sensor.altherma_domestichotwatertank_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Is In Error State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_water_heater[binary_sensor.altherma_domestichotwatertank_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Altherma DomesticHotWaterTank Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_in_error_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_water_heater[binary_sensor.altherma_domestichotwatertank_is_in_installer_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_in_installer_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Is In Installer State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_None_isInInstallerState',
    'unit_of_measurement': None,
  })
# ---
# name: test_water_heater[binary_sensor.altherma_domestichotwatertank_is_in_installer_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma DomesticHotWaterTank Is In Installer State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_in_installer_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_water_heater[binary_sensor.altherma_domestichotwatertank_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Is In Warning State',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_water_heater[binary_sensor.altherma_domestichotwatertank_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Altherma DomesticHotWaterTank Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_in_warning_state',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_water_heater[binary_sensor.altherma_domestichotwatertank_is_powerful_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_powerful_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Is Powerful Mode Active',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_None_isPowerfulModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_water_heater[binary_sensor.altherma_domestichotwatertank_is_powerful_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma DomesticHotWaterTank Is Powerful Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_powerful_mode_active',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_water_heater[binary_sensor.altherma_gateway_is_firmware_update_supported-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_gateway_is_firmware_update_supported',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Is Firmware Update Supported',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_gateway_None_isFirmwareUpdateSupported',
    'unit_of_measurement': None,
  })
# ---
# name: test_water_heater[binary_sensor.altherma_gateway_is_firmware_update_supported-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma Gateway Is Firmware Update Supported',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_gateway_is_firmware_update_supported',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_water_heater[climate.altherma_leaving_water_offset-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
      ]),
      'max_temp': 10,
      'min_temp': -10,
      'preset_modes': list([
        'away',
        'none',
      ]),
      'target_temp_step': 1,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'climate',
    'entity_category': None,
    'entity_id': 'climate.altherma_leaving_water_offset',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Altherma Leaving Water Offset',
    'platform': 'daikin_onecta',
    'supported_features': <ClimateEntityFeature: 17>,
    'translation_key': 'daikin_onecta',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_leavingWaterOffset',
    'unit_of_measurement': None,
  })
# ---
# name: test_water_heater[climate.altherma_leaving_water_offset-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 26,
      'friendly_name': 'Altherma Leaving Water Offset',
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
      ]),
      'max_temp': 10,
      'min_temp': -10,
      'preset_mode': 'none',
      'preset_modes': list([
        'away',
        'none',
      ]),
      'supported_features': <ClimateEntityFeature: 17>,
      'target_temp_step': 1,
      'temperature': 0,
    }),
    'context': <ANY>,
    'entity_id': 'climate.altherma_leaving_water_offset',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'heat',
  })
# ---
# name: test_water_heater[climate.altherma_leaving_water_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
      ]),
      'max_temp': None,
      'min_temp': None,
      'preset_modes': list([
        'away',
        'none',
      ]),
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'climate',
    'entity_category': None,
    'entity_id': 'climate.altherma_leaving_water_temperature',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Altherma Leaving Water Temperature',
    'platform': 'daikin_onecta',
    'supported_features': <ClimateEntityFeature: 16>,
    'translation_key': 'daikin_onecta',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_leavingWaterTemperature',
    'unit_of_measurement': None,
  })
# ---
# name: test_water_heater[climate.altherma_leaving_water_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 26,
      'friendly_name': 'Altherma Leaving Water Temperature',
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
      ]),
      'max_temp': None,
      'min_temp': None,
      'preset_mode': 'none',
      'preset_modes': list([
        'away',
        'none',
      ]),
      'supported_features': <ClimateEntityFeature: 16>,
    }),
    'context': <ANY>,
    'entity_id': 'climate.altherma_leaving_water_temperature',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'heat',
  })
# ---
# name: test_water_heater[climate.altherma_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
      ]),
      'max_temp': 23,
      'min_temp': 18,
      'preset_modes': list([
        'away',
        'none',
      ]),
      'target_temp_step': 0.5,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'climate',
    'entity_category': None,
    'entity_id': 'climate.altherma_room_temperature',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Altherma Room Temperature',
    'platform': 'daikin_onecta',
    'supported_features': <ClimateEntityFeature: 17>,
    'translation_key': 'daikin_onecta',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_roomTemperature',
    'unit_of_measurement': None,
  })
# ---
# name: test_water_heater[climate.altherma_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 19.4,
      'friendly_name': 'Altherma Room Temperature',
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
      ]),
      'max_temp': 23,
      'min_temp': 18,
      'preset_mode': 'none',
      'preset_modes': list([
        'away',
        'none',
      ]),
      'supported_features': <ClimateEntityFeature: 17>,
      'target_temp_step': 0.5,
      'temperature': 19,
    }),
    'context': <ANY>,
    'entity_id': 'climate.altherma_room_temperature',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'heat',
  })
# ---
# name: test_water_heater[select.altherma_climatecontrol_schedule-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'User defined 1',
        'User defined 2',
        'User defined 3',
        'off',
      ]),
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': None,
    'entity_id': 'select.altherma_climatecontrol_schedule',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:calendar-clock',
    'original_name': 'ClimateControl Schedule',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_schedule',
    'unit_of_measurement': None,
  })
# ---
# name: test_water_heater[select.altherma_climatecontrol_schedule-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma ClimateControl Schedule',
      'icon': 'mdi:calendar-clock',
      'options': list([
        'User defined 1',
        'User defined 2',
        'User defined 3',
        'off',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.altherma_climatecontrol_schedule',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_water_heater[sensor.altherma_climatecontrol_control_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_control_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:alphabetical',
    'original_name': 'ClimateControl Control Mode',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_None_controlMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_water_heater[sensor.altherma_climatecontrol_control_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma ClimateControl Control Mode',
      'icon': 'mdi:alphabetical',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_control_mode',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'roomTemperature',
  })
# ---
# name: test_water_heater[sensor.altherma_climatecontrol_cooling_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_cooling_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_electrical_cooling_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_water_heater[sensor.altherma_climatecontrol_cooling_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Altherma ClimateControl Cooling Daily Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_cooling_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_water_heater[sensor.altherma_climatecontrol_cooling_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_cooling_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_electrical_cooling_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_water_heater[sensor.altherma_climatecontrol_cooling_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Altherma ClimateControl Cooling Weekly Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_cooling_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_water_heater[sensor.altherma_climatecontrol_cooling_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_cooling_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_electrical_cooling_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_water_heater[sensor.altherma_climatecontrol_cooling_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Altherma ClimateControl Cooling Yearly Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_cooling_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_water_heater[sensor.altherma_climatecontrol_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_climatecontrol_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Error Code',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_water_heater[sensor.altherma_climatecontrol_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma ClimateControl Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_error_code',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_water_heater[sensor.altherma_climatecontrol_heating_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_heating_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_electrical_heating_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_water_heater[sensor.altherma_climatecontrol_heating_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Altherma ClimateControl Heating Daily Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_heating_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '5',
  })
# ---
# name: test_water_heater[sensor.altherma_climatecontrol_heating_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_heating_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_electrical_heating_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_water_heater[sensor.altherma_climatecontrol_heating_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Altherma ClimateControl Heating Weekly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_heating_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '7',
  })
# ---
# name: test_water_heater[sensor.altherma_climatecontrol_heating_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_heating_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_electrical_heating_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_water_heater[sensor.altherma_climatecontrol_heating_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Altherma ClimateControl Heating Yearly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_heating_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '1035',
  })
# ---
# name: test_water_heater[sensor.altherma_climatecontrol_leaving_water_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_leaving_water_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Leaving Water Temperature',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_sensoryData_leavingWaterTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_water_heater[sensor.altherma_climatecontrol_leaving_water_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Altherma ClimateControl Leaving Water Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_leaving_water_temperature',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '26',
  })
# ---
# name: test_water_heater[sensor.altherma_climatecontrol_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_climatecontrol_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Name',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_water_heater[sensor.altherma_climatecontrol_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma ClimateControl Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_name',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'Altherma',
  })
# ---
# name: test_water_heater[sensor.altherma_climatecontrol_outdoor_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_outdoor_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Outdoor Temperature',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_sensoryData_outdoorTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_water_heater[sensor.altherma_climatecontrol_outdoor_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Altherma ClimateControl Outdoor Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_outdoor_temperature',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '10',
  })
# ---
# name: test_water_heater[sensor.altherma_climatecontrol_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_room_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Room Temperature',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_sensoryData_roomTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_water_heater[sensor.altherma_climatecontrol_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Altherma ClimateControl Room Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_room_temperature',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '19.4',
  })
# ---
# name: test_water_heater[sensor.altherma_climatecontrol_setpoint_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_setpoint_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:alphabetical',
    'original_name': 'ClimateControl Setpoint Mode',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_None_setpointMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_water_heater[sensor.altherma_climatecontrol_setpoint_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma ClimateControl Setpoint Mode',
      'icon': 'mdi:alphabetical',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_setpoint_mode',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'weatherDependentHeatingFixedCooling',
  })
# ---
# name: test_water_heater[sensor.altherma_domestichotwatertank_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_domestichotwatertank_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Error Code',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_water_heater[sensor.altherma_domestichotwatertank_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma DomesticHotWaterTank Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_domestichotwatertank_error_code',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_water_heater[sensor.altherma_domestichotwatertank_heating_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_domestichotwatertank_heating_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'DomesticHotWaterTank Heating Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_electrical_heating_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_water_heater[sensor.altherma_domestichotwatertank_heating_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Altherma DomesticHotWaterTank Heating Daily Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_domestichotwatertank_heating_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_water_heater[sensor.altherma_domestichotwatertank_heating_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_domestichotwatertank_heating_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'DomesticHotWaterTank Heating Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_electrical_heating_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_water_heater[sensor.altherma_domestichotwatertank_heating_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Altherma DomesticHotWaterTank Heating Weekly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_domestichotwatertank_heating_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '4',
  })
# ---
# name: test_water_heater[sensor.altherma_domestichotwatertank_heating_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_domestichotwatertank_heating_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'DomesticHotWaterTank Heating Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_electrical_heating_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_water_heater[sensor.altherma_domestichotwatertank_heating_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Altherma DomesticHotWaterTank Heating Yearly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_domestichotwatertank_heating_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '281',
  })
# ---
# name: test_water_heater[sensor.altherma_domestichotwatertank_heatup_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_domestichotwatertank_heatup_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:alphabetical',
    'original_name': 'DomesticHotWaterTank Heatup Mode',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_None_heatupMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_water_heater[sensor.altherma_domestichotwatertank_heatup_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma DomesticHotWaterTank Heatup Mode',
      'icon': 'mdi:alphabetical',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_domestichotwatertank_heatup_mode',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'reheatOnly',
  })
# ---
# name: test_water_heater[sensor.altherma_domestichotwatertank_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_domestichotwatertank_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Name',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_water_heater[sensor.altherma_domestichotwatertank_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma DomesticHotWaterTank Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_domestichotwatertank_name',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_water_heater[sensor.altherma_domestichotwatertank_setpoint_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_domestichotwatertank_setpoint_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:alphabetical',
    'original_name': 'DomesticHotWaterTank Setpoint Mode',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_None_setpointMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_water_heater[sensor.altherma_domestichotwatertank_setpoint_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma DomesticHotWaterTank Setpoint Mode',
      'icon': 'mdi:alphabetical',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_domestichotwatertank_setpoint_mode',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'fixed',
  })
# ---
# name: test_water_heater[sensor.altherma_domestichotwatertank_tank_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_domestichotwatertank_tank_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': 'mdi:bathtub-outline',
    'original_name': 'DomesticHotWaterTank Tank Temperature',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_sensoryData_tankTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_water_heater[sensor.altherma_domestichotwatertank_tank_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Altherma DomesticHotWaterTank Tank Temperature',
      'icon': 'mdi:bathtub-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_domestichotwatertank_tank_temperature',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '46',
  })
# ---
# name: test_water_heater[sensor.altherma_gateway_firmware_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_gateway_firmware_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Firmware Version',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_gateway_None_firmwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_water_heater[sensor.altherma_gateway_firmware_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma Gateway Firmware Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_gateway_firmware_version',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '3.2.5',
  })
# ---
# name: test_water_heater[sensor.altherma_gateway_ip_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_gateway_ip_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:ip-network',
    'original_name': 'Gateway Ip Address',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_gateway_None_ipAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_water_heater[sensor.altherma_gateway_ip_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma Gateway Ip Address',
      'icon': 'mdi:ip-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_gateway_ip_address',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '192.168.1.207',
  })
# ---
# name: test_water_heater[sensor.altherma_gateway_mac_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_gateway_mac_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Mac Address',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_gateway_None_macAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_water_heater[sensor.altherma_gateway_mac_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma Gateway Mac Address',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_gateway_mac_address',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '00:e9:3a:67:14:a6',
  })
# ---
# name: test_water_heater[sensor.altherma_gateway_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_gateway_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Model Info',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_gateway_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_water_heater[sensor.altherma_gateway_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma Gateway Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_gateway_model_info',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'BRP069A78',
  })
# ---
# name: test_water_heater[sensor.altherma_gateway_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_gateway_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Name',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_gateway_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_water_heater[sensor.altherma_gateway_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma Gateway Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_gateway_name',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'Gateway',
  })
# ---
# name: test_water_heater[sensor.altherma_indoorunithydro_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_indoorunithydro_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnitHydro Model Info',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_indoorUnitHydro_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_water_heater[sensor.altherma_indoorunithydro_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma IndoorUnitHydro Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_indoorunithydro_model_info',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'EHVX08S23EJ9W',
  })
# ---
# name: test_water_heater[sensor.altherma_indoorunithydro_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_indoorunithydro_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnitHydro Name',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_indoorUnitHydro_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_water_heater[sensor.altherma_indoorunithydro_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma IndoorUnitHydro Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_indoorunithydro_name',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'Indoor Hydro Unit',
  })
# ---
# name: test_water_heater[sensor.altherma_indoorunithydro_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_indoorunithydro_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnitHydro Software Version',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_indoorUnitHydro_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_water_heater[sensor.altherma_indoorunithydro_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma IndoorUnitHydro Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_indoorunithydro_software_version',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0223',
  })
# ---
# name: test_water_heater[sensor.altherma_outdoorunit_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_outdoorunit_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Name',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_outdoorUnit_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_water_heater[sensor.altherma_outdoorunit_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma OutdoorUnit Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_outdoorunit_name',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'Outdoor Unit',
  })
# ---
# name: test_water_heater[sensor.altherma_outdoorunit_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_outdoorunit_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Software Version',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_outdoorUnit_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_water_heater[sensor.altherma_outdoorunit_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma OutdoorUnit Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_outdoorunit_software_version',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'FFFF',
  })
# ---
# name: test_water_heater[sensor.altherma_ratelimit_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_ratelimit_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit day',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_limitsensor_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_water_heater[sensor.altherma_ratelimit_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma RateLimit day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_ratelimit_day',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_water_heater[sensor.altherma_ratelimit_minute-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_ratelimit_minute',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit minute',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_limitsensor_minute',
    'unit_of_measurement': None,
  })
# ---
# name: test_water_heater[sensor.altherma_ratelimit_minute-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma RateLimit minute',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_ratelimit_minute',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_water_heater[sensor.altherma_ratelimit_ratelimit_reset-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_ratelimit_ratelimit_reset',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit ratelimit_reset',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_limitsensor_ratelimit_reset',
    'unit_of_measurement': None,
  })
# ---
# name: test_water_heater[sensor.altherma_ratelimit_ratelimit_reset-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma RateLimit ratelimit_reset',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_ratelimit_ratelimit_reset',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_water_heater[sensor.altherma_ratelimit_remaining_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_ratelimit_remaining_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_day',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_limitsensor_remaining_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_water_heater[sensor.altherma_ratelimit_remaining_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma RateLimit remaining_day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_ratelimit_remaining_day',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_water_heater[sensor.altherma_ratelimit_remaining_minutes-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_ratelimit_remaining_minutes',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_minutes',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_limitsensor_remaining_minutes',
    'unit_of_measurement': None,
  })
# ---
# name: test_water_heater[sensor.altherma_ratelimit_remaining_minutes-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma RateLimit remaining_minutes',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_ratelimit_remaining_minutes',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_water_heater[sensor.altherma_ratelimit_retry_after-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_ratelimit_retry_after',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit retry_after',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_limitsensor_retry_after',
    'unit_of_measurement': None,
  })
# ---
# name: test_water_heater[sensor.altherma_ratelimit_retry_after-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma RateLimit retry_after',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_ratelimit_retry_after',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_water_heater[sensor.altherma_userinterface_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_userinterface_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'UserInterface Model Info',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_userInterface_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_water_heater[sensor.altherma_userinterface_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma UserInterface Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_userinterface_model_info',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'EHVX08S23EJ9W',
  })
# ---
# name: test_water_heater[sensor.altherma_userinterface_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_userinterface_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'UserInterface Name',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_userInterface_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_water_heater[sensor.altherma_userinterface_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma UserInterface Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_userinterface_name',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'User Interface',
  })
# ---
# name: test_water_heater[sensor.altherma_userinterface_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_userinterface_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'UserInterface Software Version',
    'platform': 'daikin_onecta',
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_userInterface_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_water_heater[sensor.altherma_userinterface_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma UserInterface Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_userinterface_software_version',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '7.3.0',
  })
# ---
# name: test_water_heater[water_heater.altherma-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'max_temp': 53.0,
      'min_temp': 30.0,
      'operation_list': list([
        'off',
        'heat_pump',
        'performance',
      ]),
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'water_heater',
    'entity_category': None,
    'entity_id': 'water_heater.altherma',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Altherma',
    'platform': 'daikin_onecta',
    'supported_features': <WaterHeaterEntityFeature: 3>,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa',
    'unit_of_measurement': None,
  })
# ---
# name: test_water_heater[water_heater.altherma-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 46.0,
      'friendly_name': 'Altherma',
      'max_temp': 53.0,
      'min_temp': 30.0,
      'operation_list': list([
        'off',
        'heat_pump',
        'performance',
      ]),
      'operation_mode': 'performance',
      'supported_features': <WaterHeaterEntityFeature: 3>,
      'target_temp_high': None,
      'target_temp_low': None,
      'target_temp_step': 1.0,
      'temperature': 48.0,
    }),
    'context': <ANY>,
    'entity_id': 'water_heater.altherma',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'performance',
  })
# ---
